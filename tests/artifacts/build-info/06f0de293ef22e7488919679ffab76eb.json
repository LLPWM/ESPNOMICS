{
	"id": "06f0de293ef22e7488919679ffab76eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"tests/USDP-ORACLE.sol": {
				"content": "// SPDX-License-Identifier: MIT LICENSE\n\n\npragma solidity ^0.8.17.0;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract PriceOracle {\n    using SafeMath for uint256;\n\n    AggregatorV3Interface private priceOracle;\n    uint256 public unstableColPrice;\n    address public datafeed;\n\n    function setDataFeedAddress(address contractaddress) external {\n        datafeed = contractaddress;\n        priceOracle = AggregatorV3Interface(datafeed);\n    }\n\n    function colPriceToWei() external {\n        ( ,uint256 price, , , ) = priceOracle.latestRoundData();\n        unstableColPrice = price.mul(1e10);\n    }\n\n    function rawColPrice() external view returns (uint256) {\n        ( ,uint256 price, , , ) = priceOracle.latestRoundData();\n        return price;\n    }\n\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      uint256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "uint256",
									"name": "answer",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"uint256\",\"name\":\"answer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8fdf84a1d60cf454027d36c1cb44023021f4f9cfae26288e3a7e0604a926e454\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a64569667bd0f2d6d77409c714e590570774ab502df34afadd436eb1e8cfa915\",\"dweb:/ipfs/QmWKHE2AVdKRpXnpirTAnaBi43nCJfTfZTKUX39JuSoNDt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208d6cad77a84746d5d8d2e6bfae22fdd7367df4e98a00e9f9e118e5a9a91a579564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208d6cad77a84746d5d8d2e6bfae22fdd7367df4e98a00e9f9e118e5a9a91a579564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 PUSH13 0xAD77A84746D5D8D2E6BFAE22FD 0xD7 CALLDATASIZE PUSH30 0xF4E98A00E9F9E118E5A9A91A579564736F6C634300081100330000000000 ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208d6cad77a84746d5d8d2e6bfae22fdd7367df4e98a00e9f9e118e5a9a91a579564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 PUSH13 0xAD77A84746D5D8D2E6BFAE22FD 0xD7 CALLDATASIZE PUSH30 0xF4E98A00E9F9E118E5A9A91A579564736F6C634300081100330000000000 ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d6cad77a84746d5d8d2e6bfae22fdd7367df4e98a00e9f9e118e5a9a91a579564736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"tests/USDP-ORACLE.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tests/USDP-ORACLE.sol": {
				"PriceOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "colPriceToWei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "datafeed",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rawColPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractaddress",
									"type": "address"
								}
							],
							"name": "setDataFeedAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstableColPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/USDP-ORACLE.sol\":206:854  contract PriceOracle {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/USDP-ORACLE.sol\":206:854  contract PriceOracle {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26ba7898\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2dc47153\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5e6a4fb0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x97b85420\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf630ba51\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"tests/USDP-ORACLE.sol\":380:540  function setDataFeedAddress(address contractaddress) external {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"tests/USDP-ORACLE.sol\":350:373  address public datafeed */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/USDP-ORACLE.sol\":313:344  uint256 public unstableColPrice */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/USDP-ORACLE.sol\":546:696  function colPriceToWei() external {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"tests/USDP-ORACLE.sol\":702:851  function rawColPrice() external view returns (uint256) {... */\n    tag_7:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/USDP-ORACLE.sol\":380:540  function setDataFeedAddress(address contractaddress) external {... */\n    tag_11:\n        /* \"tests/USDP-ORACLE.sol\":463:478  contractaddress */\n      dup1\n        /* \"tests/USDP-ORACLE.sol\":452:460  datafeed */\n      0x02\n      0x00\n        /* \"tests/USDP-ORACLE.sol\":452:478  datafeed = contractaddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"tests/USDP-ORACLE.sol\":524:532  datafeed */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/USDP-ORACLE.sol\":488:499  priceOracle */\n      0x00\n      dup1\n        /* \"tests/USDP-ORACLE.sol\":488:533  priceOracle = AggregatorV3Interface(datafeed) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"tests/USDP-ORACLE.sol\":380:540  function setDataFeedAddress(address contractaddress) external {... */\n      pop\n      jump\t// out\n        /* \"tests/USDP-ORACLE.sol\":350:373  address public datafeed */\n    tag_13:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"tests/USDP-ORACLE.sol\":313:344  uint256 public unstableColPrice */\n    tag_17:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"tests/USDP-ORACLE.sol\":546:696  function colPriceToWei() external {... */\n    tag_21:\n        /* \"tests/USDP-ORACLE.sol\":593:606  uint256 price */\n      0x00\n        /* \"tests/USDP-ORACLE.sol\":616:627  priceOracle */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/USDP-ORACLE.sol\":616:643  priceOracle.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"tests/USDP-ORACLE.sol\":616:645  priceOracle.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"tests/USDP-ORACLE.sol\":590:645  ( ,uint256 price, , , ) = priceOracle.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"tests/USDP-ORACLE.sol\":674:689  price.mul(1e10) */\n      tag_31\n        /* \"tests/USDP-ORACLE.sol\":684:688  1e10 */\n      0x02540be400\n        /* \"tests/USDP-ORACLE.sol\":674:679  price */\n      dup3\n        /* \"tests/USDP-ORACLE.sol\":674:683  price.mul */\n      tag_32\n      swap1\n        /* \"tests/USDP-ORACLE.sol\":674:689  price.mul(1e10) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_31:\n        /* \"tests/USDP-ORACLE.sol\":655:671  unstableColPrice */\n      0x01\n        /* \"tests/USDP-ORACLE.sol\":655:689  unstableColPrice = price.mul(1e10) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tests/USDP-ORACLE.sol\":580:696  {... */\n      pop\n        /* \"tests/USDP-ORACLE.sol\":546:696  function colPriceToWei() external {... */\n      jump\t// out\n        /* \"tests/USDP-ORACLE.sol\":702:851  function rawColPrice() external view returns (uint256) {... */\n    tag_23:\n        /* \"tests/USDP-ORACLE.sol\":748:755  uint256 */\n      0x00\n        /* \"tests/USDP-ORACLE.sol\":770:783  uint256 price */\n      dup1\n        /* \"tests/USDP-ORACLE.sol\":793:804  priceOracle */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/USDP-ORACLE.sol\":793:820  priceOracle.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"tests/USDP-ORACLE.sol\":793:822  priceOracle.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_36:\n        /* \"tests/USDP-ORACLE.sol\":767:822  ( ,uint256 price, , , ) = priceOracle.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"tests/USDP-ORACLE.sol\":839:844  price */\n      dup1\n        /* \"tests/USDP-ORACLE.sol\":832:844  return price */\n      swap2\n      pop\n      pop\n        /* \"tests/USDP-ORACLE.sol\":702:851  function rawColPrice() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_41:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_43:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_44:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_62\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_43\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_45:\n        /* \"#utility.yul\":641:665   */\n      tag_64\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_44\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_65:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_46:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_67\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_45\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_70\n      tag_41\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":917:1036   */\n    tag_69:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_71\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_46\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_47:\n        /* \"#utility.yul\":1263:1287   */\n      tag_73\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_44\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_15:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_75\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_47\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1605   */\n    tag_48:\n        /* \"#utility.yul\":1565:1572   */\n      0x00\n        /* \"#utility.yul\":1594:1599   */\n      dup2\n        /* \"#utility.yul\":1583:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_49:\n        /* \"#utility.yul\":1698:1722   */\n      tag_78\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_48\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_19:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_80\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_49\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2068   */\n    tag_50:\n        /* \"#utility.yul\":1999:2006   */\n      0x00\n        /* \"#utility.yul\":2039:2061   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":2032:2037   */\n      dup3\n        /* \"#utility.yul\":2028:2062   */\n      and\n        /* \"#utility.yul\":2017:2062   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2074:2194   */\n    tag_51:\n        /* \"#utility.yul\":2146:2169   */\n      tag_83\n        /* \"#utility.yul\":2163:2168   */\n      dup2\n        /* \"#utility.yul\":2146:2169   */\n      tag_50\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2139:2144   */\n      dup2\n        /* \"#utility.yul\":2136:2170   */\n      eq\n        /* \"#utility.yul\":2126:2188   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2184:2185   */\n      0x00\n        /* \"#utility.yul\":2181:2182   */\n      dup1\n        /* \"#utility.yul\":2174:2186   */\n      revert\n        /* \"#utility.yul\":2126:2188   */\n    tag_84:\n        /* \"#utility.yul\":2074:2194   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2200:2341   */\n    tag_52:\n        /* \"#utility.yul\":2256:2261   */\n      0x00\n        /* \"#utility.yul\":2287:2293   */\n      dup2\n        /* \"#utility.yul\":2281:2294   */\n      mload\n        /* \"#utility.yul\":2272:2294   */\n      swap1\n      pop\n        /* \"#utility.yul\":2303:2335   */\n      tag_86\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2303:2335   */\n      tag_51\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2200:2341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2347:2469   */\n    tag_53:\n        /* \"#utility.yul\":2420:2444   */\n      tag_88\n        /* \"#utility.yul\":2438:2443   */\n      dup2\n        /* \"#utility.yul\":2420:2444   */\n      tag_48\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2413:2418   */\n      dup2\n        /* \"#utility.yul\":2410:2445   */\n      eq\n        /* \"#utility.yul\":2400:2463   */\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2459:2460   */\n      0x00\n        /* \"#utility.yul\":2456:2457   */\n      dup1\n        /* \"#utility.yul\":2449:2461   */\n      revert\n        /* \"#utility.yul\":2400:2463   */\n    tag_89:\n        /* \"#utility.yul\":2347:2469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2475:2618   */\n    tag_54:\n        /* \"#utility.yul\":2532:2537   */\n      0x00\n        /* \"#utility.yul\":2563:2569   */\n      dup2\n        /* \"#utility.yul\":2557:2570   */\n      mload\n        /* \"#utility.yul\":2548:2570   */\n      swap1\n      pop\n        /* \"#utility.yul\":2579:2612   */\n      tag_91\n        /* \"#utility.yul\":2606:2611   */\n      dup2\n        /* \"#utility.yul\":2579:2612   */\n      tag_53\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2475:2618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2624:3597   */\n    tag_30:\n        /* \"#utility.yul\":2728:2734   */\n      0x00\n        /* \"#utility.yul\":2736:2742   */\n      dup1\n        /* \"#utility.yul\":2744:2750   */\n      0x00\n        /* \"#utility.yul\":2752:2758   */\n      dup1\n        /* \"#utility.yul\":2760:2766   */\n      0x00\n        /* \"#utility.yul\":2809:2812   */\n      0xa0\n        /* \"#utility.yul\":2797:2806   */\n      dup7\n        /* \"#utility.yul\":2788:2795   */\n      dup9\n        /* \"#utility.yul\":2784:2807   */\n      sub\n        /* \"#utility.yul\":2780:2813   */\n      slt\n        /* \"#utility.yul\":2777:2897   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":2816:2895   */\n      tag_94\n      tag_41\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2777:2897   */\n    tag_93:\n        /* \"#utility.yul\":2936:2937   */\n      0x00\n        /* \"#utility.yul\":2961:3024   */\n      tag_95\n        /* \"#utility.yul\":3016:3023   */\n      dup9\n        /* \"#utility.yul\":3007:3013   */\n      dup3\n        /* \"#utility.yul\":2996:3005   */\n      dup10\n        /* \"#utility.yul\":2992:3014   */\n      add\n        /* \"#utility.yul\":2961:3024   */\n      tag_52\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2951:3024   */\n      swap6\n      pop\n        /* \"#utility.yul\":2907:3034   */\n      pop\n        /* \"#utility.yul\":3073:3075   */\n      0x20\n        /* \"#utility.yul\":3099:3163   */\n      tag_96\n        /* \"#utility.yul\":3155:3162   */\n      dup9\n        /* \"#utility.yul\":3146:3152   */\n      dup3\n        /* \"#utility.yul\":3135:3144   */\n      dup10\n        /* \"#utility.yul\":3131:3153   */\n      add\n        /* \"#utility.yul\":3099:3163   */\n      tag_54\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3089:3163   */\n      swap5\n      pop\n        /* \"#utility.yul\":3044:3173   */\n      pop\n        /* \"#utility.yul\":3212:3214   */\n      0x40\n        /* \"#utility.yul\":3238:3302   */\n      tag_97\n        /* \"#utility.yul\":3294:3301   */\n      dup9\n        /* \"#utility.yul\":3285:3291   */\n      dup3\n        /* \"#utility.yul\":3274:3283   */\n      dup10\n        /* \"#utility.yul\":3270:3292   */\n      add\n        /* \"#utility.yul\":3238:3302   */\n      tag_54\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3228:3302   */\n      swap4\n      pop\n        /* \"#utility.yul\":3183:3312   */\n      pop\n        /* \"#utility.yul\":3351:3353   */\n      0x60\n        /* \"#utility.yul\":3377:3441   */\n      tag_98\n        /* \"#utility.yul\":3433:3440   */\n      dup9\n        /* \"#utility.yul\":3424:3430   */\n      dup3\n        /* \"#utility.yul\":3413:3422   */\n      dup10\n        /* \"#utility.yul\":3409:3431   */\n      add\n        /* \"#utility.yul\":3377:3441   */\n      tag_54\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3367:3441   */\n      swap3\n      pop\n        /* \"#utility.yul\":3322:3451   */\n      pop\n        /* \"#utility.yul\":3490:3493   */\n      0x80\n        /* \"#utility.yul\":3517:3580   */\n      tag_99\n        /* \"#utility.yul\":3572:3579   */\n      dup9\n        /* \"#utility.yul\":3563:3569   */\n      dup3\n        /* \"#utility.yul\":3552:3561   */\n      dup10\n        /* \"#utility.yul\":3548:3570   */\n      add\n        /* \"#utility.yul\":3517:3580   */\n      tag_52\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3507:3580   */\n      swap2\n      pop\n        /* \"#utility.yul\":3461:3590   */\n      pop\n        /* \"#utility.yul\":2624:3597   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3603:3783   */\n    tag_55:\n        /* \"#utility.yul\":3651:3728   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3648:3649   */\n      0x00\n        /* \"#utility.yul\":3641:3729   */\n      mstore\n        /* \"#utility.yul\":3748:3752   */\n      0x11\n        /* \"#utility.yul\":3745:3746   */\n      0x04\n        /* \"#utility.yul\":3738:3753   */\n      mstore\n        /* \"#utility.yul\":3772:3776   */\n      0x24\n        /* \"#utility.yul\":3769:3770   */\n      0x00\n        /* \"#utility.yul\":3762:3777   */\n      revert\n        /* \"#utility.yul\":3789:4199   */\n    tag_39:\n        /* \"#utility.yul\":3829:3836   */\n      0x00\n        /* \"#utility.yul\":3852:3872   */\n      tag_102\n        /* \"#utility.yul\":3870:3871   */\n      dup3\n        /* \"#utility.yul\":3852:3872   */\n      tag_48\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3847:3872   */\n      swap2\n      pop\n        /* \"#utility.yul\":3886:3906   */\n      tag_103\n        /* \"#utility.yul\":3904:3905   */\n      dup4\n        /* \"#utility.yul\":3886:3906   */\n      tag_48\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3881:3906   */\n      swap3\n      pop\n        /* \"#utility.yul\":3941:3942   */\n      dup3\n        /* \"#utility.yul\":3938:3939   */\n      dup3\n        /* \"#utility.yul\":3934:3943   */\n      mul\n        /* \"#utility.yul\":3963:3993   */\n      tag_104\n        /* \"#utility.yul\":3981:3992   */\n      dup2\n        /* \"#utility.yul\":3963:3993   */\n      tag_48\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3952:3993   */\n      swap2\n      pop\n        /* \"#utility.yul\":4142:4143   */\n      dup3\n        /* \"#utility.yul\":4133:4140   */\n      dup3\n        /* \"#utility.yul\":4129:4144   */\n      div\n        /* \"#utility.yul\":4126:4127   */\n      dup5\n        /* \"#utility.yul\":4123:4145   */\n      eq\n        /* \"#utility.yul\":4103:4104   */\n      dup4\n        /* \"#utility.yul\":4096:4105   */\n      iszero\n        /* \"#utility.yul\":4076:4159   */\n      or\n        /* \"#utility.yul\":4053:4192   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":4172:4190   */\n      tag_106\n      tag_55\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4053:4192   */\n    tag_105:\n        /* \"#utility.yul\":3837:4199   */\n      pop\n        /* \"#utility.yul\":3789:4199   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122008bdb9d17fd5a6ee3f9e983148b10b84c09c99dbeaa11f4d69b9da5f3e0b1de264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061059a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806326ba78981461005c5780632dc47153146100785780635e6a4fb01461009657806397b85420146100b4578063f630ba51146100be575b600080fd5b6100766004803603810190610071919061037f565b6100dc565b005b610080610182565b60405161008d91906103bb565b60405180910390f35b61009e6101a8565b6040516100ab91906103ef565b60405180910390f35b6100bc6101ae565b005b6100c6610267565b6040516100d391906103ef565b60405180910390f35b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102409190610478565b50505091505061025e6402540be4008261030690919063ffffffff16565b60018190555050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610478565b5050509150508091505090565b600081836103149190610522565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061034c82610321565b9050919050565b61035c81610341565b811461036757600080fd5b50565b60008135905061037981610353565b92915050565b6000602082840312156103955761039461031c565b5b60006103a38482850161036a565b91505092915050565b6103b581610341565b82525050565b60006020820190506103d060008301846103ac565b92915050565b6000819050919050565b6103e9816103d6565b82525050565b600060208201905061040460008301846103e0565b92915050565b600069ffffffffffffffffffff82169050919050565b6104298161040a565b811461043457600080fd5b50565b60008151905061044681610420565b92915050565b610455816103d6565b811461046057600080fd5b50565b6000815190506104728161044c565b92915050565b600080600080600060a086880312156104945761049361031c565b5b60006104a288828901610437565b95505060206104b388828901610463565b94505060406104c488828901610463565b93505060606104d588828901610463565b92505060806104e688828901610437565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061052d826103d6565b9150610538836103d6565b9250828202610546816103d6565b9150828204841483151761055d5761055c6104f3565b5b509291505056fea264697066735822122008bdb9d17fd5a6ee3f9e983148b10b84c09c99dbeaa11f4d69b9da5f3e0b1de264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26BA7898 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2DC47153 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x5E6A4FB0 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x97B85420 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xF630BA51 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0xDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x1AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH2 0x25E PUSH5 0x2540BE400 DUP3 PUSH2 0x306 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C DUP3 PUSH2 0x321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x341 JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B5 DUP2 PUSH2 0x341 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E9 DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x404 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x429 DUP2 PUSH2 0x40A JUMP JUMPDEST DUP2 EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x446 DUP2 PUSH2 0x420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x455 DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x472 DUP2 PUSH2 0x44C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x494 JUMPI PUSH2 0x493 PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A2 DUP9 DUP3 DUP10 ADD PUSH2 0x437 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4B3 DUP9 DUP3 DUP10 ADD PUSH2 0x463 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4C4 DUP9 DUP3 DUP10 ADD PUSH2 0x463 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4D5 DUP9 DUP3 DUP10 ADD PUSH2 0x463 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4E6 DUP9 DUP3 DUP10 ADD PUSH2 0x437 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x3D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x538 DUP4 PUSH2 0x3D6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x546 DUP2 PUSH2 0x3D6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x55D JUMPI PUSH2 0x55C PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xBD 0xB9 0xD1 PUSH32 0xD5A6EE3F9E983148B10B84C09C99DBEAA11F4D69B9DA5F3E0B1DE264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "206:648:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@colPriceToWei_404": {
									"entryPoint": 430,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@datafeed_371": {
									"entryPoint": 386,
									"id": 371,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_251": {
									"entryPoint": 774,
									"id": 251,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rawColPrice_418": {
									"entryPoint": 615,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setDataFeedAddress_387": {
									"entryPoint": 220,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstableColPrice_369": {
									"entryPoint": 424,
									"id": 369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_uint256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4202:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:3",
														"type": ""
													}
												],
												"src": "1176:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:3",
														"type": ""
													}
												],
												"src": "1300:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1583:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1594:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1583:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1555:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1565:7:3",
														"type": ""
													}
												],
												"src": "1528:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1664:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1671:3:3",
														"type": ""
													}
												],
												"src": "1611:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1843:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1879:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1805:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1817:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1828:4:3",
														"type": ""
													}
												],
												"src": "1735:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2007:61:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2017:45:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2032:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2039:22:3",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:34:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2017:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1989:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1999:7:3",
														"type": ""
													}
												],
												"src": "1963:105:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2116:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2172:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2184:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2174:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2174:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2174:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2139:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2163:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "2146:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2146:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2136:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2136:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2129:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2129:42:3"
															},
															"nodeType": "YulIf",
															"src": "2126:62:3"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2109:5:3",
														"type": ""
													}
												],
												"src": "2074:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2262:79:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2272:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2287:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2281:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2272:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2329:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "2303:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2303:32:3"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2240:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2248:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2256:5:3",
														"type": ""
													}
												],
												"src": "2200:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2390:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2447:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2456:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2459:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2449:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2449:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2449:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2413:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2438:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2420:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2420:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2410:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:43:3"
															},
															"nodeType": "YulIf",
															"src": "2400:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2383:5:3",
														"type": ""
													}
												],
												"src": "2347:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2538:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2548:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2563:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2557:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2557:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2548:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2606:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2579:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2579:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2516:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2524:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2532:5:3",
														"type": ""
													}
												],
												"src": "2475:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:830:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2814:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2816:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2816:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2816:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2788:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2784:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2784:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2809:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:33:3"
															},
															"nodeType": "YulIf",
															"src": "2777:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2907:127:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2922:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2936:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2926:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2951:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2996:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3007:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2992:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2992:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3016:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2961:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2961:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2951:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3044:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3059:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3073:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3063:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3089:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3135:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3146:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3131:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3131:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3155:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3099:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3099:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3183:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3198:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3212:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3202:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3228:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3274:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3285:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3270:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3270:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3294:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3238:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3238:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3228:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3322:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3337:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3341:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3367:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3413:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3424:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3409:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3409:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3433:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3377:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3377:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3367:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3461:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3476:17:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3490:3:3",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3480:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3507:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3552:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3563:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3548:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3548:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3572:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3517:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3517:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3507:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_uint256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2705:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2716:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2728:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2736:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2744:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2752:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2760:6:3",
														"type": ""
													}
												],
												"src": "2624:973:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3648:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3651:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3641:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3641:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3745:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3748:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3738:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3738:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3738:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3769:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3772:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3603:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3837:362:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3847:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3870:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3852:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3847:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3881:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3904:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3886:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3881:1:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3915:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3938:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3941:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:9:3"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "3919:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3952:41:3",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "3981:11:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3963:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:30:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3952:7:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4170:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4172:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4172:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4172:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4103:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4096:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4096:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4126:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4133:7:3"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4142:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4129:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4129:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4123:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4123:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4076:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:83:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4056:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:113:3"
															},
															"nodeType": "YulIf",
															"src": "4053:139:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3820:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3823:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3829:7:3",
														"type": ""
													}
												],
												"src": "3789:410:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_uint256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806326ba78981461005c5780632dc47153146100785780635e6a4fb01461009657806397b85420146100b4578063f630ba51146100be575b600080fd5b6100766004803603810190610071919061037f565b6100dc565b005b610080610182565b60405161008d91906103bb565b60405180910390f35b61009e6101a8565b6040516100ab91906103ef565b60405180910390f35b6100bc6101ae565b005b6100c6610267565b6040516100d391906103ef565b60405180910390f35b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102409190610478565b50505091505061025e6402540be4008261030690919063ffffffff16565b60018190555050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610478565b5050509150508091505090565b600081836103149190610522565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061034c82610321565b9050919050565b61035c81610341565b811461036757600080fd5b50565b60008135905061037981610353565b92915050565b6000602082840312156103955761039461031c565b5b60006103a38482850161036a565b91505092915050565b6103b581610341565b82525050565b60006020820190506103d060008301846103ac565b92915050565b6000819050919050565b6103e9816103d6565b82525050565b600060208201905061040460008301846103e0565b92915050565b600069ffffffffffffffffffff82169050919050565b6104298161040a565b811461043457600080fd5b50565b60008151905061044681610420565b92915050565b610455816103d6565b811461046057600080fd5b50565b6000815190506104728161044c565b92915050565b600080600080600060a086880312156104945761049361031c565b5b60006104a288828901610437565b95505060206104b388828901610463565b94505060406104c488828901610463565b93505060606104d588828901610463565b92505060806104e688828901610437565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061052d826103d6565b9150610538836103d6565b9250828202610546816103d6565b9150828204841483151761055d5761055c6104f3565b5b509291505056fea264697066735822122008bdb9d17fd5a6ee3f9e983148b10b84c09c99dbeaa11f4d69b9da5f3e0b1de264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26BA7898 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2DC47153 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x5E6A4FB0 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x97B85420 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xF630BA51 EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0xDC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x1A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH2 0x1AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC6 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH2 0x25E PUSH5 0x2540BE400 DUP3 PUSH2 0x306 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x478 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C DUP3 PUSH2 0x321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35C DUP2 PUSH2 0x341 JUMP JUMPDEST DUP2 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x379 DUP2 PUSH2 0x353 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x36A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B5 DUP2 PUSH2 0x341 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E9 DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x404 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x429 DUP2 PUSH2 0x40A JUMP JUMPDEST DUP2 EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x446 DUP2 PUSH2 0x420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x455 DUP2 PUSH2 0x3D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x472 DUP2 PUSH2 0x44C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x494 JUMPI PUSH2 0x493 PUSH2 0x31C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A2 DUP9 DUP3 DUP10 ADD PUSH2 0x437 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4B3 DUP9 DUP3 DUP10 ADD PUSH2 0x463 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4C4 DUP9 DUP3 DUP10 ADD PUSH2 0x463 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4D5 DUP9 DUP3 DUP10 ADD PUSH2 0x463 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4E6 DUP9 DUP3 DUP10 ADD PUSH2 0x437 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x3D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x538 DUP4 PUSH2 0x3D6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x546 DUP2 PUSH2 0x3D6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x55D JUMPI PUSH2 0x55C PUSH2 0x4F3 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xBD 0xB9 0xD1 PUSH32 0xD5A6EE3F9E983148B10B84C09C99DBEAA11F4D69B9DA5F3E0B1DE264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "206:648:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;380:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;350:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;313:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;546:150;;;:::i;:::-;;702:149;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;380:160;463:15;452:8;;:26;;;;;;;;;;;;;;;;;;524:8;;;;;;;;;;;488:11;;:45;;;;;;;;;;;;;;;;;;380:160;:::o;350:23::-;;;;;;;;;;;;;:::o;313:31::-;;;;:::o;546:150::-;593:13;616:11;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;590:55;;;;;;674:15;684:4;674:5;:9;;:15;;;;:::i;:::-;655:16;:34;;;;580:116;546:150::o;702:149::-;748:7;770:13;793:11;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;767:55;;;;;;839:5;832:12;;;702:149;:::o;3465:96:1:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:77::-;1565:7;1594:5;1583:16;;1528:77;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:105::-;1999:7;2039:22;2032:5;2028:34;2017:45;;1963:105;;;:::o;2074:120::-;2146:23;2163:5;2146:23;:::i;:::-;2139:5;2136:34;2126:62;;2184:1;2181;2174:12;2126:62;2074:120;:::o;2200:141::-;2256:5;2287:6;2281:13;2272:22;;2303:32;2329:5;2303:32;:::i;:::-;2200:141;;;;:::o;2347:122::-;2420:24;2438:5;2420:24;:::i;:::-;2413:5;2410:35;2400:63;;2459:1;2456;2449:12;2400:63;2347:122;:::o;2475:143::-;2532:5;2563:6;2557:13;2548:22;;2579:33;2606:5;2579:33;:::i;:::-;2475:143;;;;:::o;2624:973::-;2728:6;2736;2744;2752;2760;2809:3;2797:9;2788:7;2784:23;2780:33;2777:120;;;2816:79;;:::i;:::-;2777:120;2936:1;2961:63;3016:7;3007:6;2996:9;2992:22;2961:63;:::i;:::-;2951:73;;2907:127;3073:2;3099:64;3155:7;3146:6;3135:9;3131:22;3099:64;:::i;:::-;3089:74;;3044:129;3212:2;3238:64;3294:7;3285:6;3274:9;3270:22;3238:64;:::i;:::-;3228:74;;3183:129;3351:2;3377:64;3433:7;3424:6;3413:9;3409:22;3377:64;:::i;:::-;3367:74;;3322:129;3490:3;3517:63;3572:7;3563:6;3552:9;3548:22;3517:63;:::i;:::-;3507:73;;3461:129;2624:973;;;;;;;;:::o;3603:180::-;3651:77;3648:1;3641:88;3748:4;3745:1;3738:15;3772:4;3769:1;3762:15;3789:410;3829:7;3852:20;3870:1;3852:20;:::i;:::-;3847:25;;3886:20;3904:1;3886:20;:::i;:::-;3881:25;;3941:1;3938;3934:9;3963:30;3981:11;3963:30;:::i;:::-;3952:41;;4142:1;4133:7;4129:15;4126:1;4123:22;4103:1;4096:9;4076:83;4053:139;;4172:18;;:::i;:::-;4053:139;3837:362;3789:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "286800",
								"executionCost": "324",
								"totalCost": "287124"
							},
							"external": {
								"colPriceToWei()": "infinite",
								"datafeed()": "2514",
								"rawColPrice()": "infinite",
								"setDataFeedAddress(address)": "51103",
								"unstableColPrice()": "2451"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 206,
									"end": 854,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 206,
									"end": 854,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 854,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008bdb9d17fd5a6ee3f9e983148b10b84c09c99dbeaa11f4d69b9da5f3e0b1de264736f6c63430008110033",
									".code": [
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "26BA7898"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "2DC47153"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "5E6A4FB0"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "97B85420"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "F630BA51"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 206,
											"end": 854,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 380,
											"end": 540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 380,
											"end": 540,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 380,
											"end": 540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 380,
											"end": 540,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 380,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 380,
											"end": 540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 380,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 380,
											"end": 540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 350,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 350,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 313,
											"end": 344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 313,
											"end": 344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 546,
											"end": 696,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 546,
											"end": 696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 546,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 546,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 546,
											"end": 696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 546,
											"end": 696,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 546,
											"end": 696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 546,
											"end": 696,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 702,
											"end": 851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 702,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 702,
											"end": 851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 702,
											"end": 851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 702,
											"end": 851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 702,
											"end": 851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 702,
											"end": 851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 380,
											"end": 540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 463,
											"end": 478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 460,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 452,
											"end": 478,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 452,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 524,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 524,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 524,
											"end": 532,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 524,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 524,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 524,
											"end": 532,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 524,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 524,
											"end": 532,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 524,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 524,
											"end": 532,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 488,
											"end": 499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 488,
											"end": 533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 380,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 350,
											"end": 373,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 350,
											"end": 373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 344,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 313,
											"end": 344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 546,
											"end": 696,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 546,
											"end": 696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 593,
											"end": 606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 627,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 616,
											"end": 627,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 627,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 616,
											"end": 627,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 627,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 616,
											"end": 643,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 643,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 616,
											"end": 643,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 616,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 645,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 616,
											"end": 645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 590,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 590,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 590,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 590,
											"end": 645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 590,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 590,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 684,
											"end": 688,
											"name": "PUSH",
											"source": 2,
											"value": "2540BE400"
										},
										{
											"begin": 674,
											"end": 679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 674,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 674,
											"end": 683,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 689,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 674,
											"end": 689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 674,
											"end": 689,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 674,
											"end": 689,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 674,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 689,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 674,
											"end": 689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 671,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 655,
											"end": 689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 655,
											"end": 689,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 655,
											"end": 689,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 655,
											"end": 689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 580,
											"end": 696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 546,
											"end": 696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 702,
											"end": 851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 748,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 804,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 793,
											"end": 804,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 804,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 793,
											"end": 804,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 820,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 793,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 793,
											"end": 822,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 793,
											"end": 822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 767,
											"end": 822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 832,
											"end": 844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 832,
											"end": 844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 832,
											"end": 844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 702,
											"end": 851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2068,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1963,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2006,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2061,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2037,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2068,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1963,
											"end": 2068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2194,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2163,
											"end": 2168,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2146,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2139,
											"end": 2144,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2170,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2184,
											"end": 2185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2186,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2126,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2200,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2256,
											"end": 2261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2281,
											"end": 2294,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2303,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2341,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2200,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2469,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2347,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2438,
											"end": 2443,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2420,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2445,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2400,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2400,
											"end": 2463,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2457,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2400,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2400,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2618,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2475,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2563,
											"end": 2569,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2570,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2570,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 2570,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2606,
											"end": 2611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2579,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2612,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2579,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2618,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2618,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2618,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2742,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2760,
											"end": 2766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2812,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2788,
											"end": 2795,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2784,
											"end": 2807,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 2897,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2777,
											"end": 2897,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2816,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2816,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2816,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2816,
											"end": 2895,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2816,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2777,
											"end": 2897,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2777,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3016,
											"end": 3023,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2996,
											"end": 3005,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2992,
											"end": 3014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2961,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2961,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 3024,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 3024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2907,
											"end": 3034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3075,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3155,
											"end": 3162,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3146,
											"end": 3152,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3144,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3099,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3099,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3099,
											"end": 3163,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3099,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3163,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3044,
											"end": 3173,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3294,
											"end": 3301,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3283,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3292,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3238,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3302,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3238,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3302,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3302,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3312,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3433,
											"end": 3440,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3413,
											"end": 3422,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3431,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3377,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3377,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3441,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3322,
											"end": 3451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3517,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3572,
											"end": 3579,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3552,
											"end": 3561,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3548,
											"end": 3570,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3517,
											"end": 3580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3580,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3517,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3507,
											"end": 3580,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3507,
											"end": 3580,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3461,
											"end": 3590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 3597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3783,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3603,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3648,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3729,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3752,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3738,
											"end": 3753,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3776,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3769,
											"end": 3770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3777,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 4199,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3789,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3852,
											"end": 3872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3852,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3872,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3847,
											"end": 3872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3886,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3886,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3886,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3906,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3881,
											"end": 3906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3943,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3963,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3981,
											"end": 3992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3963,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3963,
											"end": 3993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3963,
											"end": 3993,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3963,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4144,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4126,
											"end": 4127,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4123,
											"end": 4145,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4096,
											"end": 4105,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4076,
											"end": 4159,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4053,
											"end": 4192,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4172,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4192,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4053,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 4199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 4199,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 4199,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 4199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 4199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 4199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"tests/USDP-ORACLE.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"colPriceToWei()": "97b85420",
							"datafeed()": "2dc47153",
							"rawColPrice()": "f630ba51",
							"setDataFeedAddress(address)": "26ba7898",
							"unstableColPrice()": "5e6a4fb0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"colPriceToWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"datafeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawColPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractaddress\",\"type\":\"address\"}],\"name\":\"setDataFeedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstableColPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/USDP-ORACLE.sol\":\"PriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8fdf84a1d60cf454027d36c1cb44023021f4f9cfae26288e3a7e0604a926e454\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a64569667bd0f2d6d77409c714e590570774ab502df34afadd436eb1e8cfa915\",\"dweb:/ipfs/QmWKHE2AVdKRpXnpirTAnaBi43nCJfTfZTKUX39JuSoNDt\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"tests/USDP-ORACLE.sol\":{\"keccak256\":\"0x87c97cc0ce49111bd3a47da6512b4873d9f28176495e54846edd0369f51c4111\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://63a2efcfd1c1b424bbf1f36cdf530cc82c7dd52aee3aaf92a707809f342458ae\",\"dweb:/ipfs/QmXygVdfD141yTRVPZLyQ2xHMYMC1Bz58FwGT5VZXa6DZX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 367,
								"contract": "tests/USDP-ORACLE.sol:PriceOracle",
								"label": "priceOracle",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 369,
								"contract": "tests/USDP-ORACLE.sol:PriceOracle",
								"label": "unstableColPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 371,
								"contract": "tests/USDP-ORACLE.sol:PriceOracle",
								"label": "datafeed",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "68:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "104:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "112:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "157:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:19:0"
									},
									"scope": 45,
									"src": "95:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "182:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "193:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "238:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "238:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "230:27:0"
									},
									"scope": 45,
									"src": "173:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "271:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "323:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:21:0"
									},
									"scope": 45,
									"src": "262:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "350:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "375:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "459:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "452:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "452:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "481:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "473:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "506:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "498:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "530:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "523:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "523:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:129:0"
									},
									"scope": 45,
									"src": "341:211:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "565:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "580:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "632:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "625:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "625:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "655:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "647:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "677:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "669:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "702:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "694:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "726:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "719:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "719:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:130:0"
									},
									"scope": 45,
									"src": "556:192:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "58:693:0",
							"usedErrors": []
						}
					],
					"src": "32:720:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							357
						]
					},
					"id": 358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 357,
							"linearizedBaseContracts": [
								357
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 78,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															61
														],
														"declarations": [
															{
																"constant": false,
																"id": 61,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 78,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 60,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 65,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 62,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 63,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 66,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 67,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 73,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 71,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 59,
															"id": 72,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 75,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 76,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 59,
														"id": 77,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 357,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 106,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 93,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 99,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 96,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 97,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 98,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 101,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 102,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 104,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 105,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 357,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 148,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 120,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 127,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 125,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 119,
															"id": 126,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															129
														],
														"declarations": [
															{
																"constant": false,
																"id": 129,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 148,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 128,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 133,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 134,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 135,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 143,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 141,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 119,
															"id": 142,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 145,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 146,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 119,
														"id": 147,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 357,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 176,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 169,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 167,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 161,
															"id": 168,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 171,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 153,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 172,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 155,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 174,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 161,
														"id": 175,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 357,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 204,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 197,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 189,
															"id": 196,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 199,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 200,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 202,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 189,
														"id": 203,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 357,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 215,
												"id": 219,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 357,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 231,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 232,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 230,
												"id": 234,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 357,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 246,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 247,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 245,
												"id": 249,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 357,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 261,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 262,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 260,
												"id": 264,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 357,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 276,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 277,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 275,
												"id": 279,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 357,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "5054:106:1",
										"statements": [
											{
												"id": 304,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 294,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "5096:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 295,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "5101:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 297,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "5104:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 293,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 299,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "5138:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 301,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "5142:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 292,
														"id": 303,
														"nodeType": "Return",
														"src": "5131:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4972:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4983:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "4994:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "5045:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:1"
									},
									"scope": 357,
									"src": "4959:201:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "5739:105:1",
										"statements": [
											{
												"id": 329,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 319,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 311,
																		"src": "5781:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 322,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "5788:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 318,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 324,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "5822:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 326,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5826:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 317,
														"id": 328,
														"nodeType": "Return",
														"src": "5815:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5679:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:1"
									},
									"scope": 357,
									"src": "5644:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "6585:105:1",
										"statements": [
											{
												"id": 354,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 344,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "6627:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 347,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "6634:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 343,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 349,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 350,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "6668:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 351,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "6672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 342,
														"id": 353,
														"nodeType": "Return",
														"src": "6661:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "6503:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "6514:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "6525:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "6576:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:1"
									},
									"scope": 357,
									"src": "6490:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 358,
							"src": "482:6210:1",
							"usedErrors": []
						}
					],
					"src": "107:6586:1"
				},
				"id": 1
			},
			"tests/USDP-ORACLE.sol": {
				"ast": {
					"absolutePath": "tests/USDP-ORACLE.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"PriceOracle": [
							419
						],
						"SafeMath": [
							357
						]
					},
					"id": 420,
					"license": "MIT LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 359,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "42:26:2"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"id": 360,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 420,
							"sourceUnit": 46,
							"src": "70:76:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 420,
							"sourceUnit": 358,
							"src": "147:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 419,
							"linearizedBaseContracts": [
								419
							],
							"name": "PriceOracle",
							"nameLocation": "215:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 364,
									"libraryName": {
										"id": 362,
										"name": "SafeMath",
										"nameLocations": [
											"239:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 357,
										"src": "239:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "233:27:2",
									"typeName": {
										"id": 363,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 367,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "296:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "266:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 366,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 365,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"266:21:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "266:21:2"
										},
										"referencedDeclaration": 45,
										"src": "266:21:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5e6a4fb0",
									"id": 369,
									"mutability": "mutable",
									"name": "unstableColPrice",
									"nameLocation": "328:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "313:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2dc47153",
									"id": 371,
									"mutability": "mutable",
									"name": "datafeed",
									"nameLocation": "365:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "350:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 370,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "350:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "442:98:2",
										"statements": [
											{
												"expression": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 376,
														"name": "datafeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "452:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 377,
														"name": "contractaddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "463:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "452:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "452:26:2"
											},
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "488:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 382,
																"name": "datafeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "524:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 381,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "502:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "502:31:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "488:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "488:45:2"
											}
										]
									},
									"functionSelector": "26ba7898",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDataFeedAddress",
									"nameLocation": "389:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "contractaddress",
												"nameLocation": "416:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "408:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:25:2"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:2"
									},
									"scope": 419,
									"src": "380:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "580:116:2",
										"statements": [
											{
												"assignments": [
													null,
													391,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "601:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "593:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 390,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "593:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 392,
															"name": "priceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "616:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "628:15:2",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "616:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,uint256,uint256,uint256,uint80)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "616:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,uint256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "590:55:2"
											},
											{
												"expression": {
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "unstableColPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "655:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653130",
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "684:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"value": "1e10"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																}
															],
															"expression": {
																"id": 397,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "674:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "680:3:2",
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 251,
															"src": "674:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "674:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "655:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "655:34:2"
											}
										]
									},
									"functionSelector": "97b85420",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "colPriceToWei",
									"nameLocation": "555:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "580:0:2"
									},
									"scope": 419,
									"src": "546:150:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "757:94:2",
										"statements": [
											{
												"assignments": [
													null,
													410,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "778:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "770:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "770:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 414,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 411,
															"name": "priceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "793:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "805:15:2",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "793:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,uint256,uint256,uint256,uint80)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "793:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,uint256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "767:55:2"
											},
											{
												"expression": {
													"id": 415,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 410,
													"src": "839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 416,
												"nodeType": "Return",
												"src": "832:12:2"
											}
										]
									},
									"functionSelector": "f630ba51",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawColPrice",
									"nameLocation": "711:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:2:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "748:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:9:2"
									},
									"scope": 419,
									"src": "702:149:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 420,
							"src": "206:648:2",
							"usedErrors": []
						}
					],
					"src": "42:812:2"
				},
				"id": 2
			}
		}
	}
}