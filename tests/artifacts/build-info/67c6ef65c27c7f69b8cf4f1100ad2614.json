{
	"id": "67c6ef65c27c7f69b8cf4f1100ad2614",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"tests/Reserves-collateral.sol": {
				"content": "// SPDX-License-Identifier: MIT LICENSE\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n\npragma solidity ^0.8.17.0;\n\ncontract ESPEEReserves is Ownable, ReentrancyGuard, AccessControl {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    uint256 public currentReserveId;\n\n    struct ReserveVault {\n        IERC20 collateral;\n        uint256 amount;\n    }\n\n    mapping(uint256 => ReserveVault) public _rsvVault;\n\n    event Withdraw (uint256 indexed vid, uint256 amount);\n    event Deposit (uint256 indexed vid, uint256 amount);\n\n    bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\");\n\n    constructor() {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _setupRole(MANAGER_ROLE, _msgSender());\n    }\n\n    function checkReserveContract(IERC20 _collateral) internal view {\n        for(uint256 i; i < currentReserveId; i++){\n            require(_rsvVault[i].collateral != _collateral, \"Collateral Address Already Added\");\n        }\n    }\n\n    function addReserveVault(IERC20 _collateral) external {\n        require(hasRole(MANAGER_ROLE, _msgSender()), \"Not allowed\");\n        checkReserveContract(_collateral);\n        _rsvVault[currentReserveId].collateral = _collateral;\n        currentReserveId++;\n    }\n\n    function depositCollateral(uint256 vid, uint256 amount) external {\n        require(hasRole(MANAGER_ROLE, _msgSender()), \"Not allowed\");\n        IERC20 reserves = _rsvVault[vid].collateral;\n        reserves.safeTransferFrom(address(msg.sender), address(this), amount);\n        uint256 currentVaultBalance = _rsvVault[vid].amount;\n        _rsvVault[vid].amount = currentVaultBalance.add(amount);\n        emit Deposit(vid, amount);\n    }\n\n    function withdrawCollateral(uint256 vid, uint256 amount) external {\n        require(hasRole(MANAGER_ROLE, _msgSender()), \"Not allowed\");\n        IERC20 reserves = _rsvVault[vid].collateral;\n        uint256 currentVaultBalance = _rsvVault[vid].amount;\n        if (currentVaultBalance >= amount) {\n            reserves.safeTransfer(address(msg.sender), amount);\n            _rsvVault[vid].amount = currentVaultBalance.sub(amount);\n            emit Withdraw(vid, amount);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 396,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 512,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6912  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6912  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122059ec89e2067fe26036b575a516c8af5c8ad579510147f4fc4546873737171e2364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059ec89e2067fe26036b575a516c8af5c8ad579510147f4fc4546873737171e2364736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xEC DUP10 0xE2 MOD PUSH32 0xE26036B575A516C8AF5C8AD579510147F4FC4546873737171E2364736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "701:6211:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122059ec89e2067fe26036b575a516c8af5c8ad579510147f4fc4546873737171e2364736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xEC DUP10 0xE2 MOD PUSH32 0xE26036B575A516C8AF5C8AD579510147F4FC4546873737171E2364736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "701:6211:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059ec89e2067fe26036b575a516c8af5c8ad579510147f4fc4546873737171e2364736f6c63430008110033",
									".code": [
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tests/Reserves-collateral.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200f2c42cc2318b26c524671cc17f1906513290c294f6786145d12cac8e4166d6564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200f2c42cc2318b26c524671cc17f1906513290c294f6786145d12cac8e4166d6564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x2C TIMESTAMP 0xCC 0x23 XOR 0xB2 PUSH13 0x524671CC17F1906513290C294F PUSH8 0x86145D12CAC8E416 PUSH14 0x6564736F6C634300081100330000 ",
							"sourceMap": "194:9169:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200f2c42cc2318b26c524671cc17f1906513290c294f6786145d12cac8e4166d6564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0x2C TIMESTAMP 0xCC 0x23 XOR 0xB2 PUSH13 0x524671CC17F1906513290C294F PUSH8 0x86145D12CAC8E416 PUSH14 0x6564736F6C634300081100330000 ",
							"sourceMap": "194:9169:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f2c42cc2318b26c524671cc17f1906513290c294f6786145d12cac8e4166d6564736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tests/Reserves-collateral.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122038414dd408ad5849a6f48c0208194b8c81702075a5b61e2a28ef328e182d668d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038414dd408ad5849a6f48c0208194b8c81702075a5b61e2a28ef328e182d668d64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE COINBASE 0x4D 0xD4 ADDMOD 0xAD PC 0x49 0xA6 DELEGATECALL DUP13 MUL ADDMOD NOT 0x4B DUP13 DUP2 PUSH17 0x2075A5B61E2A28EF328E182D668D64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "220:2559:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122038414dd408ad5849a6f48c0208194b8c81702075a5b61e2a28ef328e182d668d64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE COINBASE 0x4D 0xD4 ADDMOD 0xAD PC 0x49 0xA6 DELEGATECALL DUP13 MUL ADDMOD NOT 0x4B DUP13 DUP2 PUSH17 0x2075A5B61E2A28EF328E182D668D64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "220:2559:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038414dd408ad5849a6f48c0208194b8c81702075a5b61e2a28ef328e182d668d64736f6c63430008110033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tests/Reserves-collateral.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203968397be617aa3b120e899e0e7bb11c2ed3162e9cd1ef904de2004fec886b6f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203968397be617aa3b120e899e0e7bb11c2ed3162e9cd1ef904de2004fec886b6f64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH9 0x397BE617AA3B120E89 SWAP15 0xE PUSH28 0xB11C2ED3162E9CD1EF904DE2004FEC886B6F64736F6C634300081100 CALLER ",
							"sourceMap": "202:12582:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203968397be617aa3b120e899e0e7bb11c2ed3162e9cd1ef904de2004fec886b6f64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH9 0x397BE617AA3B120E89 SWAP15 0xE PUSH28 0xB11C2ED3162E9CD1EF904DE2004FEC886B6F64736F6C634300081100 CALLER ",
							"sourceMap": "202:12582:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203968397be617aa3b120e899e0e7bb11c2ed3162e9cd1ef904de2004fec886b6f64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tests/Reserves-collateral.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208d6cad77a84746d5d8d2e6bfae22fdd7367df4e98a00e9f9e118e5a9a91a579564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208d6cad77a84746d5d8d2e6bfae22fdd7367df4e98a00e9f9e118e5a9a91a579564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 PUSH13 0xAD77A84746D5D8D2E6BFAE22FD 0xD7 CALLDATASIZE PUSH30 0xF4E98A00E9F9E118E5A9A91A579564736F6C634300081100330000000000 ",
							"sourceMap": "482:6210:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208d6cad77a84746d5d8d2e6bfae22fdd7367df4e98a00e9f9e118e5a9a91a579564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 PUSH13 0xAD77A84746D5D8D2E6BFAE22FD 0xD7 CALLDATASIZE PUSH30 0xF4E98A00E9F9E118E5A9A91A579564736F6C634300081100330000000000 ",
							"sourceMap": "482:6210:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d6cad77a84746d5d8d2e6bfae22fdd7367df4e98a00e9f9e118e5a9a91a579564736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tests/Reserves-collateral.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b8c954676bbf808cabad35b265aa8ed8e6b21e95478264d92177fcdac31bb9fd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b8c954676bbf808cabad35b265aa8ed8e6b21e95478264d92177fcdac31bb9fd64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xC9 SLOAD PUSH8 0x6BBF808CABAD35B2 PUSH6 0xAA8ED8E6B21E SWAP6 SELFBALANCE DUP3 PUSH5 0xD92177FCDA 0xC3 SHL 0xB9 REVERT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "215:1047:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b8c954676bbf808cabad35b265aa8ed8e6b21e95478264d92177fcdac31bb9fd64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xC9 SLOAD PUSH8 0x6BBF808CABAD35B2 PUSH6 0xAA8ED8E6B21E SWAP6 SELFBALANCE DUP3 PUSH5 0xD92177FCDA 0xC3 SHL 0xB9 REVERT PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "215:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8c954676bbf808cabad35b265aa8ed8e6b21e95478264d92177fcdac31bb9fd64736f6c63430008110033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tests/Reserves-collateral.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"tests/Reserves-collateral.sol": {
				"ESPEEReserves": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "vid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "vid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_rsvVault",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateral",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_collateral",
									"type": "address"
								}
							],
							"name": "addReserveVault",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentReserveId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "vid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "vid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/Reserves-collateral.sol\":427:2488  contract ESPEEReserves is Ownable, ReentrancyGuard, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"tests/Reserves-collateral.sol\":929:1052  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"tests/Reserves-collateral.sol\":953:997  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n  0x00\n    /* \"tests/Reserves-collateral.sol\":964:982  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"tests/Reserves-collateral.sol\":984:996  _msgSender() */\n  tag_13\n    /* \"tests/Reserves-collateral.sol\":984:994  _msgSender */\n  shl(0x20, tag_8)\n    /* \"tests/Reserves-collateral.sol\":984:996  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"tests/Reserves-collateral.sol\":953:963  _setupRole */\n  shl(0x20, tag_14)\n    /* \"tests/Reserves-collateral.sol\":953:997  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"tests/Reserves-collateral.sol\":1007:1045  _setupRole(MANAGER_ROLE, _msgSender()) */\n  tag_15\n    /* \"tests/Reserves-collateral.sol\":897:922  keccak256(\"MANAGER_ROLE\") */\n  0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n    /* \"tests/Reserves-collateral.sol\":1032:1044  _msgSender() */\n  tag_16\n    /* \"tests/Reserves-collateral.sol\":1032:1042  _msgSender */\n  shl(0x20, tag_8)\n    /* \"tests/Reserves-collateral.sol\":1032:1044  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"tests/Reserves-collateral.sol\":1007:1017  _setupRole */\n  shl(0x20, tag_14)\n    /* \"tests/Reserves-collateral.sol\":1007:1045  _setupRole(MANAGER_ROLE, _msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"tests/Reserves-collateral.sol\":427:2488  contract ESPEEReserves is Ownable, ReentrancyGuard, AccessControl {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6937:7047  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7015:7040  _grantRole(role, account) */\n  tag_21\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7026:7030  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7032:7039  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7015:7025  _grantRole */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7015:7040  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6937:7047  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  tag_24\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7678:7682  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7684:7691  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n  shl(0x20, tag_25)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7740:7744  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7714  _roles */\n  0x02\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7715:7719  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7729:7736  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n  tag_27\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7781:7788  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7775:7779  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3107:3111  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3136  _roles */\n  0x02\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3137:3141  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3151:3158  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"tests/Reserves-collateral.sol\":427:2488  contract ESPEEReserves is Ownable, ReentrancyGuard, AccessControl {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/Reserves-collateral.sol\":427:2488  contract ESPEEReserves is Ownable, ReentrancyGuard, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x767a7b05\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xec87621c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xece13732\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x767a7b05\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x36568abe\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3b61f098\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5306f102\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x279ba28d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/Reserves-collateral.sol\":686:735  mapping(uint256 => ReserveVault) public _rsvVault */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"tests/Reserves-collateral.sol\":1293:1556  function addReserveVault(IERC20 _collateral) external {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"tests/Reserves-collateral.sol\":564:595  uint256 public currentReserveId */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"tests/Reserves-collateral.sol\":2002:2486  function withdrawCollateral(uint256 vid, uint256 amount) external {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"tests/Reserves-collateral.sol\":858:922  bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\") */\n    tag_16:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"tests/Reserves-collateral.sol\":1562:1996  function depositCollateral(uint256 vid, uint256 amount) external {... */\n    tag_17:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2817:2821  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2855:2887  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2851  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      tag_87\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2915:2926  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2914  super.supportsInterface */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2833:2927  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4578:4585  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4610  _roles */\n      0x02\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4611:4615  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4626  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4597:4626  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"tests/Reserves-collateral.sol\":686:735  mapping(uint256 => ReserveVault) public _rsvVault */\n    tag_37:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5025:5029  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5024  getRoleAdmin */\n      tag_31\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_92\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5053:5057  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5059:5066  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5052  _grantRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6154  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6140  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6125:6208  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6231:6235  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6237:6244  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6230  _revokeRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"tests/Reserves-collateral.sol\":1293:1556  function addReserveVault(IERC20 _collateral) external {... */\n    tag_50:\n        /* \"tests/Reserves-collateral.sol\":1365:1400  hasRole(MANAGER_ROLE, _msgSender()) */\n      tag_106\n        /* \"tests/Reserves-collateral.sol\":897:922  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"tests/Reserves-collateral.sol\":1387:1399  _msgSender() */\n      tag_107\n        /* \"tests/Reserves-collateral.sol\":1387:1397  _msgSender */\n      tag_99\n        /* \"tests/Reserves-collateral.sol\":1387:1399  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"tests/Reserves-collateral.sol\":1365:1372  hasRole */\n      tag_67\n        /* \"tests/Reserves-collateral.sol\":1365:1400  hasRole(MANAGER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_106:\n        /* \"tests/Reserves-collateral.sol\":1357:1416  require(hasRole(MANAGER_ROLE, _msgSender()), \"Not allowed\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"tests/Reserves-collateral.sol\":1426:1459  checkReserveContract(_collateral) */\n      tag_111\n        /* \"tests/Reserves-collateral.sol\":1447:1458  _collateral */\n      dup2\n        /* \"tests/Reserves-collateral.sol\":1426:1446  checkReserveContract */\n      tag_112\n        /* \"tests/Reserves-collateral.sol\":1426:1459  checkReserveContract(_collateral) */\n      jump\t// in\n    tag_111:\n        /* \"tests/Reserves-collateral.sol\":1510:1521  _collateral */\n      dup1\n        /* \"tests/Reserves-collateral.sol\":1469:1478  _rsvVault */\n      0x04\n        /* \"tests/Reserves-collateral.sol\":1469:1496  _rsvVault[currentReserveId] */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1479:1495  currentReserveId */\n      sload(0x03)\n        /* \"tests/Reserves-collateral.sol\":1469:1496  _rsvVault[currentReserveId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tests/Reserves-collateral.sol\":1469:1507  _rsvVault[currentReserveId].collateral */\n      0x00\n      add\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1469:1521  _rsvVault[currentReserveId].collateral = _collateral */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"tests/Reserves-collateral.sol\":1531:1547  currentReserveId */\n      0x03\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1531:1549  currentReserveId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"tests/Reserves-collateral.sol\":1293:1556  function addReserveVault(IERC20 _collateral) external {... */\n      pop\n      jump\t// out\n        /* \"tests/Reserves-collateral.sol\":564:595  uint256 public currentReserveId */\n    tag_52:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"tests/Reserves-collateral.sol\":2002:2486  function withdrawCollateral(uint256 vid, uint256 amount) external {... */\n    tag_60:\n        /* \"tests/Reserves-collateral.sol\":2086:2121  hasRole(MANAGER_ROLE, _msgSender()) */\n      tag_122\n        /* \"tests/Reserves-collateral.sol\":897:922  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"tests/Reserves-collateral.sol\":2108:2120  _msgSender() */\n      tag_123\n        /* \"tests/Reserves-collateral.sol\":2108:2118  _msgSender */\n      tag_99\n        /* \"tests/Reserves-collateral.sol\":2108:2120  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"tests/Reserves-collateral.sol\":2086:2093  hasRole */\n      tag_67\n        /* \"tests/Reserves-collateral.sol\":2086:2121  hasRole(MANAGER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_122:\n        /* \"tests/Reserves-collateral.sol\":2078:2137  require(hasRole(MANAGER_ROLE, _msgSender()), \"Not allowed\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_110\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"tests/Reserves-collateral.sol\":2147:2162  IERC20 reserves */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":2165:2174  _rsvVault */\n      0x04\n        /* \"tests/Reserves-collateral.sol\":2165:2179  _rsvVault[vid] */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":2175:2178  vid */\n      dup5\n        /* \"tests/Reserves-collateral.sol\":2165:2179  _rsvVault[vid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tests/Reserves-collateral.sol\":2165:2190  _rsvVault[vid].collateral */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/Reserves-collateral.sol\":2147:2190  IERC20 reserves = _rsvVault[vid].collateral */\n      swap1\n      pop\n        /* \"tests/Reserves-collateral.sol\":2200:2227  uint256 currentVaultBalance */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":2230:2239  _rsvVault */\n      0x04\n        /* \"tests/Reserves-collateral.sol\":2230:2244  _rsvVault[vid] */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":2240:2243  vid */\n      dup6\n        /* \"tests/Reserves-collateral.sol\":2230:2244  _rsvVault[vid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tests/Reserves-collateral.sol\":2230:2251  _rsvVault[vid].amount */\n      0x01\n      add\n      sload\n        /* \"tests/Reserves-collateral.sol\":2200:2251  uint256 currentVaultBalance = _rsvVault[vid].amount */\n      swap1\n      pop\n        /* \"tests/Reserves-collateral.sol\":2288:2294  amount */\n      dup3\n        /* \"tests/Reserves-collateral.sol\":2265:2284  currentVaultBalance */\n      dup2\n        /* \"tests/Reserves-collateral.sol\":2265:2294  currentVaultBalance >= amount */\n      lt\n        /* \"tests/Reserves-collateral.sol\":2261:2480  if (currentVaultBalance >= amount) {... */\n      tag_126\n      jumpi\n        /* \"tests/Reserves-collateral.sol\":2310:2360  reserves.safeTransfer(address(msg.sender), amount) */\n      tag_127\n        /* \"tests/Reserves-collateral.sol\":2340:2350  msg.sender */\n      caller\n        /* \"tests/Reserves-collateral.sol\":2353:2359  amount */\n      dup5\n        /* \"tests/Reserves-collateral.sol\":2310:2318  reserves */\n      dup5\n        /* \"tests/Reserves-collateral.sol\":2310:2331  reserves.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_128\n      swap1\n        /* \"tests/Reserves-collateral.sol\":2310:2360  reserves.safeTransfer(address(msg.sender), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"tests/Reserves-collateral.sol\":2398:2429  currentVaultBalance.sub(amount) */\n      tag_129\n        /* \"tests/Reserves-collateral.sol\":2422:2428  amount */\n      dup4\n        /* \"tests/Reserves-collateral.sol\":2398:2417  currentVaultBalance */\n      dup3\n        /* \"tests/Reserves-collateral.sol\":2398:2421  currentVaultBalance.sub */\n      tag_130\n      swap1\n        /* \"tests/Reserves-collateral.sol\":2398:2429  currentVaultBalance.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"tests/Reserves-collateral.sol\":2374:2383  _rsvVault */\n      0x04\n        /* \"tests/Reserves-collateral.sol\":2374:2388  _rsvVault[vid] */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":2384:2387  vid */\n      dup7\n        /* \"tests/Reserves-collateral.sol\":2374:2388  _rsvVault[vid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tests/Reserves-collateral.sol\":2374:2395  _rsvVault[vid].amount */\n      0x01\n      add\n        /* \"tests/Reserves-collateral.sol\":2374:2429  _rsvVault[vid].amount = currentVaultBalance.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tests/Reserves-collateral.sol\":2457:2460  vid */\n      dup4\n        /* \"tests/Reserves-collateral.sol\":2448:2469  Withdraw(vid, amount) */\n      0x56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8\n        /* \"tests/Reserves-collateral.sol\":2462:2468  amount */\n      dup5\n        /* \"tests/Reserves-collateral.sol\":2448:2469  Withdraw(vid, amount) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"tests/Reserves-collateral.sol\":2261:2480  if (currentVaultBalance >= amount) {... */\n    tag_126:\n        /* \"tests/Reserves-collateral.sol\":2068:2486  {... */\n      pop\n      pop\n        /* \"tests/Reserves-collateral.sol\":2002:2486  function withdrawCollateral(uint256 vid, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3107:3111  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3136  _roles */\n      0x02\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3137:3141  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3151:3158  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5451:5455  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5450  getRoleAdmin */\n      tag_31\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5480:5484  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5486:5493  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5479  _revokeRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"tests/Reserves-collateral.sol\":858:922  bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\") */\n    tag_76:\n        /* \"tests/Reserves-collateral.sol\":897:922  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"tests/Reserves-collateral.sol\":858:922  bytes32 public constant MANAGER_ROLE = keccak256(\"MANAGER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"tests/Reserves-collateral.sol\":1562:1996  function depositCollateral(uint256 vid, uint256 amount) external {... */\n    tag_80:\n        /* \"tests/Reserves-collateral.sol\":1645:1680  hasRole(MANAGER_ROLE, _msgSender()) */\n      tag_140\n        /* \"tests/Reserves-collateral.sol\":897:922  keccak256(\"MANAGER_ROLE\") */\n      0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08\n        /* \"tests/Reserves-collateral.sol\":1667:1679  _msgSender() */\n      tag_141\n        /* \"tests/Reserves-collateral.sol\":1667:1677  _msgSender */\n      tag_99\n        /* \"tests/Reserves-collateral.sol\":1667:1679  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"tests/Reserves-collateral.sol\":1645:1652  hasRole */\n      tag_67\n        /* \"tests/Reserves-collateral.sol\":1645:1680  hasRole(MANAGER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_140:\n        /* \"tests/Reserves-collateral.sol\":1637:1696  require(hasRole(MANAGER_ROLE, _msgSender()), \"Not allowed\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_110\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"tests/Reserves-collateral.sol\":1706:1721  IERC20 reserves */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1724:1733  _rsvVault */\n      0x04\n        /* \"tests/Reserves-collateral.sol\":1724:1738  _rsvVault[vid] */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1734:1737  vid */\n      dup5\n        /* \"tests/Reserves-collateral.sol\":1724:1738  _rsvVault[vid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tests/Reserves-collateral.sol\":1724:1749  _rsvVault[vid].collateral */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/Reserves-collateral.sol\":1706:1749  IERC20 reserves = _rsvVault[vid].collateral */\n      swap1\n      pop\n        /* \"tests/Reserves-collateral.sol\":1759:1828  reserves.safeTransferFrom(address(msg.sender), address(this), amount) */\n      tag_144\n        /* \"tests/Reserves-collateral.sol\":1793:1803  msg.sender */\n      caller\n        /* \"tests/Reserves-collateral.sol\":1814:1818  this */\n      address\n        /* \"tests/Reserves-collateral.sol\":1821:1827  amount */\n      dup5\n        /* \"tests/Reserves-collateral.sol\":1759:1767  reserves */\n      dup5\n        /* \"tests/Reserves-collateral.sol\":1759:1784  reserves.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_145\n      swap1\n        /* \"tests/Reserves-collateral.sol\":1759:1828  reserves.safeTransferFrom(address(msg.sender), address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"tests/Reserves-collateral.sol\":1838:1865  uint256 currentVaultBalance */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1868:1877  _rsvVault */\n      0x04\n        /* \"tests/Reserves-collateral.sol\":1868:1882  _rsvVault[vid] */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1878:1881  vid */\n      dup6\n        /* \"tests/Reserves-collateral.sol\":1868:1882  _rsvVault[vid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tests/Reserves-collateral.sol\":1868:1889  _rsvVault[vid].amount */\n      0x01\n      add\n      sload\n        /* \"tests/Reserves-collateral.sol\":1838:1889  uint256 currentVaultBalance = _rsvVault[vid].amount */\n      swap1\n      pop\n        /* \"tests/Reserves-collateral.sol\":1923:1954  currentVaultBalance.add(amount) */\n      tag_146\n        /* \"tests/Reserves-collateral.sol\":1947:1953  amount */\n      dup4\n        /* \"tests/Reserves-collateral.sol\":1923:1942  currentVaultBalance */\n      dup3\n        /* \"tests/Reserves-collateral.sol\":1923:1946  currentVaultBalance.add */\n      tag_147\n      swap1\n        /* \"tests/Reserves-collateral.sol\":1923:1954  currentVaultBalance.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"tests/Reserves-collateral.sol\":1899:1908  _rsvVault */\n      0x04\n        /* \"tests/Reserves-collateral.sol\":1899:1913  _rsvVault[vid] */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1909:1912  vid */\n      dup7\n        /* \"tests/Reserves-collateral.sol\":1899:1913  _rsvVault[vid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tests/Reserves-collateral.sol\":1899:1920  _rsvVault[vid].amount */\n      0x01\n      add\n        /* \"tests/Reserves-collateral.sol\":1899:1954  _rsvVault[vid].amount = currentVaultBalance.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"tests/Reserves-collateral.sol\":1977:1980  vid */\n      dup4\n        /* \"tests/Reserves-collateral.sol\":1969:1989  Deposit(vid, amount) */\n      0xa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c55\n        /* \"tests/Reserves-collateral.sol\":1982:1988  amount */\n      dup5\n        /* \"tests/Reserves-collateral.sol\":1969:1989  Deposit(vid, amount) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"tests/Reserves-collateral.sol\":1627:1996  {... */\n      pop\n      pop\n        /* \"tests/Reserves-collateral.sol\":1562:1996  function depositCollateral(uint256 vid, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3537:3541  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3553  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3536  _checkRole */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7678:7682  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7684:7691  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7740:7744  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7714  _roles */\n      0x02\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7715:7719  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7729:7736  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7781:7788  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7775:7779  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8086  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8088:8095  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8081  hasRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8144:8149  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8118  _roles */\n      0x02\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8119:8123  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8132  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8133:8140  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8149  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8205  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8186:8193  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8180:8184  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"tests/Reserves-collateral.sol\":1058:1287  function checkReserveContract(IERC20 _collateral) internal view {... */\n    tag_112:\n        /* \"tests/Reserves-collateral.sol\":1136:1145  uint256 i */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1132:1281  for(uint256 i; i < currentReserveId; i++){... */\n    tag_171:\n        /* \"tests/Reserves-collateral.sol\":1151:1167  currentReserveId */\n      sload(0x03)\n        /* \"tests/Reserves-collateral.sol\":1147:1148  i */\n      dup2\n        /* \"tests/Reserves-collateral.sol\":1147:1167  i < currentReserveId */\n      lt\n        /* \"tests/Reserves-collateral.sol\":1132:1281  for(uint256 i; i < currentReserveId; i++){... */\n      iszero\n      tag_172\n      jumpi\n        /* \"tests/Reserves-collateral.sol\":1222:1233  _collateral */\n      dup2\n        /* \"tests/Reserves-collateral.sol\":1195:1233  _rsvVault[i].collateral != _collateral */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/Reserves-collateral.sol\":1195:1204  _rsvVault */\n      0x04\n        /* \"tests/Reserves-collateral.sol\":1195:1207  _rsvVault[i] */\n      0x00\n        /* \"tests/Reserves-collateral.sol\":1205:1206  i */\n      dup4\n        /* \"tests/Reserves-collateral.sol\":1195:1207  _rsvVault[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"tests/Reserves-collateral.sol\":1195:1218  _rsvVault[i].collateral */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"tests/Reserves-collateral.sol\":1195:1233  _rsvVault[i].collateral != _collateral */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"tests/Reserves-collateral.sol\":1187:1270  require(_rsvVault[i].collateral != _collateral, \"Collateral Address Already Added\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"tests/Reserves-collateral.sol\":1169:1172  i++ */\n      dup1\n      dup1\n      tag_177\n      swap1\n      tag_114\n      jump\t// in\n    tag_177:\n      swap2\n      pop\n      pop\n        /* \"tests/Reserves-collateral.sol\":1132:1281  for(uint256 i; i < currentReserveId; i++){... */\n      jump(tag_171)\n    tag_172:\n      pop\n        /* \"tests/Reserves-collateral.sol\":1058:1287  function checkReserveContract(IERC20 _collateral) internal view {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_187\n      swap3\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:1480  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1505:1532  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1534:1538  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1540:1542  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1544:1549  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_195\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1474  _callOptionalReturn */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3940:3944  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3946:3953  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3939  hasRole */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4135:4142  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4134  Strings.toHexString */\n      tag_204\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4242:4246  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4234:4247  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4249:4251  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4233  Strings.toHexString */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4022:4274  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_207\n      swap3\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3970:4306  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5173:5815  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5592:5615  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5646:5650  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5626:5631  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5645  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_213\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5592:5687  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5726:5727  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5715  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5722  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5727  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5761  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_214\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5742:5752  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5731:5761  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5761  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5697:5808  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5243:5815  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5173:5815  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_221\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2525:2529  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2508  toHexString */\n      tag_206\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2490:2549  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_225\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_226\n      jumpi\n      tag_227\n      tag_228\n      jump\t// in\n    tag_227:\n    tag_226:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_229\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_229:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_231\n      tag_232\n      jump\t// in\n    tag_231:\n    tag_230:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_234\n      tag_232\n      jump\t// in\n    tag_234:\n    tag_233:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_238\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_239\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_241\n      tag_232\n      jump\t// in\n    tag_241:\n    tag_240:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_243\n      tag_232\n      jump\t// in\n    tag_243:\n    tag_242:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_235)\n    tag_236:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_250\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_251\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_256\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_260\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_259)\n    tag_260:\n      0x60\n      swap2\n      pop\n    tag_259:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_262\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_267\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_263)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_272\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_273\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_263:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_280:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_282:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_283:\n        /* \"#utility.yul\":561:584   */\n      tag_349\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_282\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_350:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_284:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_352\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_283\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_355\n      tag_280\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":833:952   */\n    tag_354:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_356\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_284\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_285:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_286:\n        /* \"#utility.yul\":1268:1289   */\n      tag_359\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_285\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_361\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_286\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_287:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_288:\n        /* \"#utility.yul\":1674:1698   */\n      tag_364\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_287\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_365:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_289:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_367\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_288\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_30:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_370\n      tag_280\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1950:2069   */\n    tag_369:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_371\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_289\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_290:\n        /* \"#utility.yul\":2296:2320   */\n      tag_373\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_287\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_33:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_375\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_290\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2638   */\n    tag_291:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2766   */\n    tag_292:\n        /* \"#utility.yul\":2717:2741   */\n      tag_378\n        /* \"#utility.yul\":2735:2740   */\n      dup2\n        /* \"#utility.yul\":2717:2741   */\n      tag_291\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2710:2715   */\n      dup2\n        /* \"#utility.yul\":2707:2742   */\n      eq\n        /* \"#utility.yul\":2697:2760   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":2756:2757   */\n      0x00\n        /* \"#utility.yul\":2753:2754   */\n      dup1\n        /* \"#utility.yul\":2746:2758   */\n      revert\n        /* \"#utility.yul\":2697:2760   */\n    tag_379:\n        /* \"#utility.yul\":2644:2766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2772:2911   */\n    tag_293:\n        /* \"#utility.yul\":2818:2823   */\n      0x00\n        /* \"#utility.yul\":2856:2862   */\n      dup2\n        /* \"#utility.yul\":2843:2863   */\n      calldataload\n        /* \"#utility.yul\":2834:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2905   */\n      tag_381\n        /* \"#utility.yul\":2899:2904   */\n      dup2\n        /* \"#utility.yul\":2872:2905   */\n      tag_292\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2772:2911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:3246   */\n    tag_36:\n        /* \"#utility.yul\":2976:2982   */\n      0x00\n        /* \"#utility.yul\":3025:3027   */\n      0x20\n        /* \"#utility.yul\":3013:3022   */\n      dup3\n        /* \"#utility.yul\":3004:3011   */\n      dup5\n        /* \"#utility.yul\":3000:3023   */\n      sub\n        /* \"#utility.yul\":2996:3028   */\n      slt\n        /* \"#utility.yul\":2993:3112   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":3031:3110   */\n      tag_384\n      tag_280\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2993:3112   */\n    tag_383:\n        /* \"#utility.yul\":3151:3152   */\n      0x00\n        /* \"#utility.yul\":3176:3229   */\n      tag_385\n        /* \"#utility.yul\":3221:3228   */\n      dup5\n        /* \"#utility.yul\":3212:3218   */\n      dup3\n        /* \"#utility.yul\":3201:3210   */\n      dup6\n        /* \"#utility.yul\":3197:3219   */\n      add\n        /* \"#utility.yul\":3176:3229   */\n      tag_293\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3166:3229   */\n      swap2\n      pop\n        /* \"#utility.yul\":3122:3239   */\n      pop\n        /* \"#utility.yul\":2917:3246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3378   */\n    tag_294:\n        /* \"#utility.yul\":3289:3296   */\n      0x00\n        /* \"#utility.yul\":3329:3371   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3322:3327   */\n      dup3\n        /* \"#utility.yul\":3318:3372   */\n      and\n        /* \"#utility.yul\":3307:3372   */\n      swap1\n      pop\n        /* \"#utility.yul\":3252:3378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3384:3444   */\n    tag_295:\n        /* \"#utility.yul\":3412:3415   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3426:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3384:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3592   */\n    tag_296:\n        /* \"#utility.yul\":3500:3509   */\n      0x00\n        /* \"#utility.yul\":3533:3586   */\n      tag_389\n        /* \"#utility.yul\":3551:3585   */\n      tag_390\n        /* \"#utility.yul\":3560:3584   */\n      tag_391\n        /* \"#utility.yul\":3578:3583   */\n      dup5\n        /* \"#utility.yul\":3560:3584   */\n      tag_294\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3551:3585   */\n      tag_295\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3533:3586   */\n      tag_294\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3520:3586   */\n      swap1\n      pop\n        /* \"#utility.yul\":3450:3592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3598:3724   */\n    tag_297:\n        /* \"#utility.yul\":3648:3657   */\n      0x00\n        /* \"#utility.yul\":3681:3718   */\n      tag_393\n        /* \"#utility.yul\":3712:3717   */\n      dup3\n        /* \"#utility.yul\":3681:3718   */\n      tag_296\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3668:3718   */\n      swap1\n      pop\n        /* \"#utility.yul\":3598:3724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3730:3870   */\n    tag_298:\n        /* \"#utility.yul\":3794:3803   */\n      0x00\n        /* \"#utility.yul\":3827:3864   */\n      tag_395\n        /* \"#utility.yul\":3858:3863   */\n      dup3\n        /* \"#utility.yul\":3827:3864   */\n      tag_297\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3814:3864   */\n      swap1\n      pop\n        /* \"#utility.yul\":3730:3870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3876:4035   */\n    tag_299:\n        /* \"#utility.yul\":3977:4028   */\n      tag_397\n        /* \"#utility.yul\":4022:4027   */\n      dup2\n        /* \"#utility.yul\":3977:4028   */\n      tag_298\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3972:3975   */\n      dup3\n        /* \"#utility.yul\":3965:4029   */\n      mstore\n        /* \"#utility.yul\":3876:4035   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4041:4159   */\n    tag_300:\n        /* \"#utility.yul\":4128:4152   */\n      tag_399\n        /* \"#utility.yul\":4146:4151   */\n      dup2\n        /* \"#utility.yul\":4128:4152   */\n      tag_291\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4123:4126   */\n      dup3\n        /* \"#utility.yul\":4116:4153   */\n      mstore\n        /* \"#utility.yul\":4041:4159   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4165:4525   */\n    tag_39:\n        /* \"#utility.yul\":4300:4304   */\n      0x00\n        /* \"#utility.yul\":4338:4340   */\n      0x40\n        /* \"#utility.yul\":4327:4336   */\n      dup3\n        /* \"#utility.yul\":4323:4341   */\n      add\n        /* \"#utility.yul\":4315:4341   */\n      swap1\n      pop\n        /* \"#utility.yul\":4351:4436   */\n      tag_401\n        /* \"#utility.yul\":4433:4434   */\n      0x00\n        /* \"#utility.yul\":4422:4431   */\n      dup4\n        /* \"#utility.yul\":4418:4435   */\n      add\n        /* \"#utility.yul\":4409:4415   */\n      dup6\n        /* \"#utility.yul\":4351:4436   */\n      tag_299\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4446:4518   */\n      tag_402\n        /* \"#utility.yul\":4514:4516   */\n      0x20\n        /* \"#utility.yul\":4503:4512   */\n      dup4\n        /* \"#utility.yul\":4499:4517   */\n      add\n        /* \"#utility.yul\":4490:4496   */\n      dup5\n        /* \"#utility.yul\":4446:4518   */\n      tag_300\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4165:4525   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4531:4627   */\n    tag_301:\n        /* \"#utility.yul\":4568:4575   */\n      0x00\n        /* \"#utility.yul\":4597:4621   */\n      tag_404\n        /* \"#utility.yul\":4615:4620   */\n      dup3\n        /* \"#utility.yul\":4597:4621   */\n      tag_294\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4586:4621   */\n      swap1\n      pop\n        /* \"#utility.yul\":4531:4627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4755   */\n    tag_302:\n        /* \"#utility.yul\":4706:4730   */\n      tag_406\n        /* \"#utility.yul\":4724:4729   */\n      dup2\n        /* \"#utility.yul\":4706:4730   */\n      tag_301\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4699:4704   */\n      dup2\n        /* \"#utility.yul\":4696:4731   */\n      eq\n        /* \"#utility.yul\":4686:4749   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4745:4746   */\n      0x00\n        /* \"#utility.yul\":4742:4743   */\n      dup1\n        /* \"#utility.yul\":4735:4747   */\n      revert\n        /* \"#utility.yul\":4686:4749   */\n    tag_407:\n        /* \"#utility.yul\":4633:4755   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4761:4900   */\n    tag_303:\n        /* \"#utility.yul\":4807:4812   */\n      0x00\n        /* \"#utility.yul\":4845:4851   */\n      dup2\n        /* \"#utility.yul\":4832:4852   */\n      calldataload\n        /* \"#utility.yul\":4823:4852   */\n      swap1\n      pop\n        /* \"#utility.yul\":4861:4894   */\n      tag_409\n        /* \"#utility.yul\":4888:4893   */\n      dup2\n        /* \"#utility.yul\":4861:4894   */\n      tag_302\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4761:4900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4906:5380   */\n    tag_42:\n        /* \"#utility.yul\":4974:4980   */\n      0x00\n        /* \"#utility.yul\":4982:4988   */\n      dup1\n        /* \"#utility.yul\":5031:5033   */\n      0x40\n        /* \"#utility.yul\":5019:5028   */\n      dup4\n        /* \"#utility.yul\":5010:5017   */\n      dup6\n        /* \"#utility.yul\":5006:5029   */\n      sub\n        /* \"#utility.yul\":5002:5034   */\n      slt\n        /* \"#utility.yul\":4999:5118   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":5037:5116   */\n      tag_412\n      tag_280\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4999:5118   */\n    tag_411:\n        /* \"#utility.yul\":5157:5158   */\n      0x00\n        /* \"#utility.yul\":5182:5235   */\n      tag_413\n        /* \"#utility.yul\":5227:5234   */\n      dup6\n        /* \"#utility.yul\":5218:5224   */\n      dup3\n        /* \"#utility.yul\":5207:5216   */\n      dup7\n        /* \"#utility.yul\":5203:5225   */\n      add\n        /* \"#utility.yul\":5182:5235   */\n      tag_289\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5172:5235   */\n      swap3\n      pop\n        /* \"#utility.yul\":5128:5245   */\n      pop\n        /* \"#utility.yul\":5284:5286   */\n      0x20\n        /* \"#utility.yul\":5310:5363   */\n      tag_414\n        /* \"#utility.yul\":5355:5362   */\n      dup6\n        /* \"#utility.yul\":5346:5352   */\n      dup3\n        /* \"#utility.yul\":5335:5344   */\n      dup7\n        /* \"#utility.yul\":5331:5353   */\n      add\n        /* \"#utility.yul\":5310:5363   */\n      tag_303\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5300:5363   */\n      swap2\n      pop\n        /* \"#utility.yul\":5255:5373   */\n      pop\n        /* \"#utility.yul\":4906:5380   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5386:5496   */\n    tag_304:\n        /* \"#utility.yul\":5437:5444   */\n      0x00\n        /* \"#utility.yul\":5466:5490   */\n      tag_416\n        /* \"#utility.yul\":5484:5489   */\n      dup3\n        /* \"#utility.yul\":5466:5490   */\n      tag_301\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5455:5490   */\n      swap1\n      pop\n        /* \"#utility.yul\":5386:5496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5502:5652   */\n    tag_305:\n        /* \"#utility.yul\":5589:5627   */\n      tag_418\n        /* \"#utility.yul\":5621:5626   */\n      dup2\n        /* \"#utility.yul\":5589:5627   */\n      tag_304\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5579:5628   */\n      eq\n        /* \"#utility.yul\":5569:5646   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5639:5640   */\n      dup1\n        /* \"#utility.yul\":5632:5644   */\n      revert\n        /* \"#utility.yul\":5569:5646   */\n    tag_419:\n        /* \"#utility.yul\":5502:5652   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5658:5825   */\n    tag_306:\n        /* \"#utility.yul\":5718:5723   */\n      0x00\n        /* \"#utility.yul\":5756:5762   */\n      dup2\n        /* \"#utility.yul\":5743:5763   */\n      calldataload\n        /* \"#utility.yul\":5734:5763   */\n      swap1\n      pop\n        /* \"#utility.yul\":5772:5819   */\n      tag_421\n        /* \"#utility.yul\":5813:5818   */\n      dup2\n        /* \"#utility.yul\":5772:5819   */\n      tag_305\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5658:5825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5831:6188   */\n    tag_49:\n        /* \"#utility.yul\":5904:5910   */\n      0x00\n        /* \"#utility.yul\":5953:5955   */\n      0x20\n        /* \"#utility.yul\":5941:5950   */\n      dup3\n        /* \"#utility.yul\":5932:5939   */\n      dup5\n        /* \"#utility.yul\":5928:5951   */\n      sub\n        /* \"#utility.yul\":5924:5956   */\n      slt\n        /* \"#utility.yul\":5921:6040   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":5959:6038   */\n      tag_424\n      tag_280\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5921:6040   */\n    tag_423:\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6104:6171   */\n      tag_425\n        /* \"#utility.yul\":6163:6170   */\n      dup5\n        /* \"#utility.yul\":6154:6160   */\n      dup3\n        /* \"#utility.yul\":6143:6152   */\n      dup6\n        /* \"#utility.yul\":6139:6161   */\n      add\n        /* \"#utility.yul\":6104:6171   */\n      tag_306\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6094:6171   */\n      swap2\n      pop\n        /* \"#utility.yul\":6050:6181   */\n      pop\n        /* \"#utility.yul\":5831:6188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6194:6416   */\n    tag_54:\n        /* \"#utility.yul\":6287:6291   */\n      0x00\n        /* \"#utility.yul\":6325:6327   */\n      0x20\n        /* \"#utility.yul\":6314:6323   */\n      dup3\n        /* \"#utility.yul\":6310:6328   */\n      add\n        /* \"#utility.yul\":6302:6328   */\n      swap1\n      pop\n        /* \"#utility.yul\":6338:6409   */\n      tag_427\n        /* \"#utility.yul\":6406:6407   */\n      0x00\n        /* \"#utility.yul\":6395:6404   */\n      dup4\n        /* \"#utility.yul\":6391:6408   */\n      add\n        /* \"#utility.yul\":6382:6388   */\n      dup5\n        /* \"#utility.yul\":6338:6409   */\n      tag_300\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":6194:6416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6422:6896   */\n    tag_59:\n        /* \"#utility.yul\":6490:6496   */\n      0x00\n        /* \"#utility.yul\":6498:6504   */\n      dup1\n        /* \"#utility.yul\":6547:6549   */\n      0x40\n        /* \"#utility.yul\":6535:6544   */\n      dup4\n        /* \"#utility.yul\":6526:6533   */\n      dup6\n        /* \"#utility.yul\":6522:6545   */\n      sub\n        /* \"#utility.yul\":6518:6550   */\n      slt\n        /* \"#utility.yul\":6515:6634   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":6553:6632   */\n      tag_430\n      tag_280\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6515:6634   */\n    tag_429:\n        /* \"#utility.yul\":6673:6674   */\n      0x00\n        /* \"#utility.yul\":6698:6751   */\n      tag_431\n        /* \"#utility.yul\":6743:6750   */\n      dup6\n        /* \"#utility.yul\":6734:6740   */\n      dup3\n        /* \"#utility.yul\":6723:6732   */\n      dup7\n        /* \"#utility.yul\":6719:6741   */\n      add\n        /* \"#utility.yul\":6698:6751   */\n      tag_293\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6688:6751   */\n      swap3\n      pop\n        /* \"#utility.yul\":6644:6761   */\n      pop\n        /* \"#utility.yul\":6800:6802   */\n      0x20\n        /* \"#utility.yul\":6826:6879   */\n      tag_432\n        /* \"#utility.yul\":6871:6878   */\n      dup6\n        /* \"#utility.yul\":6862:6868   */\n      dup3\n        /* \"#utility.yul\":6851:6860   */\n      dup7\n        /* \"#utility.yul\":6847:6869   */\n      add\n        /* \"#utility.yul\":6826:6879   */\n      tag_293\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6816:6879   */\n      swap2\n      pop\n        /* \"#utility.yul\":6771:6889   */\n      pop\n        /* \"#utility.yul\":6422:6896   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6902:7020   */\n    tag_307:\n        /* \"#utility.yul\":6989:7013   */\n      tag_434\n        /* \"#utility.yul\":7007:7012   */\n      dup2\n        /* \"#utility.yul\":6989:7013   */\n      tag_301\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6984:6987   */\n      dup3\n        /* \"#utility.yul\":6977:7014   */\n      mstore\n        /* \"#utility.yul\":6902:7020   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7248   */\n    tag_64:\n        /* \"#utility.yul\":7119:7123   */\n      0x00\n        /* \"#utility.yul\":7157:7159   */\n      0x20\n        /* \"#utility.yul\":7146:7155   */\n      dup3\n        /* \"#utility.yul\":7142:7160   */\n      add\n        /* \"#utility.yul\":7134:7160   */\n      swap1\n      pop\n        /* \"#utility.yul\":7170:7241   */\n      tag_436\n        /* \"#utility.yul\":7238:7239   */\n      0x00\n        /* \"#utility.yul\":7227:7236   */\n      dup4\n        /* \"#utility.yul\":7223:7240   */\n      add\n        /* \"#utility.yul\":7214:7220   */\n      dup5\n        /* \"#utility.yul\":7170:7241   */\n      tag_307\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":7026:7248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7254:7583   */\n    tag_83:\n        /* \"#utility.yul\":7313:7319   */\n      0x00\n        /* \"#utility.yul\":7362:7364   */\n      0x20\n        /* \"#utility.yul\":7350:7359   */\n      dup3\n        /* \"#utility.yul\":7341:7348   */\n      dup5\n        /* \"#utility.yul\":7337:7360   */\n      sub\n        /* \"#utility.yul\":7333:7365   */\n      slt\n        /* \"#utility.yul\":7330:7449   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":7368:7447   */\n      tag_439\n      tag_280\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7330:7449   */\n    tag_438:\n        /* \"#utility.yul\":7488:7489   */\n      0x00\n        /* \"#utility.yul\":7513:7566   */\n      tag_440\n        /* \"#utility.yul\":7558:7565   */\n      dup5\n        /* \"#utility.yul\":7549:7555   */\n      dup3\n        /* \"#utility.yul\":7538:7547   */\n      dup6\n        /* \"#utility.yul\":7534:7556   */\n      add\n        /* \"#utility.yul\":7513:7566   */\n      tag_303\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7503:7566   */\n      swap2\n      pop\n        /* \"#utility.yul\":7459:7576   */\n      pop\n        /* \"#utility.yul\":7254:7583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7589:7758   */\n    tag_308:\n        /* \"#utility.yul\":7673:7684   */\n      0x00\n        /* \"#utility.yul\":7707:7713   */\n      dup3\n        /* \"#utility.yul\":7702:7705   */\n      dup3\n        /* \"#utility.yul\":7695:7714   */\n      mstore\n        /* \"#utility.yul\":7747:7751   */\n      0x20\n        /* \"#utility.yul\":7742:7745   */\n      dup3\n        /* \"#utility.yul\":7738:7752   */\n      add\n        /* \"#utility.yul\":7723:7752   */\n      swap1\n      pop\n        /* \"#utility.yul\":7589:7758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7764:7998   */\n    tag_309:\n        /* \"#utility.yul\":7904:7938   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":7900:7901   */\n      0x00\n        /* \"#utility.yul\":7892:7898   */\n      dup3\n        /* \"#utility.yul\":7888:7902   */\n      add\n        /* \"#utility.yul\":7881:7939   */\n      mstore\n        /* \"#utility.yul\":7973:7990   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":7968:7970   */\n      0x20\n        /* \"#utility.yul\":7960:7966   */\n      dup3\n        /* \"#utility.yul\":7956:7971   */\n      add\n        /* \"#utility.yul\":7949:7991   */\n      mstore\n        /* \"#utility.yul\":7764:7998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8004:8370   */\n    tag_310:\n        /* \"#utility.yul\":8146:8149   */\n      0x00\n        /* \"#utility.yul\":8167:8234   */\n      tag_444\n        /* \"#utility.yul\":8231:8233   */\n      0x2f\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8167:8234   */\n      tag_308\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8160:8234   */\n      swap2\n      pop\n        /* \"#utility.yul\":8243:8336   */\n      tag_445\n        /* \"#utility.yul\":8332:8335   */\n      dup3\n        /* \"#utility.yul\":8243:8336   */\n      tag_309\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8361:8363   */\n      0x40\n        /* \"#utility.yul\":8356:8359   */\n      dup3\n        /* \"#utility.yul\":8352:8364   */\n      add\n        /* \"#utility.yul\":8345:8364   */\n      swap1\n      pop\n        /* \"#utility.yul\":8004:8370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8376:8795   */\n    tag_102:\n        /* \"#utility.yul\":8542:8546   */\n      0x00\n        /* \"#utility.yul\":8580:8582   */\n      0x20\n        /* \"#utility.yul\":8569:8578   */\n      dup3\n        /* \"#utility.yul\":8565:8583   */\n      add\n        /* \"#utility.yul\":8557:8583   */\n      swap1\n      pop\n        /* \"#utility.yul\":8629:8638   */\n      dup2\n        /* \"#utility.yul\":8623:8627   */\n      dup2\n        /* \"#utility.yul\":8619:8639   */\n      sub\n        /* \"#utility.yul\":8615:8616   */\n      0x00\n        /* \"#utility.yul\":8604:8613   */\n      dup4\n        /* \"#utility.yul\":8600:8617   */\n      add\n        /* \"#utility.yul\":8593:8640   */\n      mstore\n        /* \"#utility.yul\":8657:8788   */\n      tag_447\n        /* \"#utility.yul\":8783:8787   */\n      dup2\n        /* \"#utility.yul\":8657:8788   */\n      tag_310\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8649:8788   */\n      swap1\n      pop\n        /* \"#utility.yul\":8376:8795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8801:8962   */\n    tag_311:\n        /* \"#utility.yul\":8941:8954   */\n      0x4e6f7420616c6c6f776564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8937:8938   */\n      0x00\n        /* \"#utility.yul\":8929:8935   */\n      dup3\n        /* \"#utility.yul\":8925:8939   */\n      add\n        /* \"#utility.yul\":8918:8955   */\n      mstore\n        /* \"#utility.yul\":8801:8962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8968:9334   */\n    tag_312:\n        /* \"#utility.yul\":9110:9113   */\n      0x00\n        /* \"#utility.yul\":9131:9198   */\n      tag_450\n        /* \"#utility.yul\":9195:9197   */\n      0x0b\n        /* \"#utility.yul\":9190:9193   */\n      dup4\n        /* \"#utility.yul\":9131:9198   */\n      tag_308\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9124:9198   */\n      swap2\n      pop\n        /* \"#utility.yul\":9207:9300   */\n      tag_451\n        /* \"#utility.yul\":9296:9299   */\n      dup3\n        /* \"#utility.yul\":9207:9300   */\n      tag_311\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9325:9327   */\n      0x20\n        /* \"#utility.yul\":9320:9323   */\n      dup3\n        /* \"#utility.yul\":9316:9328   */\n      add\n        /* \"#utility.yul\":9309:9328   */\n      swap1\n      pop\n        /* \"#utility.yul\":8968:9334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9340:9759   */\n    tag_110:\n        /* \"#utility.yul\":9506:9510   */\n      0x00\n        /* \"#utility.yul\":9544:9546   */\n      0x20\n        /* \"#utility.yul\":9533:9542   */\n      dup3\n        /* \"#utility.yul\":9529:9547   */\n      add\n        /* \"#utility.yul\":9521:9547   */\n      swap1\n      pop\n        /* \"#utility.yul\":9593:9602   */\n      dup2\n        /* \"#utility.yul\":9587:9591   */\n      dup2\n        /* \"#utility.yul\":9583:9603   */\n      sub\n        /* \"#utility.yul\":9579:9580   */\n      0x00\n        /* \"#utility.yul\":9568:9577   */\n      dup4\n        /* \"#utility.yul\":9564:9581   */\n      add\n        /* \"#utility.yul\":9557:9604   */\n      mstore\n        /* \"#utility.yul\":9621:9752   */\n      tag_453\n        /* \"#utility.yul\":9747:9751   */\n      dup2\n        /* \"#utility.yul\":9621:9752   */\n      tag_312\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9613:9752   */\n      swap1\n      pop\n        /* \"#utility.yul\":9340:9759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9765:9945   */\n    tag_313:\n        /* \"#utility.yul\":9813:9890   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9810:9811   */\n      0x00\n        /* \"#utility.yul\":9803:9891   */\n      mstore\n        /* \"#utility.yul\":9910:9914   */\n      0x11\n        /* \"#utility.yul\":9907:9908   */\n      0x04\n        /* \"#utility.yul\":9900:9915   */\n      mstore\n        /* \"#utility.yul\":9934:9938   */\n      0x24\n        /* \"#utility.yul\":9931:9932   */\n      0x00\n        /* \"#utility.yul\":9924:9939   */\n      revert\n        /* \"#utility.yul\":9951:10184   */\n    tag_114:\n        /* \"#utility.yul\":9990:9993   */\n      0x00\n        /* \"#utility.yul\":10013:10037   */\n      tag_456\n        /* \"#utility.yul\":10031:10036   */\n      dup3\n        /* \"#utility.yul\":10013:10037   */\n      tag_291\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10004:10037   */\n      swap2\n      pop\n        /* \"#utility.yul\":10059:10125   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10052:10057   */\n      dup3\n        /* \"#utility.yul\":10049:10126   */\n      sub\n        /* \"#utility.yul\":10046:10149   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":10129:10147   */\n      tag_458\n      tag_313\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10046:10149   */\n    tag_457:\n        /* \"#utility.yul\":10176:10177   */\n      0x01\n        /* \"#utility.yul\":10169:10174   */\n      dup3\n        /* \"#utility.yul\":10165:10178   */\n      add\n        /* \"#utility.yul\":10158:10178   */\n      swap1\n      pop\n        /* \"#utility.yul\":9951:10184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10190:10415   */\n    tag_314:\n        /* \"#utility.yul\":10330:10364   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10326:10327   */\n      0x00\n        /* \"#utility.yul\":10318:10324   */\n      dup3\n        /* \"#utility.yul\":10314:10328   */\n      add\n        /* \"#utility.yul\":10307:10365   */\n      mstore\n        /* \"#utility.yul\":10399:10407   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10394:10396   */\n      0x20\n        /* \"#utility.yul\":10386:10392   */\n      dup3\n        /* \"#utility.yul\":10382:10397   */\n      add\n        /* \"#utility.yul\":10375:10408   */\n      mstore\n        /* \"#utility.yul\":10190:10415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10421:10787   */\n    tag_315:\n        /* \"#utility.yul\":10563:10566   */\n      0x00\n        /* \"#utility.yul\":10584:10651   */\n      tag_461\n        /* \"#utility.yul\":10648:10650   */\n      0x26\n        /* \"#utility.yul\":10643:10646   */\n      dup4\n        /* \"#utility.yul\":10584:10651   */\n      tag_308\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10577:10651   */\n      swap2\n      pop\n        /* \"#utility.yul\":10660:10753   */\n      tag_462\n        /* \"#utility.yul\":10749:10752   */\n      dup3\n        /* \"#utility.yul\":10660:10753   */\n      tag_314\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10778:10780   */\n      0x40\n        /* \"#utility.yul\":10773:10776   */\n      dup3\n        /* \"#utility.yul\":10769:10781   */\n      add\n        /* \"#utility.yul\":10762:10781   */\n      swap1\n      pop\n        /* \"#utility.yul\":10421:10787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10793:11212   */\n    tag_154:\n        /* \"#utility.yul\":10959:10963   */\n      0x00\n        /* \"#utility.yul\":10997:10999   */\n      0x20\n        /* \"#utility.yul\":10986:10995   */\n      dup3\n        /* \"#utility.yul\":10982:11000   */\n      add\n        /* \"#utility.yul\":10974:11000   */\n      swap1\n      pop\n        /* \"#utility.yul\":11046:11055   */\n      dup2\n        /* \"#utility.yul\":11040:11044   */\n      dup2\n        /* \"#utility.yul\":11036:11056   */\n      sub\n        /* \"#utility.yul\":11032:11033   */\n      0x00\n        /* \"#utility.yul\":11021:11030   */\n      dup4\n        /* \"#utility.yul\":11017:11034   */\n      add\n        /* \"#utility.yul\":11010:11057   */\n      mstore\n        /* \"#utility.yul\":11074:11205   */\n      tag_464\n        /* \"#utility.yul\":11200:11204   */\n      dup2\n        /* \"#utility.yul\":11074:11205   */\n      tag_315\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11066:11205   */\n      swap1\n      pop\n        /* \"#utility.yul\":10793:11212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11218:11400   */\n    tag_316:\n        /* \"#utility.yul\":11358:11392   */\n      0x436f6c6c61746572616c204164647265737320416c7265616479204164646564\n        /* \"#utility.yul\":11354:11355   */\n      0x00\n        /* \"#utility.yul\":11346:11352   */\n      dup3\n        /* \"#utility.yul\":11342:11356   */\n      add\n        /* \"#utility.yul\":11335:11393   */\n      mstore\n        /* \"#utility.yul\":11218:11400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11406:11772   */\n    tag_317:\n        /* \"#utility.yul\":11548:11551   */\n      0x00\n        /* \"#utility.yul\":11569:11636   */\n      tag_467\n        /* \"#utility.yul\":11633:11635   */\n      0x20\n        /* \"#utility.yul\":11628:11631   */\n      dup4\n        /* \"#utility.yul\":11569:11636   */\n      tag_308\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11562:11636   */\n      swap2\n      pop\n        /* \"#utility.yul\":11645:11738   */\n      tag_468\n        /* \"#utility.yul\":11734:11737   */\n      dup3\n        /* \"#utility.yul\":11645:11738   */\n      tag_316\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11763:11765   */\n      0x20\n        /* \"#utility.yul\":11758:11761   */\n      dup3\n        /* \"#utility.yul\":11754:11766   */\n      add\n        /* \"#utility.yul\":11747:11766   */\n      swap1\n      pop\n        /* \"#utility.yul\":11406:11772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11778:12197   */\n    tag_176:\n        /* \"#utility.yul\":11944:11948   */\n      0x00\n        /* \"#utility.yul\":11982:11984   */\n      0x20\n        /* \"#utility.yul\":11971:11980   */\n      dup3\n        /* \"#utility.yul\":11967:11985   */\n      add\n        /* \"#utility.yul\":11959:11985   */\n      swap1\n      pop\n        /* \"#utility.yul\":12031:12040   */\n      dup2\n        /* \"#utility.yul\":12025:12029   */\n      dup2\n        /* \"#utility.yul\":12021:12041   */\n      sub\n        /* \"#utility.yul\":12017:12018   */\n      0x00\n        /* \"#utility.yul\":12006:12015   */\n      dup4\n        /* \"#utility.yul\":12002:12019   */\n      add\n        /* \"#utility.yul\":11995:12042   */\n      mstore\n        /* \"#utility.yul\":12059:12190   */\n      tag_470\n        /* \"#utility.yul\":12185:12189   */\n      dup2\n        /* \"#utility.yul\":12059:12190   */\n      tag_317\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12051:12190   */\n      swap1\n      pop\n        /* \"#utility.yul\":11778:12197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12203:12385   */\n    tag_318:\n        /* \"#utility.yul\":12343:12377   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12339:12340   */\n      0x00\n        /* \"#utility.yul\":12331:12337   */\n      dup3\n        /* \"#utility.yul\":12327:12341   */\n      add\n        /* \"#utility.yul\":12320:12378   */\n      mstore\n        /* \"#utility.yul\":12203:12385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12391:12757   */\n    tag_319:\n        /* \"#utility.yul\":12533:12536   */\n      0x00\n        /* \"#utility.yul\":12554:12621   */\n      tag_473\n        /* \"#utility.yul\":12618:12620   */\n      0x20\n        /* \"#utility.yul\":12613:12616   */\n      dup4\n        /* \"#utility.yul\":12554:12621   */\n      tag_308\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12547:12621   */\n      swap2\n      pop\n        /* \"#utility.yul\":12630:12723   */\n      tag_474\n        /* \"#utility.yul\":12719:12722   */\n      dup3\n        /* \"#utility.yul\":12630:12723   */\n      tag_318\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":12748:12750   */\n      0x20\n        /* \"#utility.yul\":12743:12746   */\n      dup3\n        /* \"#utility.yul\":12739:12751   */\n      add\n        /* \"#utility.yul\":12732:12751   */\n      swap1\n      pop\n        /* \"#utility.yul\":12391:12757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12763:13182   */\n    tag_183:\n        /* \"#utility.yul\":12929:12933   */\n      0x00\n        /* \"#utility.yul\":12967:12969   */\n      0x20\n        /* \"#utility.yul\":12956:12965   */\n      dup3\n        /* \"#utility.yul\":12952:12970   */\n      add\n        /* \"#utility.yul\":12944:12970   */\n      swap1\n      pop\n        /* \"#utility.yul\":13016:13025   */\n      dup2\n        /* \"#utility.yul\":13010:13014   */\n      dup2\n        /* \"#utility.yul\":13006:13026   */\n      sub\n        /* \"#utility.yul\":13002:13003   */\n      0x00\n        /* \"#utility.yul\":12991:13000   */\n      dup4\n        /* \"#utility.yul\":12987:13004   */\n      add\n        /* \"#utility.yul\":12980:13027   */\n      mstore\n        /* \"#utility.yul\":13044:13175   */\n      tag_476\n        /* \"#utility.yul\":13170:13174   */\n      dup2\n        /* \"#utility.yul\":13044:13175   */\n      tag_319\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":13036:13175   */\n      swap1\n      pop\n        /* \"#utility.yul\":12763:13182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13188:13520   */\n    tag_188:\n        /* \"#utility.yul\":13309:13313   */\n      0x00\n        /* \"#utility.yul\":13347:13349   */\n      0x40\n        /* \"#utility.yul\":13336:13345   */\n      dup3\n        /* \"#utility.yul\":13332:13350   */\n      add\n        /* \"#utility.yul\":13324:13350   */\n      swap1\n      pop\n        /* \"#utility.yul\":13360:13431   */\n      tag_478\n        /* \"#utility.yul\":13428:13429   */\n      0x00\n        /* \"#utility.yul\":13417:13426   */\n      dup4\n        /* \"#utility.yul\":13413:13430   */\n      add\n        /* \"#utility.yul\":13404:13410   */\n      dup6\n        /* \"#utility.yul\":13360:13431   */\n      tag_307\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13441:13513   */\n      tag_479\n        /* \"#utility.yul\":13509:13511   */\n      0x20\n        /* \"#utility.yul\":13498:13507   */\n      dup4\n        /* \"#utility.yul\":13494:13512   */\n      add\n        /* \"#utility.yul\":13485:13491   */\n      dup5\n        /* \"#utility.yul\":13441:13513   */\n      tag_300\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":13188:13520   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13526:13720   */\n    tag_192:\n        /* \"#utility.yul\":13566:13570   */\n      0x00\n        /* \"#utility.yul\":13586:13606   */\n      tag_481\n        /* \"#utility.yul\":13604:13605   */\n      dup3\n        /* \"#utility.yul\":13586:13606   */\n      tag_291\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":13581:13606   */\n      swap2\n      pop\n        /* \"#utility.yul\":13620:13640   */\n      tag_482\n        /* \"#utility.yul\":13638:13639   */\n      dup4\n        /* \"#utility.yul\":13620:13640   */\n      tag_291\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13615:13640   */\n      swap3\n      pop\n        /* \"#utility.yul\":13664:13665   */\n      dup3\n        /* \"#utility.yul\":13661:13662   */\n      dup3\n        /* \"#utility.yul\":13657:13666   */\n      sub\n        /* \"#utility.yul\":13649:13666   */\n      swap1\n      pop\n        /* \"#utility.yul\":13688:13689   */\n      dup2\n        /* \"#utility.yul\":13682:13686   */\n      dup2\n        /* \"#utility.yul\":13679:13690   */\n      gt\n        /* \"#utility.yul\":13676:13713   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":13693:13711   */\n      tag_484\n      tag_313\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13676:13713   */\n    tag_483:\n        /* \"#utility.yul\":13526:13720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13726:14168   */\n    tag_196:\n        /* \"#utility.yul\":13875:13879   */\n      0x00\n        /* \"#utility.yul\":13913:13915   */\n      0x60\n        /* \"#utility.yul\":13902:13911   */\n      dup3\n        /* \"#utility.yul\":13898:13916   */\n      add\n        /* \"#utility.yul\":13890:13916   */\n      swap1\n      pop\n        /* \"#utility.yul\":13926:13997   */\n      tag_486\n        /* \"#utility.yul\":13994:13995   */\n      0x00\n        /* \"#utility.yul\":13983:13992   */\n      dup4\n        /* \"#utility.yul\":13979:13996   */\n      add\n        /* \"#utility.yul\":13970:13976   */\n      dup7\n        /* \"#utility.yul\":13926:13997   */\n      tag_307\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":14007:14079   */\n      tag_487\n        /* \"#utility.yul\":14075:14077   */\n      0x20\n        /* \"#utility.yul\":14064:14073   */\n      dup4\n        /* \"#utility.yul\":14060:14078   */\n      add\n        /* \"#utility.yul\":14051:14057   */\n      dup6\n        /* \"#utility.yul\":14007:14079   */\n      tag_307\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":14089:14161   */\n      tag_488\n        /* \"#utility.yul\":14157:14159   */\n      0x40\n        /* \"#utility.yul\":14146:14155   */\n      dup4\n        /* \"#utility.yul\":14142:14160   */\n      add\n        /* \"#utility.yul\":14133:14139   */\n      dup5\n        /* \"#utility.yul\":14089:14161   */\n      tag_300\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13726:14168   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14174:14365   */\n    tag_199:\n        /* \"#utility.yul\":14214:14217   */\n      0x00\n        /* \"#utility.yul\":14233:14253   */\n      tag_490\n        /* \"#utility.yul\":14251:14252   */\n      dup3\n        /* \"#utility.yul\":14233:14253   */\n      tag_291\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14228:14253   */\n      swap2\n      pop\n        /* \"#utility.yul\":14267:14287   */\n      tag_491\n        /* \"#utility.yul\":14285:14286   */\n      dup4\n        /* \"#utility.yul\":14267:14287   */\n      tag_291\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14262:14287   */\n      swap3\n      pop\n        /* \"#utility.yul\":14310:14311   */\n      dup3\n        /* \"#utility.yul\":14307:14308   */\n      dup3\n        /* \"#utility.yul\":14303:14312   */\n      add\n        /* \"#utility.yul\":14296:14312   */\n      swap1\n      pop\n        /* \"#utility.yul\":14331:14334   */\n      dup1\n        /* \"#utility.yul\":14328:14329   */\n      dup3\n        /* \"#utility.yul\":14325:14335   */\n      gt\n        /* \"#utility.yul\":14322:14358   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":14338:14356   */\n      tag_493\n      tag_313\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14322:14358   */\n    tag_492:\n        /* \"#utility.yul\":14174:14365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14371:14519   */\n    tag_320:\n        /* \"#utility.yul\":14473:14484   */\n      0x00\n        /* \"#utility.yul\":14510:14513   */\n      dup2\n        /* \"#utility.yul\":14495:14513   */\n      swap1\n      pop\n        /* \"#utility.yul\":14371:14519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14525:14698   */\n    tag_321:\n        /* \"#utility.yul\":14665:14690   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":14661:14662   */\n      0x00\n        /* \"#utility.yul\":14653:14659   */\n      dup3\n        /* \"#utility.yul\":14649:14663   */\n      add\n        /* \"#utility.yul\":14642:14691   */\n      mstore\n        /* \"#utility.yul\":14525:14698   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14704:15106   */\n    tag_322:\n        /* \"#utility.yul\":14864:14867   */\n      0x00\n        /* \"#utility.yul\":14885:14970   */\n      tag_497\n        /* \"#utility.yul\":14967:14969   */\n      0x17\n        /* \"#utility.yul\":14962:14965   */\n      dup4\n        /* \"#utility.yul\":14885:14970   */\n      tag_320\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14878:14970   */\n      swap2\n      pop\n        /* \"#utility.yul\":14979:15072   */\n      tag_498\n        /* \"#utility.yul\":15068:15071   */\n      dup3\n        /* \"#utility.yul\":14979:15072   */\n      tag_321\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":15097:15099   */\n      0x17\n        /* \"#utility.yul\":15092:15095   */\n      dup3\n        /* \"#utility.yul\":15088:15100   */\n      add\n        /* \"#utility.yul\":15081:15100   */\n      swap1\n      pop\n        /* \"#utility.yul\":14704:15106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15112:15211   */\n    tag_323:\n        /* \"#utility.yul\":15164:15170   */\n      0x00\n        /* \"#utility.yul\":15198:15203   */\n      dup2\n        /* \"#utility.yul\":15192:15204   */\n      mload\n        /* \"#utility.yul\":15182:15204   */\n      swap1\n      pop\n        /* \"#utility.yul\":15112:15211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15217:15463   */\n    tag_324:\n        /* \"#utility.yul\":15298:15299   */\n      0x00\n        /* \"#utility.yul\":15308:15421   */\n    tag_501:\n        /* \"#utility.yul\":15322:15328   */\n      dup4\n        /* \"#utility.yul\":15319:15320   */\n      dup2\n        /* \"#utility.yul\":15316:15329   */\n      lt\n        /* \"#utility.yul\":15308:15421   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":15407:15408   */\n      dup1\n        /* \"#utility.yul\":15402:15405   */\n      dup3\n        /* \"#utility.yul\":15398:15409   */\n      add\n        /* \"#utility.yul\":15392:15410   */\n      mload\n        /* \"#utility.yul\":15388:15389   */\n      dup2\n        /* \"#utility.yul\":15383:15386   */\n      dup5\n        /* \"#utility.yul\":15379:15390   */\n      add\n        /* \"#utility.yul\":15372:15411   */\n      mstore\n        /* \"#utility.yul\":15344:15346   */\n      0x20\n        /* \"#utility.yul\":15341:15342   */\n      dup2\n        /* \"#utility.yul\":15337:15347   */\n      add\n        /* \"#utility.yul\":15332:15347   */\n      swap1\n      pop\n        /* \"#utility.yul\":15308:15421   */\n      jump(tag_501)\n    tag_503:\n        /* \"#utility.yul\":15455:15456   */\n      0x00\n        /* \"#utility.yul\":15446:15452   */\n      dup5\n        /* \"#utility.yul\":15441:15444   */\n      dup5\n        /* \"#utility.yul\":15437:15453   */\n      add\n        /* \"#utility.yul\":15430:15457   */\n      mstore\n        /* \"#utility.yul\":15279:15463   */\n      pop\n        /* \"#utility.yul\":15217:15463   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15469:15859   */\n    tag_325:\n        /* \"#utility.yul\":15575:15578   */\n      0x00\n        /* \"#utility.yul\":15603:15642   */\n      tag_505\n        /* \"#utility.yul\":15636:15641   */\n      dup3\n        /* \"#utility.yul\":15603:15642   */\n      tag_323\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":15658:15747   */\n      tag_506\n        /* \"#utility.yul\":15740:15746   */\n      dup2\n        /* \"#utility.yul\":15735:15738   */\n      dup6\n        /* \"#utility.yul\":15658:15747   */\n      tag_320\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15651:15747   */\n      swap4\n      pop\n        /* \"#utility.yul\":15756:15821   */\n      tag_507\n        /* \"#utility.yul\":15814:15820   */\n      dup2\n        /* \"#utility.yul\":15809:15812   */\n      dup6\n        /* \"#utility.yul\":15802:15806   */\n      0x20\n        /* \"#utility.yul\":15795:15800   */\n      dup7\n        /* \"#utility.yul\":15791:15807   */\n      add\n        /* \"#utility.yul\":15756:15821   */\n      tag_324\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15846:15852   */\n      dup1\n        /* \"#utility.yul\":15841:15844   */\n      dup5\n        /* \"#utility.yul\":15837:15853   */\n      add\n        /* \"#utility.yul\":15830:15853   */\n      swap2\n      pop\n        /* \"#utility.yul\":15579:15859   */\n      pop\n        /* \"#utility.yul\":15469:15859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15865:16032   */\n    tag_326:\n        /* \"#utility.yul\":16005:16024   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":16001:16002   */\n      0x00\n        /* \"#utility.yul\":15993:15999   */\n      dup3\n        /* \"#utility.yul\":15989:16003   */\n      add\n        /* \"#utility.yul\":15982:16025   */\n      mstore\n        /* \"#utility.yul\":15865:16032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16038:16440   */\n    tag_327:\n        /* \"#utility.yul\":16198:16201   */\n      0x00\n        /* \"#utility.yul\":16219:16304   */\n      tag_510\n        /* \"#utility.yul\":16301:16303   */\n      0x11\n        /* \"#utility.yul\":16296:16299   */\n      dup4\n        /* \"#utility.yul\":16219:16304   */\n      tag_320\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":16212:16304   */\n      swap2\n      pop\n        /* \"#utility.yul\":16313:16406   */\n      tag_511\n        /* \"#utility.yul\":16402:16405   */\n      dup3\n        /* \"#utility.yul\":16313:16406   */\n      tag_326\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":16431:16433   */\n      0x11\n        /* \"#utility.yul\":16426:16429   */\n      dup3\n        /* \"#utility.yul\":16422:16434   */\n      add\n        /* \"#utility.yul\":16415:16434   */\n      swap1\n      pop\n        /* \"#utility.yul\":16038:16440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16446:17413   */\n    tag_208:\n        /* \"#utility.yul\":16828:16831   */\n      0x00\n        /* \"#utility.yul\":16850:16998   */\n      tag_513\n        /* \"#utility.yul\":16994:16997   */\n      dup3\n        /* \"#utility.yul\":16850:16998   */\n      tag_322\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":16843:16998   */\n      swap2\n      pop\n        /* \"#utility.yul\":17015:17110   */\n      tag_514\n        /* \"#utility.yul\":17106:17109   */\n      dup3\n        /* \"#utility.yul\":17097:17103   */\n      dup6\n        /* \"#utility.yul\":17015:17110   */\n      tag_325\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":17008:17110   */\n      swap2\n      pop\n        /* \"#utility.yul\":17127:17275   */\n      tag_515\n        /* \"#utility.yul\":17271:17274   */\n      dup3\n        /* \"#utility.yul\":17127:17275   */\n      tag_327\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":17120:17275   */\n      swap2\n      pop\n        /* \"#utility.yul\":17292:17387   */\n      tag_516\n        /* \"#utility.yul\":17383:17386   */\n      dup3\n        /* \"#utility.yul\":17374:17380   */\n      dup5\n        /* \"#utility.yul\":17292:17387   */\n      tag_325\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":17285:17387   */\n      swap2\n      pop\n        /* \"#utility.yul\":17404:17407   */\n      dup2\n        /* \"#utility.yul\":17397:17407   */\n      swap1\n      pop\n        /* \"#utility.yul\":16446:17413   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17419:17521   */\n    tag_328:\n        /* \"#utility.yul\":17460:17466   */\n      0x00\n        /* \"#utility.yul\":17511:17513   */\n      0x1f\n        /* \"#utility.yul\":17507:17514   */\n      not\n        /* \"#utility.yul\":17502:17504   */\n      0x1f\n        /* \"#utility.yul\":17495:17500   */\n      dup4\n        /* \"#utility.yul\":17491:17505   */\n      add\n        /* \"#utility.yul\":17487:17515   */\n      and\n        /* \"#utility.yul\":17477:17515   */\n      swap1\n      pop\n        /* \"#utility.yul\":17419:17521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17527:17904   */\n    tag_329:\n        /* \"#utility.yul\":17615:17618   */\n      0x00\n        /* \"#utility.yul\":17643:17682   */\n      tag_519\n        /* \"#utility.yul\":17676:17681   */\n      dup3\n        /* \"#utility.yul\":17643:17682   */\n      tag_323\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":17698:17769   */\n      tag_520\n        /* \"#utility.yul\":17762:17768   */\n      dup2\n        /* \"#utility.yul\":17757:17760   */\n      dup6\n        /* \"#utility.yul\":17698:17769   */\n      tag_308\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":17691:17769   */\n      swap4\n      pop\n        /* \"#utility.yul\":17778:17843   */\n      tag_521\n        /* \"#utility.yul\":17836:17842   */\n      dup2\n        /* \"#utility.yul\":17831:17834   */\n      dup6\n        /* \"#utility.yul\":17824:17828   */\n      0x20\n        /* \"#utility.yul\":17817:17822   */\n      dup7\n        /* \"#utility.yul\":17813:17829   */\n      add\n        /* \"#utility.yul\":17778:17843   */\n      tag_324\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17868:17897   */\n      tag_522\n        /* \"#utility.yul\":17890:17896   */\n      dup2\n        /* \"#utility.yul\":17868:17897   */\n      tag_328\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17863:17866   */\n      dup5\n        /* \"#utility.yul\":17859:17898   */\n      add\n        /* \"#utility.yul\":17852:17898   */\n      swap2\n      pop\n        /* \"#utility.yul\":17619:17904   */\n      pop\n        /* \"#utility.yul\":17527:17904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17910:18223   */\n    tag_210:\n        /* \"#utility.yul\":18023:18027   */\n      0x00\n        /* \"#utility.yul\":18061:18063   */\n      0x20\n        /* \"#utility.yul\":18050:18059   */\n      dup3\n        /* \"#utility.yul\":18046:18064   */\n      add\n        /* \"#utility.yul\":18038:18064   */\n      swap1\n      pop\n        /* \"#utility.yul\":18110:18119   */\n      dup2\n        /* \"#utility.yul\":18104:18108   */\n      dup2\n        /* \"#utility.yul\":18100:18120   */\n      sub\n        /* \"#utility.yul\":18096:18097   */\n      0x00\n        /* \"#utility.yul\":18085:18094   */\n      dup4\n        /* \"#utility.yul\":18081:18098   */\n      add\n        /* \"#utility.yul\":18074:18121   */\n      mstore\n        /* \"#utility.yul\":18138:18216   */\n      tag_524\n        /* \"#utility.yul\":18211:18215   */\n      dup2\n        /* \"#utility.yul\":18202:18208   */\n      dup5\n        /* \"#utility.yul\":18138:18216   */\n      tag_329\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":18130:18216   */\n      swap1\n      pop\n        /* \"#utility.yul\":17910:18223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18229:18345   */\n    tag_330:\n        /* \"#utility.yul\":18299:18320   */\n      tag_526\n        /* \"#utility.yul\":18314:18319   */\n      dup2\n        /* \"#utility.yul\":18299:18320   */\n      tag_285\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":18292:18297   */\n      dup2\n        /* \"#utility.yul\":18289:18321   */\n      eq\n        /* \"#utility.yul\":18279:18339   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":18335:18336   */\n      0x00\n        /* \"#utility.yul\":18332:18333   */\n      dup1\n        /* \"#utility.yul\":18325:18337   */\n      revert\n        /* \"#utility.yul\":18279:18339   */\n    tag_527:\n        /* \"#utility.yul\":18229:18345   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18351:18488   */\n    tag_331:\n        /* \"#utility.yul\":18405:18410   */\n      0x00\n        /* \"#utility.yul\":18436:18442   */\n      dup2\n        /* \"#utility.yul\":18430:18443   */\n      mload\n        /* \"#utility.yul\":18421:18443   */\n      swap1\n      pop\n        /* \"#utility.yul\":18452:18482   */\n      tag_529\n        /* \"#utility.yul\":18476:18481   */\n      dup2\n        /* \"#utility.yul\":18452:18482   */\n      tag_330\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":18351:18488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18494:18839   */\n    tag_216:\n        /* \"#utility.yul\":18561:18567   */\n      0x00\n        /* \"#utility.yul\":18610:18612   */\n      0x20\n        /* \"#utility.yul\":18598:18607   */\n      dup3\n        /* \"#utility.yul\":18589:18596   */\n      dup5\n        /* \"#utility.yul\":18585:18608   */\n      sub\n        /* \"#utility.yul\":18581:18613   */\n      slt\n        /* \"#utility.yul\":18578:18697   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":18616:18695   */\n      tag_532\n      tag_280\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":18578:18697   */\n    tag_531:\n        /* \"#utility.yul\":18736:18737   */\n      0x00\n        /* \"#utility.yul\":18761:18822   */\n      tag_533\n        /* \"#utility.yul\":18814:18821   */\n      dup5\n        /* \"#utility.yul\":18805:18811   */\n      dup3\n        /* \"#utility.yul\":18794:18803   */\n      dup6\n        /* \"#utility.yul\":18790:18812   */\n      add\n        /* \"#utility.yul\":18761:18822   */\n      tag_331\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":18751:18822   */\n      swap2\n      pop\n        /* \"#utility.yul\":18707:18832   */\n      pop\n        /* \"#utility.yul\":18494:18839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18845:19074   */\n    tag_332:\n        /* \"#utility.yul\":18985:19019   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":18981:18982   */\n      0x00\n        /* \"#utility.yul\":18973:18979   */\n      dup3\n        /* \"#utility.yul\":18969:18983   */\n      add\n        /* \"#utility.yul\":18962:19020   */\n      mstore\n        /* \"#utility.yul\":19054:19066   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19049:19051   */\n      0x20\n        /* \"#utility.yul\":19041:19047   */\n      dup3\n        /* \"#utility.yul\":19037:19052   */\n      add\n        /* \"#utility.yul\":19030:19067   */\n      mstore\n        /* \"#utility.yul\":18845:19074   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19080:19446   */\n    tag_333:\n        /* \"#utility.yul\":19222:19225   */\n      0x00\n        /* \"#utility.yul\":19243:19310   */\n      tag_536\n        /* \"#utility.yul\":19307:19309   */\n      0x2a\n        /* \"#utility.yul\":19302:19305   */\n      dup4\n        /* \"#utility.yul\":19243:19310   */\n      tag_308\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19236:19310   */\n      swap2\n      pop\n        /* \"#utility.yul\":19319:19412   */\n      tag_537\n        /* \"#utility.yul\":19408:19411   */\n      dup3\n        /* \"#utility.yul\":19319:19412   */\n      tag_332\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":19437:19439   */\n      0x40\n        /* \"#utility.yul\":19432:19435   */\n      dup3\n        /* \"#utility.yul\":19428:19440   */\n      add\n        /* \"#utility.yul\":19421:19440   */\n      swap1\n      pop\n        /* \"#utility.yul\":19080:19446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19452:19871   */\n    tag_219:\n        /* \"#utility.yul\":19618:19622   */\n      0x00\n        /* \"#utility.yul\":19656:19658   */\n      0x20\n        /* \"#utility.yul\":19645:19654   */\n      dup3\n        /* \"#utility.yul\":19641:19659   */\n      add\n        /* \"#utility.yul\":19633:19659   */\n      swap1\n      pop\n        /* \"#utility.yul\":19705:19714   */\n      dup2\n        /* \"#utility.yul\":19699:19703   */\n      dup2\n        /* \"#utility.yul\":19695:19715   */\n      sub\n        /* \"#utility.yul\":19691:19692   */\n      0x00\n        /* \"#utility.yul\":19680:19689   */\n      dup4\n        /* \"#utility.yul\":19676:19693   */\n      add\n        /* \"#utility.yul\":19669:19716   */\n      mstore\n        /* \"#utility.yul\":19733:19864   */\n      tag_539\n        /* \"#utility.yul\":19859:19863   */\n      dup2\n        /* \"#utility.yul\":19733:19864   */\n      tag_333\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":19725:19864   */\n      swap1\n      pop\n        /* \"#utility.yul\":19452:19871   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19877:20287   */\n    tag_224:\n        /* \"#utility.yul\":19917:19924   */\n      0x00\n        /* \"#utility.yul\":19940:19960   */\n      tag_541\n        /* \"#utility.yul\":19958:19959   */\n      dup3\n        /* \"#utility.yul\":19940:19960   */\n      tag_291\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":19935:19960   */\n      swap2\n      pop\n        /* \"#utility.yul\":19974:19994   */\n      tag_542\n        /* \"#utility.yul\":19992:19993   */\n      dup4\n        /* \"#utility.yul\":19974:19994   */\n      tag_291\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":19969:19994   */\n      swap3\n      pop\n        /* \"#utility.yul\":20029:20030   */\n      dup3\n        /* \"#utility.yul\":20026:20027   */\n      dup3\n        /* \"#utility.yul\":20022:20031   */\n      mul\n        /* \"#utility.yul\":20051:20081   */\n      tag_543\n        /* \"#utility.yul\":20069:20080   */\n      dup2\n        /* \"#utility.yul\":20051:20081   */\n      tag_291\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":20040:20081   */\n      swap2\n      pop\n        /* \"#utility.yul\":20230:20231   */\n      dup3\n        /* \"#utility.yul\":20221:20228   */\n      dup3\n        /* \"#utility.yul\":20217:20232   */\n      div\n        /* \"#utility.yul\":20214:20215   */\n      dup5\n        /* \"#utility.yul\":20211:20233   */\n      eq\n        /* \"#utility.yul\":20191:20192   */\n      dup4\n        /* \"#utility.yul\":20184:20193   */\n      iszero\n        /* \"#utility.yul\":20164:20247   */\n      or\n        /* \"#utility.yul\":20141:20280   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":20260:20278   */\n      tag_545\n      tag_313\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":20141:20280   */\n    tag_544:\n        /* \"#utility.yul\":19925:20287   */\n      pop\n        /* \"#utility.yul\":19877:20287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20293:20473   */\n    tag_228:\n        /* \"#utility.yul\":20341:20418   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20338:20339   */\n      0x00\n        /* \"#utility.yul\":20331:20419   */\n      mstore\n        /* \"#utility.yul\":20438:20442   */\n      0x41\n        /* \"#utility.yul\":20435:20436   */\n      0x04\n        /* \"#utility.yul\":20428:20443   */\n      mstore\n        /* \"#utility.yul\":20462:20466   */\n      0x24\n        /* \"#utility.yul\":20459:20460   */\n      0x00\n        /* \"#utility.yul\":20452:20467   */\n      revert\n        /* \"#utility.yul\":20479:20659   */\n    tag_232:\n        /* \"#utility.yul\":20527:20604   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20524:20525   */\n      0x00\n        /* \"#utility.yul\":20517:20605   */\n      mstore\n        /* \"#utility.yul\":20624:20628   */\n      0x32\n        /* \"#utility.yul\":20621:20622   */\n      0x04\n        /* \"#utility.yul\":20614:20629   */\n      mstore\n        /* \"#utility.yul\":20648:20652   */\n      0x24\n        /* \"#utility.yul\":20645:20646   */\n      0x00\n        /* \"#utility.yul\":20638:20653   */\n      revert\n        /* \"#utility.yul\":20665:20836   */\n    tag_245:\n        /* \"#utility.yul\":20704:20707   */\n      0x00\n        /* \"#utility.yul\":20727:20751   */\n      tag_549\n        /* \"#utility.yul\":20745:20750   */\n      dup3\n        /* \"#utility.yul\":20727:20751   */\n      tag_291\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":20718:20751   */\n      swap2\n      pop\n        /* \"#utility.yul\":20773:20777   */\n      0x00\n        /* \"#utility.yul\":20766:20771   */\n      dup3\n        /* \"#utility.yul\":20763:20778   */\n      sub\n        /* \"#utility.yul\":20760:20801   */\n      tag_550\n      jumpi\n        /* \"#utility.yul\":20781:20799   */\n      tag_551\n      tag_313\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":20760:20801   */\n    tag_550:\n        /* \"#utility.yul\":20828:20829   */\n      0x01\n        /* \"#utility.yul\":20821:20826   */\n      dup3\n        /* \"#utility.yul\":20817:20830   */\n      sub\n        /* \"#utility.yul\":20810:20830   */\n      swap1\n      pop\n        /* \"#utility.yul\":20665:20836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20842:21024   */\n    tag_334:\n        /* \"#utility.yul\":20982:21016   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":20978:20979   */\n      0x00\n        /* \"#utility.yul\":20970:20976   */\n      dup3\n        /* \"#utility.yul\":20966:20980   */\n      add\n        /* \"#utility.yul\":20959:21017   */\n      mstore\n        /* \"#utility.yul\":20842:21024   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21030:21396   */\n    tag_335:\n        /* \"#utility.yul\":21172:21175   */\n      0x00\n        /* \"#utility.yul\":21193:21260   */\n      tag_554\n        /* \"#utility.yul\":21257:21259   */\n      0x20\n        /* \"#utility.yul\":21252:21255   */\n      dup4\n        /* \"#utility.yul\":21193:21260   */\n      tag_308\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":21186:21260   */\n      swap2\n      pop\n        /* \"#utility.yul\":21269:21362   */\n      tag_555\n        /* \"#utility.yul\":21358:21361   */\n      dup3\n        /* \"#utility.yul\":21269:21362   */\n      tag_334\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":21387:21389   */\n      0x20\n        /* \"#utility.yul\":21382:21385   */\n      dup3\n        /* \"#utility.yul\":21378:21390   */\n      add\n        /* \"#utility.yul\":21371:21390   */\n      swap1\n      pop\n        /* \"#utility.yul\":21030:21396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21402:21821   */\n    tag_248:\n        /* \"#utility.yul\":21568:21572   */\n      0x00\n        /* \"#utility.yul\":21606:21608   */\n      0x20\n        /* \"#utility.yul\":21595:21604   */\n      dup3\n        /* \"#utility.yul\":21591:21609   */\n      add\n        /* \"#utility.yul\":21583:21609   */\n      swap1\n      pop\n        /* \"#utility.yul\":21655:21664   */\n      dup2\n        /* \"#utility.yul\":21649:21653   */\n      dup2\n        /* \"#utility.yul\":21645:21665   */\n      sub\n        /* \"#utility.yul\":21641:21642   */\n      0x00\n        /* \"#utility.yul\":21630:21639   */\n      dup4\n        /* \"#utility.yul\":21626:21643   */\n      add\n        /* \"#utility.yul\":21619:21666   */\n      mstore\n        /* \"#utility.yul\":21683:21814   */\n      tag_557\n        /* \"#utility.yul\":21809:21813   */\n      dup2\n        /* \"#utility.yul\":21683:21814   */\n      tag_335\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":21675:21814   */\n      swap1\n      pop\n        /* \"#utility.yul\":21402:21821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21827:22052   */\n    tag_336:\n        /* \"#utility.yul\":21967:22001   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":21963:21964   */\n      0x00\n        /* \"#utility.yul\":21955:21961   */\n      dup3\n        /* \"#utility.yul\":21951:21965   */\n      add\n        /* \"#utility.yul\":21944:22002   */\n      mstore\n        /* \"#utility.yul\":22036:22044   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22031:22033   */\n      0x20\n        /* \"#utility.yul\":22023:22029   */\n      dup3\n        /* \"#utility.yul\":22019:22034   */\n      add\n        /* \"#utility.yul\":22012:22045   */\n      mstore\n        /* \"#utility.yul\":21827:22052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22058:22424   */\n    tag_337:\n        /* \"#utility.yul\":22200:22203   */\n      0x00\n        /* \"#utility.yul\":22221:22288   */\n      tag_560\n        /* \"#utility.yul\":22285:22287   */\n      0x26\n        /* \"#utility.yul\":22280:22283   */\n      dup4\n        /* \"#utility.yul\":22221:22288   */\n      tag_308\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":22214:22288   */\n      swap2\n      pop\n        /* \"#utility.yul\":22297:22390   */\n      tag_561\n        /* \"#utility.yul\":22386:22389   */\n      dup3\n        /* \"#utility.yul\":22297:22390   */\n      tag_336\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":22415:22417   */\n      0x40\n        /* \"#utility.yul\":22410:22413   */\n      dup3\n        /* \"#utility.yul\":22406:22418   */\n      add\n        /* \"#utility.yul\":22399:22418   */\n      swap1\n      pop\n        /* \"#utility.yul\":22058:22424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22430:22849   */\n    tag_255:\n        /* \"#utility.yul\":22596:22600   */\n      0x00\n        /* \"#utility.yul\":22634:22636   */\n      0x20\n        /* \"#utility.yul\":22623:22632   */\n      dup3\n        /* \"#utility.yul\":22619:22637   */\n      add\n        /* \"#utility.yul\":22611:22637   */\n      swap1\n      pop\n        /* \"#utility.yul\":22683:22692   */\n      dup2\n        /* \"#utility.yul\":22677:22681   */\n      dup2\n        /* \"#utility.yul\":22673:22693   */\n      sub\n        /* \"#utility.yul\":22669:22670   */\n      0x00\n        /* \"#utility.yul\":22658:22667   */\n      dup4\n        /* \"#utility.yul\":22654:22671   */\n      add\n        /* \"#utility.yul\":22647:22694   */\n      mstore\n        /* \"#utility.yul\":22711:22842   */\n      tag_563\n        /* \"#utility.yul\":22837:22841   */\n      dup2\n        /* \"#utility.yul\":22711:22842   */\n      tag_337\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":22703:22842   */\n      swap1\n      pop\n        /* \"#utility.yul\":22430:22849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22855:22953   */\n    tag_338:\n        /* \"#utility.yul\":22906:22912   */\n      0x00\n        /* \"#utility.yul\":22940:22945   */\n      dup2\n        /* \"#utility.yul\":22934:22946   */\n      mload\n        /* \"#utility.yul\":22924:22946   */\n      swap1\n      pop\n        /* \"#utility.yul\":22855:22953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22959:23106   */\n    tag_339:\n        /* \"#utility.yul\":23060:23071   */\n      0x00\n        /* \"#utility.yul\":23097:23100   */\n      dup2\n        /* \"#utility.yul\":23082:23100   */\n      swap1\n      pop\n        /* \"#utility.yul\":22959:23106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23112:23498   */\n    tag_340:\n        /* \"#utility.yul\":23216:23219   */\n      0x00\n        /* \"#utility.yul\":23244:23282   */\n      tag_567\n        /* \"#utility.yul\":23276:23281   */\n      dup3\n        /* \"#utility.yul\":23244:23282   */\n      tag_338\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":23298:23386   */\n      tag_568\n        /* \"#utility.yul\":23379:23385   */\n      dup2\n        /* \"#utility.yul\":23374:23377   */\n      dup6\n        /* \"#utility.yul\":23298:23386   */\n      tag_339\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":23291:23386   */\n      swap4\n      pop\n        /* \"#utility.yul\":23395:23460   */\n      tag_569\n        /* \"#utility.yul\":23453:23459   */\n      dup2\n        /* \"#utility.yul\":23448:23451   */\n      dup6\n        /* \"#utility.yul\":23441:23445   */\n      0x20\n        /* \"#utility.yul\":23434:23439   */\n      dup7\n        /* \"#utility.yul\":23430:23446   */\n      add\n        /* \"#utility.yul\":23395:23460   */\n      tag_324\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":23485:23491   */\n      dup1\n        /* \"#utility.yul\":23480:23483   */\n      dup5\n        /* \"#utility.yul\":23476:23492   */\n      add\n        /* \"#utility.yul\":23469:23492   */\n      swap2\n      pop\n        /* \"#utility.yul\":23220:23498   */\n      pop\n        /* \"#utility.yul\":23112:23498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23504:23775   */\n    tag_257:\n        /* \"#utility.yul\":23634:23637   */\n      0x00\n        /* \"#utility.yul\":23656:23749   */\n      tag_571\n        /* \"#utility.yul\":23745:23748   */\n      dup3\n        /* \"#utility.yul\":23736:23742   */\n      dup5\n        /* \"#utility.yul\":23656:23749   */\n      tag_340\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":23649:23749   */\n      swap2\n      pop\n        /* \"#utility.yul\":23766:23769   */\n      dup2\n        /* \"#utility.yul\":23759:23769   */\n      swap1\n      pop\n        /* \"#utility.yul\":23504:23775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23781:23960   */\n    tag_341:\n        /* \"#utility.yul\":23921:23952   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":23917:23918   */\n      0x00\n        /* \"#utility.yul\":23909:23915   */\n      dup3\n        /* \"#utility.yul\":23905:23919   */\n      add\n        /* \"#utility.yul\":23898:23953   */\n      mstore\n        /* \"#utility.yul\":23781:23960   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23966:24332   */\n    tag_342:\n        /* \"#utility.yul\":24108:24111   */\n      0x00\n        /* \"#utility.yul\":24129:24196   */\n      tag_574\n        /* \"#utility.yul\":24193:24195   */\n      0x1d\n        /* \"#utility.yul\":24188:24191   */\n      dup4\n        /* \"#utility.yul\":24129:24196   */\n      tag_308\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":24122:24196   */\n      swap2\n      pop\n        /* \"#utility.yul\":24205:24298   */\n      tag_575\n        /* \"#utility.yul\":24294:24297   */\n      dup3\n        /* \"#utility.yul\":24205:24298   */\n      tag_341\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":24323:24325   */\n      0x20\n        /* \"#utility.yul\":24318:24321   */\n      dup3\n        /* \"#utility.yul\":24314:24326   */\n      add\n        /* \"#utility.yul\":24307:24326   */\n      swap1\n      pop\n        /* \"#utility.yul\":23966:24332   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24338:24757   */\n    tag_270:\n        /* \"#utility.yul\":24504:24508   */\n      0x00\n        /* \"#utility.yul\":24542:24544   */\n      0x20\n        /* \"#utility.yul\":24531:24540   */\n      dup3\n        /* \"#utility.yul\":24527:24545   */\n      add\n        /* \"#utility.yul\":24519:24545   */\n      swap1\n      pop\n        /* \"#utility.yul\":24591:24600   */\n      dup2\n        /* \"#utility.yul\":24585:24589   */\n      dup2\n        /* \"#utility.yul\":24581:24601   */\n      sub\n        /* \"#utility.yul\":24577:24578   */\n      0x00\n        /* \"#utility.yul\":24566:24575   */\n      dup4\n        /* \"#utility.yul\":24562:24579   */\n      add\n        /* \"#utility.yul\":24555:24602   */\n      mstore\n        /* \"#utility.yul\":24619:24750   */\n      tag_577\n        /* \"#utility.yul\":24745:24749   */\n      dup2\n        /* \"#utility.yul\":24619:24750   */\n      tag_342\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":24611:24750   */\n      swap1\n      pop\n        /* \"#utility.yul\":24338:24757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220403d56d9ca8040387c4f207a20cfacb7b01436d90a7ed81565714d3ce075097964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3023": {
									"entryPoint": null,
									"id": 3023,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_520": {
									"entryPoint": null,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 390,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1398": {
									"entryPoint": 164,
									"id": 1398,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_223": {
									"entryPoint": 368,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_500": {
									"entryPoint": 172,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 632,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506200003262000026620000a460201b60201c565b620000ac60201b60201c565b600180819055506200005d6000801b62000051620000a460201b60201c565b6200017060201b60201c565b6200009e7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0862000092620000a460201b60201c565b6200017060201b60201c565b620002e3565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200018282826200018660201b60201c565b5050565b6200019882826200027860201b60201c565b620002745760016002600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000219620000a460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006002600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6121e480620002f36000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063767a7b0511610097578063d547741f11610066578063d547741f1461029a578063ec87621c146102b6578063ece13732146102d4578063f2fde38b146102f057610100565b8063767a7b05146102125780638da5cb5b1461022e57806391d148541461024c578063a217fddf1461027c57610100565b806336568abe116100d357806336568abe146101b25780633b61f098146101ce5780635306f102146101ea578063715018a61461020857610100565b806301ffc9a714610105578063248a9ca314610135578063279ba28d146101655780632f2ff15d14610196575b600080fd5b61011f600480360381019061011a9190611526565b61030c565b60405161012c919061156e565b60405180910390f35b61014f600480360381019061014a91906115bf565b610386565b60405161015c91906115fb565b60405180910390f35b61017f600480360381019061017a919061164c565b6103a6565b60405161018d929190611707565b60405180910390f35b6101b060048036038101906101ab919061176e565b6103ea565b005b6101cc60048036038101906101c7919061176e565b61040b565b005b6101e860048036038101906101e391906117ec565b61048e565b005b6101f2610579565b6040516101ff9190611819565b60405180910390f35b61021061057f565b005b61022c60048036038101906102279190611834565b610593565b005b6102366106f7565b6040516102439190611883565b60405180910390f35b6102666004803603810190610261919061176e565b610720565b604051610273919061156e565b60405180910390f35b61028461078b565b60405161029191906115fb565b60405180910390f35b6102b460048036038101906102af919061176e565b610792565b005b6102be6107b3565b6040516102cb91906115fb565b60405180910390f35b6102ee60048036038101906102e99190611834565b6107d7565b005b61030a6004803603810190610305919061189e565b610935565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037f575061037e826109b8565b5b9050919050565b600060026000838152602001908152602001600020600101549050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6103f382610386565b6103fc81610a22565b6104068383610a36565b505050565b610413610b17565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610480576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104779061194e565b60405180910390fd5b61048a8282610b1f565b5050565b6104bf7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086104ba610b17565b610720565b6104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f5906119ba565b60405180910390fd5b61050781610c01565b8060046000600354815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600081548092919061057190611a09565b919050555050565b60035481565b610587610cc9565b6105916000610d47565b565b6105c47f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086105bf610b17565b610720565b610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa906119ba565b60405180910390fd5b60006004600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600460008581526020019081526020016000206001015490508281106106f15761068b33848473ffffffffffffffffffffffffffffffffffffffff16610e0b9092919063ffffffff16565b61069e8382610e9190919063ffffffff16565b6004600086815260200190815260200160002060010181905550837f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8846040516106e89190611819565b60405180910390a25b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b61079b82610386565b6107a481610a22565b6107ae8383610b1f565b505050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b6108087f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610803610b17565b610720565b610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e906119ba565b60405180910390fd5b60006004600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506108af3330848473ffffffffffffffffffffffffffffffffffffffff16610ea7909392919063ffffffff16565b6000600460008581526020019081526020016000206001015490506108dd8382610f3090919063ffffffff16565b6004600086815260200190815260200160002060010181905550837fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c55846040516109279190611819565b60405180910390a250505050565b61093d610cc9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a390611ac3565b60405180910390fd5b6109b581610d47565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a3381610a2e610b17565b610f46565b50565b610a408282610720565b610b135760016002600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ab8610b17565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610b298282610720565b15610bfd5760006002600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ba2610b17565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60005b600354811015610cc5578173ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca990611b2f565b60405180910390fd5b8080610cbd90611a09565b915050610c04565b5050565b610cd1610b17565b73ffffffffffffffffffffffffffffffffffffffff16610cef6106f7565b73ffffffffffffffffffffffffffffffffffffffff1614610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90611b9b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e8c8363a9059cbb60e01b8484604051602401610e2a929190611bbb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fcb565b505050565b60008183610e9f9190611be4565b905092915050565b610f2a846323b872dd60e01b858585604051602401610ec893929190611c18565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fcb565b50505050565b60008183610f3e9190611c4f565b905092915050565b610f508282610720565b610fc757610f5d81611093565b610f6b8360001c60206110c0565b604051602001610f7c929190611d8c565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbe9190611e10565b60405180910390fd5b5050565b600061102d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112fc9092919063ffffffff16565b905060008151148061104f57508080602001905181019061104e9190611e5e565b5b61108e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108590611efd565b60405180910390fd5b505050565b60606110b98273ffffffffffffffffffffffffffffffffffffffff16601460ff166110c0565b9050919050565b6060600060028360026110d39190611f1d565b6110dd9190611c4f565b67ffffffffffffffff8111156110f6576110f5611f5f565b5b6040519080825280601f01601f1916602001820160405280156111285781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106111605761115f611f8e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106111c4576111c3611f8e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026112049190611f1d565b61120e9190611c4f565b90505b60018111156112ae577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106112505761124f611f8e565b5b1a60f81b82828151811061126757611266611f8e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806112a790611fbd565b9050611211565b50600084146112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e990612032565b60405180910390fd5b8091505092915050565b606061130b8484600085611314565b90509392505050565b606082471015611359576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611350906120c4565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611382919061212b565b60006040518083038185875af1925050503d80600081146113bf576040519150601f19603f3d011682016040523d82523d6000602084013e6113c4565b606091505b50915091506113d5878383876113e1565b92505050949350505050565b6060831561144357600083510361143b576113fb85611456565b61143a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114319061218e565b60405180910390fd5b5b82905061144e565b61144d8383611479565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561148c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c09190611e10565b60405180910390fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611503816114ce565b811461150e57600080fd5b50565b600081359050611520816114fa565b92915050565b60006020828403121561153c5761153b6114c9565b5b600061154a84828501611511565b91505092915050565b60008115159050919050565b61156881611553565b82525050565b6000602082019050611583600083018461155f565b92915050565b6000819050919050565b61159c81611589565b81146115a757600080fd5b50565b6000813590506115b981611593565b92915050565b6000602082840312156115d5576115d46114c9565b5b60006115e3848285016115aa565b91505092915050565b6115f581611589565b82525050565b600060208201905061161060008301846115ec565b92915050565b6000819050919050565b61162981611616565b811461163457600080fd5b50565b60008135905061164681611620565b92915050565b600060208284031215611662576116616114c9565b5b600061167084828501611637565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116be6116b96116b484611679565b611699565b611679565b9050919050565b60006116d0826116a3565b9050919050565b60006116e2826116c5565b9050919050565b6116f2816116d7565b82525050565b61170181611616565b82525050565b600060408201905061171c60008301856116e9565b61172960208301846116f8565b9392505050565b600061173b82611679565b9050919050565b61174b81611730565b811461175657600080fd5b50565b60008135905061176881611742565b92915050565b60008060408385031215611785576117846114c9565b5b6000611793858286016115aa565b92505060206117a485828601611759565b9150509250929050565b60006117b982611730565b9050919050565b6117c9816117ae565b81146117d457600080fd5b50565b6000813590506117e6816117c0565b92915050565b600060208284031215611802576118016114c9565b5b6000611810848285016117d7565b91505092915050565b600060208201905061182e60008301846116f8565b92915050565b6000806040838503121561184b5761184a6114c9565b5b600061185985828601611637565b925050602061186a85828601611637565b9150509250929050565b61187d81611730565b82525050565b60006020820190506118986000830184611874565b92915050565b6000602082840312156118b4576118b36114c9565b5b60006118c284828501611759565b91505092915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611938602f836118cb565b9150611943826118dc565b604082019050919050565b600060208201905081810360008301526119678161192b565b9050919050565b7f4e6f7420616c6c6f776564000000000000000000000000000000000000000000600082015250565b60006119a4600b836118cb565b91506119af8261196e565b602082019050919050565b600060208201905081810360008301526119d381611997565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a1482611616565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a4657611a456119da565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611aad6026836118cb565b9150611ab882611a51565b604082019050919050565b60006020820190508181036000830152611adc81611aa0565b9050919050565b7f436f6c6c61746572616c204164647265737320416c7265616479204164646564600082015250565b6000611b196020836118cb565b9150611b2482611ae3565b602082019050919050565b60006020820190508181036000830152611b4881611b0c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b856020836118cb565b9150611b9082611b4f565b602082019050919050565b60006020820190508181036000830152611bb481611b78565b9050919050565b6000604082019050611bd06000830185611874565b611bdd60208301846116f8565b9392505050565b6000611bef82611616565b9150611bfa83611616565b9250828203905081811115611c1257611c116119da565b5b92915050565b6000606082019050611c2d6000830186611874565b611c3a6020830185611874565b611c4760408301846116f8565b949350505050565b6000611c5a82611616565b9150611c6583611616565b9250828201905080821115611c7d57611c7c6119da565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611cc4601783611c83565b9150611ccf82611c8e565b601782019050919050565b600081519050919050565b60005b83811015611d03578082015181840152602081019050611ce8565b60008484015250505050565b6000611d1a82611cda565b611d248185611c83565b9350611d34818560208601611ce5565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611d76601183611c83565b9150611d8182611d40565b601182019050919050565b6000611d9782611cb7565b9150611da38285611d0f565b9150611dae82611d69565b9150611dba8284611d0f565b91508190509392505050565b6000601f19601f8301169050919050565b6000611de282611cda565b611dec81856118cb565b9350611dfc818560208601611ce5565b611e0581611dc6565b840191505092915050565b60006020820190508181036000830152611e2a8184611dd7565b905092915050565b611e3b81611553565b8114611e4657600080fd5b50565b600081519050611e5881611e32565b92915050565b600060208284031215611e7457611e736114c9565b5b6000611e8284828501611e49565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611ee7602a836118cb565b9150611ef282611e8b565b604082019050919050565b60006020820190508181036000830152611f1681611eda565b9050919050565b6000611f2882611616565b9150611f3383611616565b9250828202611f4181611616565b91508282048414831517611f5857611f576119da565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611fc882611616565b915060008203611fdb57611fda6119da565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061201c6020836118cb565b915061202782611fe6565b602082019050919050565b6000602082019050818103600083015261204b8161200f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006120ae6026836118cb565b91506120b982612052565b604082019050919050565b600060208201905081810360008301526120dd816120a1565b9050919050565b600081519050919050565b600081905092915050565b6000612105826120e4565b61210f81856120ef565b935061211f818560208601611ce5565b80840191505092915050565b600061213782846120fa565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612178601d836118cb565b915061218382612142565b602082019050919050565b600060208201905081810360008301526121a78161216b565b905091905056fea2646970667358221220403d56d9ca8040387c4f207a20cfacb7b01436d90a7ed81565714d3ce075097964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x32 PUSH3 0x26 PUSH3 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH3 0x5D PUSH1 0x0 DUP1 SHL PUSH3 0x51 PUSH3 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x170 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9E PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH3 0x92 PUSH3 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x170 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2E3 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x182 DUP3 DUP3 PUSH3 0x186 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x198 DUP3 DUP3 PUSH3 0x278 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x274 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x219 PUSH3 0xA4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21E4 DUP1 PUSH3 0x2F3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x767A7B05 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xECE13732 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x767A7B05 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x27C JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x3B61F098 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x5306F102 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x208 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x279BA28D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP3 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x57F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x37F JUMPI POP PUSH2 0x37E DUP3 PUSH2 0x9B8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x3F3 DUP3 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x3FC DUP2 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x406 DUP4 DUP4 PUSH2 0xA36 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x413 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x477 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48A DUP3 DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4BF PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x4BA PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x507 DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x571 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x587 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x591 PUSH1 0x0 PUSH2 0xD47 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5C4 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x5BF PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 DUP2 LT PUSH2 0x6F1 JUMPI PUSH2 0x68B CALLER DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE0B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69E DUP4 DUP3 PUSH2 0xE91 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0x56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x79B DUP3 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x7A4 DUP2 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x7AE DUP4 DUP4 PUSH2 0xB1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH2 0x808 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x803 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x8AF CALLER ADDRESS DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEA7 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x8DD DUP4 DUP3 PUSH2 0xF30 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0xA3AF609BF46297028CE551832669030F9EFFEF2B02606D02CBBCC40FE6B47C55 DUP5 PUSH1 0x40 MLOAD PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x93D PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A3 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B5 DUP2 PUSH2 0xD47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA33 DUP2 PUSH2 0xA2E PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xF46 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA40 DUP3 DUP3 PUSH2 0x720 JUMP JUMPDEST PUSH2 0xB13 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAB8 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB29 DUP3 DUP3 PUSH2 0x720 JUMP JUMPDEST ISZERO PUSH2 0xBFD JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBA2 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xCC5 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xCBD SWAP1 PUSH2 0x1A09 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC04 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCD1 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCEF PUSH2 0x6F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE8C DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE2A SWAP3 SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFCB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF2A DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEC8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFCB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF50 DUP3 DUP3 PUSH2 0x720 JUMP JUMPDEST PUSH2 0xFC7 JUMPI PUSH2 0xF5D DUP2 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0xF6B DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7C SWAP3 SWAP2 SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12FC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x104F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x104E SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST JUMPDEST PUSH2 0x108E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1085 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10B9 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x10C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x10D3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10F5 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1128 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1160 JUMPI PUSH2 0x115F PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11C4 JUMPI PUSH2 0x11C3 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1204 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1250 JUMPI PUSH2 0x124F PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1267 JUMPI PUSH2 0x1266 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x12A7 SWAP1 PUSH2 0x1FBD JUMP JUMPDEST SWAP1 POP PUSH2 0x1211 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x12F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E9 SWAP1 PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x130B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1314 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1350 SWAP1 PUSH2 0x20C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1382 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13D5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x13E1 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1443 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x143B JUMPI PUSH2 0x13FB DUP6 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x143A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1431 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x144E JUMP JUMPDEST PUSH2 0x144D DUP4 DUP4 PUSH2 0x1479 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x148C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C0 SWAP2 SWAP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1503 DUP2 PUSH2 0x14CE JUMP JUMPDEST DUP2 EQ PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1520 DUP2 PUSH2 0x14FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153C JUMPI PUSH2 0x153B PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154A DUP5 DUP3 DUP6 ADD PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1568 DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1583 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x155F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x159C DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP2 EQ PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B9 DUP2 PUSH2 0x1593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15D4 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E3 DUP5 DUP3 DUP6 ADD PUSH2 0x15AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15F5 DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1610 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1629 DUP2 PUSH2 0x1616 JUMP JUMPDEST DUP2 EQ PUSH2 0x1634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1646 DUP2 PUSH2 0x1620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1662 JUMPI PUSH2 0x1661 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1670 DUP5 DUP3 DUP6 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BE PUSH2 0x16B9 PUSH2 0x16B4 DUP5 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D0 DUP3 PUSH2 0x16A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x16C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1701 DUP2 PUSH2 0x1616 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x171C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x1729 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173B DUP3 PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x1730 JUMP JUMPDEST DUP2 EQ PUSH2 0x1756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1768 DUP2 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH2 0x1784 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1793 DUP6 DUP3 DUP7 ADD PUSH2 0x15AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17A4 DUP6 DUP3 DUP7 ADD PUSH2 0x1759 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B9 DUP3 PUSH2 0x1730 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x17AE JUMP JUMPDEST DUP2 EQ PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E6 DUP2 PUSH2 0x17C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1810 DUP5 DUP3 DUP6 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x182E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184A PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1859 DUP6 DUP3 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x186A DUP6 DUP3 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x187D DUP2 PUSH2 0x1730 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1898 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C2 DUP5 DUP3 DUP6 ADD PUSH2 0x1759 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1938 PUSH1 0x2F DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1943 DUP3 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1967 DUP2 PUSH2 0x192B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A4 PUSH1 0xB DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x19AF DUP3 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19D3 DUP2 PUSH2 0x1997 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A14 DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A46 JUMPI PUSH2 0x1A45 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x26 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ADC DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6C6C61746572616C204164647265737320416C7265616479204164646564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B19 PUSH1 0x20 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B24 DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B48 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B85 PUSH1 0x20 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B90 DUP3 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB4 DUP2 PUSH2 0x1B78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BD0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1BDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEF DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFA DUP4 PUSH2 0x1616 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C12 JUMPI PUSH2 0x1C11 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C2D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1C3A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1C47 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5A DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C65 DUP4 PUSH2 0x1616 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x19DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC4 PUSH1 0x17 DUP4 PUSH2 0x1C83 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCF DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D03 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CE8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1A DUP3 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1D24 DUP2 DUP6 PUSH2 0x1C83 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D76 PUSH1 0x11 DUP4 PUSH2 0x1C83 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D81 DUP3 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D97 DUP3 PUSH2 0x1CB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA3 DUP3 DUP6 PUSH2 0x1D0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAE DUP3 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBA DUP3 DUP5 PUSH2 0x1D0F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE2 DUP3 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1DEC DUP2 DUP6 PUSH2 0x18CB JUMP JUMPDEST SWAP4 POP PUSH2 0x1DFC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E2A DUP2 DUP5 PUSH2 0x1DD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E3B DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E58 DUP2 PUSH2 0x1E32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E74 JUMPI PUSH2 0x1E73 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E82 DUP5 DUP3 DUP6 ADD PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 PUSH1 0x2A DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF2 DUP3 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F16 DUP2 PUSH2 0x1EDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F28 DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F33 DUP4 PUSH2 0x1616 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F41 DUP2 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FC8 DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1FDB JUMPI PUSH2 0x1FDA PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201C PUSH1 0x20 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2027 DUP3 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x204B DUP2 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AE PUSH1 0x26 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x20B9 DUP3 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20DD DUP2 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2105 DUP3 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x210F DUP2 DUP6 PUSH2 0x20EF JUMP JUMPDEST SWAP4 POP PUSH2 0x211F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 DUP3 DUP5 PUSH2 0x20FA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2178 PUSH1 0x1D DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2183 DUP3 PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21A7 DUP2 PUSH2 0x216B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH RETURNDATASIZE JUMP 0xD9 0xCA DUP1 BLOCKHASH CODESIZE PUSH29 0x4F207A20CFACB7B01436D90A7ED81565714D3CE075097964736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "427:2061:15:-:0;;;929:123;;;;;;;;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:3;1821:7;:22;;;;953:44:15;2198:4:0;964:18:15;;984:12;:10;;;:12;;:::i;:::-;953:10;;;:44;;:::i;:::-;1007:38;897:25;1032:12;:10;;;:12;;:::i;:::-;1007:10;;;:38;;:::i;:::-;427:2061;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2426:187:2:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;6937:110:0:-;7015:25;7026:4;7032:7;7015:10;;;:25;;:::i;:::-;6937:110;;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;;;:22;;:::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;;;:12;;:::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;3021:145::-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;427:2061:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 1931,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MANAGER_ROLE_3007": {
									"entryPoint": 1971,
									"id": 3007,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1007": {
									"entryPoint": 4043,
									"id": 1007,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_443": {
									"entryPoint": 3273,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 3910,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 2594,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 2614,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1398": {
									"entryPoint": 2839,
									"id": 1398,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1385": {
									"entryPoint": 5241,
									"id": 1385,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_314": {
									"entryPoint": 2847,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_rsvVault_2990": {
									"entryPoint": 934,
									"id": 2990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_500": {
									"entryPoint": 3399,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addReserveVault_3081": {
									"entryPoint": 1166,
									"id": 3081,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2715": {
									"entryPoint": 3888,
									"id": 2715,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkReserveContract_3051": {
									"entryPoint": 3073,
									"id": 3051,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentReserveId_2979": {
									"entryPoint": 1401,
									"id": 2979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositCollateral_3143": {
									"entryPoint": 2007,
									"id": 3143,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_1210": {
									"entryPoint": 4884,
									"id": 1210,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1146": {
									"entryPoint": 4860,
									"id": 1146,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getRoleAdmin_146": {
									"entryPoint": 902,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_166": {
									"entryPoint": 1002,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 1824,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1074": {
									"entryPoint": 5206,
									"id": 1074,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_429": {
									"entryPoint": 1783,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_457": {
									"entryPoint": 1407,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_209": {
									"entryPoint": 1035,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 1938,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_740": {
									"entryPoint": 3751,
									"id": 740,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_713": {
									"entryPoint": 3595,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sub_2730": {
									"entryPoint": 3729,
									"id": 2730,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1660": {
									"entryPoint": 2488,
									"id": 1660,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_60": {
									"entryPoint": 780,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1591": {
									"entryPoint": 4288,
									"id": 1591,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1611": {
									"entryPoint": 4243,
									"id": 1611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_480": {
									"entryPoint": 2357,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1341": {
									"entryPoint": 5089,
									"id": 1341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawCollateral_3206": {
									"entryPoint": 1427,
									"id": 3206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$644": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$644": {
									"entryPoint": 6124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$644_to_t_address_fromStack": {
									"entryPoint": 5865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7564,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7192,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$644_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$644": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$644_to_t_address": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 8125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 8166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 8274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 7310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 7488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$644": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24760:16",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:16",
														"type": ""
													}
												],
												"src": "334:149:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:16"
															},
															"nodeType": "YulIf",
															"src": "541:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:16",
														"type": ""
													}
												],
												"src": "489:120:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:16",
														"type": ""
													}
												],
												"src": "615:137:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:16"
															},
															"nodeType": "YulIf",
															"src": "833:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:16",
														"type": ""
													}
												],
												"src": "758:327:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:16",
														"type": ""
													}
												],
												"src": "1091:90:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:16",
														"type": ""
													}
												],
												"src": "1187:109:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:16",
														"type": ""
													}
												],
												"src": "1302:210:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:16",
														"type": ""
													}
												],
												"src": "1518:77:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:16"
															},
															"nodeType": "YulIf",
															"src": "1654:63:16"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:16",
														"type": ""
													}
												],
												"src": "1601:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:16"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:16",
														"type": ""
													}
												],
												"src": "1729:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:32:16"
															},
															"nodeType": "YulIf",
															"src": "1950:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "2079:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1921:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:16",
														"type": ""
													}
												],
												"src": "1874:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:16"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2262:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2269:3:16",
														"type": ""
													}
												],
												"src": "2209:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2431:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2441:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2449:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2403:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2415:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2426:4:16",
														"type": ""
													}
												],
												"src": "2333:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:32:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2616:16:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2627:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2588:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2598:7:16",
														"type": ""
													}
												],
												"src": "2561:77:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2744:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2753:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2756:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2746:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2746:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2710:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2735:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2717:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2717:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2707:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:43:16"
															},
															"nodeType": "YulIf",
															"src": "2697:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2680:5:16",
														"type": ""
													}
												],
												"src": "2644:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2834:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2899:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2872:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2872:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2802:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2810:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2818:5:16",
														"type": ""
													}
												],
												"src": "2772:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2983:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3029:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3031:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3031:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3004:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3000:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3025:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:32:16"
															},
															"nodeType": "YulIf",
															"src": "2993:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "3122:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3137:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3151:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3141:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3166:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3201:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3212:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3197:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3197:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3221:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3176:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3176:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3166:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2953:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2964:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2976:6:16",
														"type": ""
													}
												],
												"src": "2917:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3297:81:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3307:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3322:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3329:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3318:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3307:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3279:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3289:7:16",
														"type": ""
													}
												],
												"src": "3252:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:28:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3426:12:16",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3433:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3402:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3412:3:16",
														"type": ""
													}
												],
												"src": "3384:60:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3510:82:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3520:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3578:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3560:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3560:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3551:8:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3551:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3533:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3520:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3490:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3500:9:16",
														"type": ""
													}
												],
												"src": "3450:142:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3658:66:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3668:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3712:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3681:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3668:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3638:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3648:9:16",
														"type": ""
													}
												],
												"src": "3598:126:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3804:66:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3814:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3858:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3827:30:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3827:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3814:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$644_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3784:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3794:9:16",
														"type": ""
													}
												],
												"src": "3730:140:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3955:80:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3972:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4022:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$644_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3977:44:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3977:51:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:64:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:64:16"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$644_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3943:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3950:3:16",
														"type": ""
													}
												],
												"src": "3876:159:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4106:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4123:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4146:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4128:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4128:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4116:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4116:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4116:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4094:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4101:3:16",
														"type": ""
													}
												],
												"src": "4041:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4305:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4315:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4327:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4338:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4315:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4422:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4433:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4418:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4418:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$644_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4351:57:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4351:85:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4351:85:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4490:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4503:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4514:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4499:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4499:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4446:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4446:72:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4446:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$644_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4269:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4281:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4289:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4300:4:16",
														"type": ""
													}
												],
												"src": "4165:360:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4586:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4615:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4597:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4597:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4586:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4558:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4568:7:16",
														"type": ""
													}
												],
												"src": "4531:96:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4676:79:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4733:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4742:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4745:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4735:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4735:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4735:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4699:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4724:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4706:17:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4706:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4696:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4696:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4689:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4689:43:16"
															},
															"nodeType": "YulIf",
															"src": "4686:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4669:5:16",
														"type": ""
													}
												],
												"src": "4633:122:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4813:87:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4823:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4845:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4832:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4823:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4888:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4861:26:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4861:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4791:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4799:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4807:5:16",
														"type": ""
													}
												],
												"src": "4761:139:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4989:391:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5035:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5037:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5037:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5037:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5010:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5019:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5006:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5006:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5031:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5002:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:32:16"
															},
															"nodeType": "YulIf",
															"src": "4999:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "5128:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5143:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5157:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5147:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5172:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5207:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5218:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5203:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5203:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5227:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5182:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5182:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5172:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5255:118:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5270:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5284:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5274:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5300:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5335:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5346:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5331:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5331:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5355:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5310:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5310:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5300:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4951:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4962:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4974:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4982:6:16",
														"type": ""
													}
												],
												"src": "4906:474:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5445:51:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5455:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5484:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5466:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5466:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5455:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$644",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5427:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5437:7:16",
														"type": ""
													}
												],
												"src": "5386:110:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5559:93:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5630:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5639:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5642:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5632:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5632:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5632:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5582:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5621:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$644",
																					"nodeType": "YulIdentifier",
																					"src": "5589:31:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5589:38:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5579:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:49:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5572:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:57:16"
															},
															"nodeType": "YulIf",
															"src": "5569:77:16"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$644",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5552:5:16",
														"type": ""
													}
												],
												"src": "5502:150:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5724:101:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5734:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5756:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5743:12:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5734:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5813:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$644",
																	"nodeType": "YulIdentifier",
																	"src": "5772:40:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5772:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5772:47:16"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$644",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5702:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5710:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5718:5:16",
														"type": ""
													}
												],
												"src": "5658:167:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5911:277:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5957:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5959:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5959:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5959:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5932:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5941:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5928:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5924:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:32:16"
															},
															"nodeType": "YulIf",
															"src": "5921:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "6050:131:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6065:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6069:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6094:77:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6143:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6154:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6139:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6139:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6163:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$644",
																			"nodeType": "YulIdentifier",
																			"src": "6104:34:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:67:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6094:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$644",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5881:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5892:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5904:6:16",
														"type": ""
													}
												],
												"src": "5831:357:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6292:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6302:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6314:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6310:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6310:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6302:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6382:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6395:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6406:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6391:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6391:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6338:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6338:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6264:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6276:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6287:4:16",
														"type": ""
													}
												],
												"src": "6194:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6505:391:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6551:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6553:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6553:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6553:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6526:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6535:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6522:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6522:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6547:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6518:32:16"
															},
															"nodeType": "YulIf",
															"src": "6515:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "6644:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6659:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6673:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6663:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6688:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6723:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6734:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6719:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6719:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6743:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6698:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6698:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6688:6:16"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6771:118:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6786:16:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6800:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6790:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6816:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6851:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6862:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6847:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6847:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6871:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6826:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6826:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6816:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6467:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6478:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6490:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6498:6:16",
														"type": ""
													}
												],
												"src": "6422:474:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6967:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6984:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7007:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6989:17:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6989:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6977:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "6977:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6977:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6955:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6962:3:16",
														"type": ""
													}
												],
												"src": "6902:118:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7124:124:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7134:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7146:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7157:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7142:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7142:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7134:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7214:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7227:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7238:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7223:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7223:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7170:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7170:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7170:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7096:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7108:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7119:4:16",
														"type": ""
													}
												],
												"src": "7026:222:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7320:263:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7366:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7368:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7368:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7368:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7341:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7350:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7337:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7337:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7362:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7333:32:16"
															},
															"nodeType": "YulIf",
															"src": "7330:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "7459:117:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7474:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7488:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7478:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7503:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7538:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7549:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7534:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7534:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7558:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7513:20:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7513:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7503:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7290:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7301:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7313:6:16",
														"type": ""
													}
												],
												"src": "7254:329:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7685:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7702:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7707:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7695:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7695:19:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7695:19:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7723:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7742:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7747:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7738:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7738:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7723:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7657:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7662:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7673:11:16",
														"type": ""
													}
												],
												"src": "7589:169:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7870:128:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7892:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7900:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7888:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7888:14:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7904:34:16",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7881:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:58:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7881:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7960:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7968:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7956:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7956:15:16"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7973:17:16",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7949:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "7949:42:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7949:42:16"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7862:6:16",
														"type": ""
													}
												],
												"src": "7764:234:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8150:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8160:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:2:16",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8167:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8160:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8332:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "8243:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8243:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8243:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8345:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8356:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8361:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8352:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8352:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8345:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8138:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8146:3:16",
														"type": ""
													}
												],
												"src": "8004:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8547:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8557:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8569:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8580:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8565:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8565:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8557:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8604:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8615:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8600:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8623:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8629:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8619:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8619:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8593:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8593:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8593:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8649:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8783:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8657:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8649:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8527:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8542:4:16",
														"type": ""
													}
												],
												"src": "8376:419:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:55:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8929:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8937:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8925:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8925:14:16"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8941:13:16",
																		"type": "",
																		"value": "Not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8918:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "8918:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8918:37:16"
														}
													]
												},
												"name": "store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8899:6:16",
														"type": ""
													}
												],
												"src": "8801:161:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9114:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9124:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9190:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9195:2:16",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9131:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9131:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9124:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9296:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																	"nodeType": "YulIdentifier",
																	"src": "9207:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9207:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9207:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9309:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9320:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9325:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9316:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9316:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9309:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9102:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9110:3:16",
														"type": ""
													}
												],
												"src": "8968:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9511:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9521:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9533:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9544:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9521:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9587:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9593:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9583:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9583:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9613:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9747:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9621:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9613:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9491:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9506:4:16",
														"type": ""
													}
												],
												"src": "9340:419:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9793:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9810:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9813:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9803:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9803:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9907:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9910:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9900:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9900:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9900:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9931:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9934:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9924:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "9924:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9924:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9765:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9994:190:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10004:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10031:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10013:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10013:24:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10004:5:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10127:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10129:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10129:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10129:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10052:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10059:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10049:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:77:16"
															},
															"nodeType": "YulIf",
															"src": "10046:103:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10158:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10169:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10176:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10165:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10165:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10158:3:16"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9980:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9990:3:16",
														"type": ""
													}
												],
												"src": "9951:233:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10296:119:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10318:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10326:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10314:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10314:14:16"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10330:34:16",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10307:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10307:58:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10307:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10386:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10394:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10382:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10382:15:16"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10399:8:16",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10375:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10375:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10375:33:16"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10288:6:16",
														"type": ""
													}
												],
												"src": "10190:225:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10567:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10577:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10643:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10648:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10584:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10584:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10577:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10749:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "10660:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10660:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10762:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10773:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10778:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10769:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10762:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10555:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10563:3:16",
														"type": ""
													}
												],
												"src": "10421:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10964:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10974:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10986:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10997:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10982:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "10982:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10974:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11021:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11032:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11017:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11017:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11040:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11046:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11036:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11036:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11010:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11010:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11010:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11066:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11200:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11074:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11074:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11066:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10944:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10959:4:16",
														"type": ""
													}
												],
												"src": "10793:419:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11324:76:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11346:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11354:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11342:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11342:14:16"
																	},
																	{
																		"hexValue": "436f6c6c61746572616c204164647265737320416c7265616479204164646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11358:34:16",
																		"type": "",
																		"value": "Collateral Address Already Added"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11335:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11335:58:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11335:58:16"
														}
													]
												},
												"name": "store_literal_in_memory_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11316:6:16",
														"type": ""
													}
												],
												"src": "11218:182:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11552:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11562:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11628:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11633:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11569:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11569:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11734:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0",
																	"nodeType": "YulIdentifier",
																	"src": "11645:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11645:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11645:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11747:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11758:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11754:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11747:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11540:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11548:3:16",
														"type": ""
													}
												],
												"src": "11406:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11949:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11959:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11971:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11982:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11967:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11967:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11959:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12006:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12017:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12002:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12025:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12031:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12021:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12021:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11995:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11995:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12051:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12185:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12059:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12059:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12051:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11929:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11944:4:16",
														"type": ""
													}
												],
												"src": "11778:419:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12309:76:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12331:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12339:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12327:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12327:14:16"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12343:34:16",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12320:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12320:58:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12320:58:16"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12301:6:16",
														"type": ""
													}
												],
												"src": "12203:182:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12537:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12547:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12613:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12618:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12554:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12554:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12547:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12719:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "12630:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12630:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12630:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12732:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12743:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12748:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12739:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12739:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12732:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12525:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12533:3:16",
														"type": ""
													}
												],
												"src": "12391:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12934:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12944:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12956:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12967:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12952:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12952:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12944:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12991:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13002:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12987:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12987:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13010:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13016:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13006:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13006:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12980:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "12980:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12980:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13036:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13170:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13044:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13044:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13036:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12914:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12929:4:16",
														"type": ""
													}
												],
												"src": "12763:419:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13314:206:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13324:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13336:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13347:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13332:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13324:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13404:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13417:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13428:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13413:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13413:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13360:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13360:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13360:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13485:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13498:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13509:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13494:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13494:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13441:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13441:72:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13441:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13278:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13290:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13298:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13309:4:16",
														"type": ""
													}
												],
												"src": "13188:332:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13571:149:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13581:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13604:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13586:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13586:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13581:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13615:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13638:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13620:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13620:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13615:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13649:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13661:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13664:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13657:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13657:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13649:4:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13691:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13693:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13693:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13693:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13682:4:16"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13688:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13679:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13679:11:16"
															},
															"nodeType": "YulIf",
															"src": "13676:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13557:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13560:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13566:4:16",
														"type": ""
													}
												],
												"src": "13526:194:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13880:288:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13890:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13902:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13913:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13898:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13898:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13890:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13970:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13983:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13994:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13979:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13979:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13926:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "13926:71:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13926:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14051:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14064:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14075:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14060:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14060:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14007:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14007:72:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14007:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14133:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14146:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14157:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14142:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14142:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14089:43:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14089:72:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14089:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13836:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13848:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13856:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13864:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13875:4:16",
														"type": ""
													}
												],
												"src": "13726:442:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14218:147:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14228:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14251:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14233:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14233:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14228:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14262:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14285:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14267:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14267:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14262:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14296:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14307:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14310:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14303:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14303:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14296:3:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14336:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14338:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14338:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14338:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14328:1:16"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14331:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14325:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14325:10:16"
															},
															"nodeType": "YulIf",
															"src": "14322:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14205:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14208:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14214:3:16",
														"type": ""
													}
												],
												"src": "14174:191:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14485:34:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14495:18:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14510:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14495:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14457:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14462:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14473:11:16",
														"type": ""
													}
												],
												"src": "14371:148:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14631:67:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14653:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14661:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14649:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14649:14:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14665:25:16",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14642:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14642:49:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14642:49:16"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14623:6:16",
														"type": ""
													}
												],
												"src": "14525:173:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14868:238:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14878:92:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14962:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14967:2:16",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14885:76:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14885:85:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14878:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15068:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "14979:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "14979:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14979:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15081:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15092:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15097:2:16",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15088:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15088:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15081:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14856:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14864:3:16",
														"type": ""
													}
												],
												"src": "14704:402:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15171:40:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15182:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15198:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15192:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15192:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15182:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15154:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15164:6:16",
														"type": ""
													}
												],
												"src": "15112:99:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15279:184:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15289:10:16",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15298:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15293:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15358:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15383:3:16"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15388:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15379:3:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15379:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15402:3:16"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15407:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15398:3:16"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15398:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15392:5:16"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15392:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15372:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15372:39:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15372:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15319:1:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15322:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15316:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15316:13:16"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15330:19:16",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15332:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15341:1:16"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15344:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15337:3:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15337:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15332:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15312:3:16",
																"statements": []
															},
															"src": "15308:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "15441:3:16"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15446:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15437:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15437:16:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15455:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15430:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15430:27:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15430:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15261:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15266:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15271:6:16",
														"type": ""
													}
												],
												"src": "15217:246:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15579:280:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15589:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15636:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15603:32:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15603:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15593:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15651:96:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15735:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15740:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15658:76:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15658:89:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15795:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15802:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15791:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15791:16:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15809:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15814:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15756:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15756:65:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15756:65:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15830:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15841:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15846:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15837:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15837:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15830:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15560:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15567:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15575:3:16",
														"type": ""
													}
												],
												"src": "15469:390:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15971:61:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15993:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16001:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15989:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15989:14:16"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16005:19:16",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15982:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "15982:43:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15982:43:16"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15963:6:16",
														"type": ""
													}
												],
												"src": "15865:167:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16202:238:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16212:92:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16296:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16301:2:16",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16219:76:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16219:85:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16212:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16402:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "16313:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16313:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16313:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16415:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16426:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16431:2:16",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16422:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16422:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16415:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16190:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16198:3:16",
														"type": ""
													}
												],
												"src": "16038:402:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16832:581:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16843:155:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16994:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16850:142:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "16850:148:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16843:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17008:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17097:6:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17106:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17015:81:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17015:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17008:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17120:155:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17271:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17127:142:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17127:148:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17120:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17285:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17374:6:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17383:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17292:81:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17292:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17285:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17397:10:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17404:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17397:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16803:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16809:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16817:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16828:3:16",
														"type": ""
													}
												],
												"src": "16446:967:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17467:54:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17477:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17495:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17502:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17491:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17491:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17511:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17507:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17507:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17487:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17487:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17477:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17450:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17460:6:16",
														"type": ""
													}
												],
												"src": "17419:102:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17619:285:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17629:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17676:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "17643:32:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17643:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17633:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17691:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17757:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17762:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17698:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17698:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17691:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17817:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17824:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17813:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17813:16:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17831:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17836:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "17778:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17778:65:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17778:65:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17852:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17863:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17890:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "17868:21:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17868:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17859:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "17859:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17852:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17600:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17607:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17615:3:16",
														"type": ""
													}
												],
												"src": "17527:377:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18028:195:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18038:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18050:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18061:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18046:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18046:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18038:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18085:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18096:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18081:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18081:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18104:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18110:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18100:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18100:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18074:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18074:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18074:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18130:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18202:6:16"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18211:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18138:63:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18138:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18130:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18000:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18012:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18023:4:16",
														"type": ""
													}
												],
												"src": "17910:313:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18269:76:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18323:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18332:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18335:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18325:6:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18325:12:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18325:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18292:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18314:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18299:14:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18299:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18289:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18289:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18282:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18282:40:16"
															},
															"nodeType": "YulIf",
															"src": "18279:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18262:5:16",
														"type": ""
													}
												],
												"src": "18229:116:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18411:77:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18421:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18436:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18430:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18430:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18421:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18476:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "18452:23:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18452:30:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18452:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18389:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18397:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18405:5:16",
														"type": ""
													}
												],
												"src": "18351:137:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18568:271:16",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18614:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18616:77:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18616:79:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18616:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18589:7:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18598:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18585:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18585:23:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18610:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18581:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18581:32:16"
															},
															"nodeType": "YulIf",
															"src": "18578:119:16"
														},
														{
															"nodeType": "YulBlock",
															"src": "18707:125:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18722:15:16",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18736:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18726:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18751:71:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18794:9:16"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18805:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18790:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18790:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18814:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "18761:28:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18761:61:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18751:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18538:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18549:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18561:6:16",
														"type": ""
													}
												],
												"src": "18494:345:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18951:123:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18973:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18981:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18969:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18969:14:16"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18985:34:16",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18962:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "18962:58:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18962:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19041:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19049:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19037:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19037:15:16"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19054:12:16",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19030:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19030:37:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19030:37:16"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18943:6:16",
														"type": ""
													}
												],
												"src": "18845:229:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19226:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19236:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19302:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19307:2:16",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19243:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19243:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19236:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19408:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "19319:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19319:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19319:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19421:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19432:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19437:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19428:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19428:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19421:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19214:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19222:3:16",
														"type": ""
													}
												],
												"src": "19080:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19623:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19633:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19645:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19656:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19641:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19641:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19633:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19680:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19691:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19676:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19676:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19699:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19705:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19695:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19695:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19669:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19669:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19669:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19725:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19859:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19733:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19733:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19725:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19603:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19618:4:16",
														"type": ""
													}
												],
												"src": "19452:419:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19925:362:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19935:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19958:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19940:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19940:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19935:1:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19969:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19992:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19974:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "19974:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19969:1:16"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20003:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20026:1:16"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20029:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20022:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20022:9:16"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "20007:11:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20040:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "20069:11:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20051:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20051:30:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20040:7:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20258:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20260:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20260:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20260:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20191:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20184:6:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20184:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "20214:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "20221:7:16"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "20230:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "20217:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20217:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "20211:2:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20211:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "20164:2:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20164:83:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20144:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20144:113:16"
															},
															"nodeType": "YulIf",
															"src": "20141:139:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19908:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19911:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19917:7:16",
														"type": ""
													}
												],
												"src": "19877:410:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20321:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20338:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20341:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20331:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20331:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20331:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20435:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20438:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20428:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20428:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20428:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20459:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20462:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20452:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20452:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20452:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "20293:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20507:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20524:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20527:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20517:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20517:88:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20517:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20621:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20624:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20614:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20614:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20614:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20645:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20648:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20638:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20638:15:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20638:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20479:180:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20708:128:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20718:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20745:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20727:17:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20727:24:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20718:5:16"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20779:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20781:16:16"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20781:18:16"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20781:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20766:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20773:4:16",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20763:2:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20763:15:16"
															},
															"nodeType": "YulIf",
															"src": "20760:41:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20810:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20821:5:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20828:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20817:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20817:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20810:3:16"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20694:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20704:3:16",
														"type": ""
													}
												],
												"src": "20665:171:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20948:76:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20970:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20978:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20966:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20966:14:16"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20982:34:16",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20959:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "20959:58:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20959:58:16"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20940:6:16",
														"type": ""
													}
												],
												"src": "20842:182:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21176:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21186:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21252:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21257:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21193:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21193:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21186:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21358:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "21269:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21269:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21269:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21371:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21382:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21387:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21378:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21378:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21371:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21164:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21172:3:16",
														"type": ""
													}
												],
												"src": "21030:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21573:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21583:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21595:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21606:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21591:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21591:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21583:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21630:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21641:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21626:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21626:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21649:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21655:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21645:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21645:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21619:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21619:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21619:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21675:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21809:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21683:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21683:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21675:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21553:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21568:4:16",
														"type": ""
													}
												],
												"src": "21402:419:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21933:119:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21955:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21963:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21951:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21951:14:16"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21967:34:16",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21944:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "21944:58:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21944:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22023:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22031:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22019:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22019:15:16"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22036:8:16",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22012:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22012:33:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22012:33:16"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21925:6:16",
														"type": ""
													}
												],
												"src": "21827:225:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22204:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22214:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22280:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22285:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22221:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22221:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22214:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22386:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "22297:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22297:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22297:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22399:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22410:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22415:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22406:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22406:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22399:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22192:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22200:3:16",
														"type": ""
													}
												],
												"src": "22058:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22601:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22611:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22623:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22634:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22619:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22619:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22611:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22658:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22669:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22654:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22654:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22677:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22683:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22673:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22673:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22647:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22647:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22647:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22703:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22837:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22711:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22711:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22703:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22581:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22596:4:16",
														"type": ""
													}
												],
												"src": "22430:419:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22913:40:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22924:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22940:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22934:5:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "22934:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22924:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22896:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22906:6:16",
														"type": ""
													}
												],
												"src": "22855:98:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23072:34:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23082:18:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23097:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "23082:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23044:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23049:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "23060:11:16",
														"type": ""
													}
												],
												"src": "22959:147:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23220:278:16",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23230:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23276:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23244:31:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23244:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23234:6:16",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23291:95:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23374:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23379:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23298:75:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23298:88:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23291:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23434:5:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23441:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23430:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23430:16:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23448:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23453:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "23395:34:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23395:65:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23395:65:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23469:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23480:3:16"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23485:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23476:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23476:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23469:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23201:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23208:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23216:3:16",
														"type": ""
													}
												],
												"src": "23112:386:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23638:137:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23649:100:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23736:6:16"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23745:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23656:79:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23656:93:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23649:3:16"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23759:10:16",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23766:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23759:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23617:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23623:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23634:3:16",
														"type": ""
													}
												],
												"src": "23504:271:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23887:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23909:6:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23917:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23905:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23905:14:16"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23921:31:16",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23898:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "23898:55:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23898:55:16"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23879:6:16",
														"type": ""
													}
												],
												"src": "23781:179:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24112:220:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24122:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24188:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24193:2:16",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24129:58:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "24129:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24122:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24294:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "24205:88:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "24205:93:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24205:93:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24307:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24318:3:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24323:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24314:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "24314:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24307:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24100:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24108:3:16",
														"type": ""
													}
												],
												"src": "23966:366:16"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24509:248:16",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24519:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24531:9:16"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24542:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24527:3:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "24527:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24519:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24566:9:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24577:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24562:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24562:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24585:4:16"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24591:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24581:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24581:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24555:6:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "24555:47:16"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24555:47:16"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24611:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24745:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24619:124:16"
																},
																"nodeType": "YulFunctionCall",
																"src": "24619:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24611:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24489:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24504:4:16",
														"type": ""
													}
												],
												"src": "24338:419:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$644_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$644_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$644_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$644_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$644_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$644(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$644(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$644(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$644(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$644(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$644(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$644(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Collateral Address Already Added\")\n\n    }\n\n    function abi_encode_t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063767a7b0511610097578063d547741f11610066578063d547741f1461029a578063ec87621c146102b6578063ece13732146102d4578063f2fde38b146102f057610100565b8063767a7b05146102125780638da5cb5b1461022e57806391d148541461024c578063a217fddf1461027c57610100565b806336568abe116100d357806336568abe146101b25780633b61f098146101ce5780635306f102146101ea578063715018a61461020857610100565b806301ffc9a714610105578063248a9ca314610135578063279ba28d146101655780632f2ff15d14610196575b600080fd5b61011f600480360381019061011a9190611526565b61030c565b60405161012c919061156e565b60405180910390f35b61014f600480360381019061014a91906115bf565b610386565b60405161015c91906115fb565b60405180910390f35b61017f600480360381019061017a919061164c565b6103a6565b60405161018d929190611707565b60405180910390f35b6101b060048036038101906101ab919061176e565b6103ea565b005b6101cc60048036038101906101c7919061176e565b61040b565b005b6101e860048036038101906101e391906117ec565b61048e565b005b6101f2610579565b6040516101ff9190611819565b60405180910390f35b61021061057f565b005b61022c60048036038101906102279190611834565b610593565b005b6102366106f7565b6040516102439190611883565b60405180910390f35b6102666004803603810190610261919061176e565b610720565b604051610273919061156e565b60405180910390f35b61028461078b565b60405161029191906115fb565b60405180910390f35b6102b460048036038101906102af919061176e565b610792565b005b6102be6107b3565b6040516102cb91906115fb565b60405180910390f35b6102ee60048036038101906102e99190611834565b6107d7565b005b61030a6004803603810190610305919061189e565b610935565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037f575061037e826109b8565b5b9050919050565b600060026000838152602001908152602001600020600101549050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6103f382610386565b6103fc81610a22565b6104068383610a36565b505050565b610413610b17565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610480576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104779061194e565b60405180910390fd5b61048a8282610b1f565b5050565b6104bf7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086104ba610b17565b610720565b6104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f5906119ba565b60405180910390fd5b61050781610c01565b8060046000600354815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003600081548092919061057190611a09565b919050555050565b60035481565b610587610cc9565b6105916000610d47565b565b6105c47f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b086105bf610b17565b610720565b610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa906119ba565b60405180910390fd5b60006004600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600460008581526020019081526020016000206001015490508281106106f15761068b33848473ffffffffffffffffffffffffffffffffffffffff16610e0b9092919063ffffffff16565b61069e8382610e9190919063ffffffff16565b6004600086815260200190815260200160002060010181905550837f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8846040516106e89190611819565b60405180910390a25b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b61079b82610386565b6107a481610a22565b6107ae8383610b1f565b505050565b7f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b0881565b6108087f241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08610803610b17565b610720565b610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083e906119ba565b60405180910390fd5b60006004600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506108af3330848473ffffffffffffffffffffffffffffffffffffffff16610ea7909392919063ffffffff16565b6000600460008581526020019081526020016000206001015490506108dd8382610f3090919063ffffffff16565b6004600086815260200190815260200160002060010181905550837fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c55846040516109279190611819565b60405180910390a250505050565b61093d610cc9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a390611ac3565b60405180910390fd5b6109b581610d47565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a3381610a2e610b17565b610f46565b50565b610a408282610720565b610b135760016002600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ab8610b17565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b610b298282610720565b15610bfd5760006002600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610ba2610b17565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60005b600354811015610cc5578173ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca990611b2f565b60405180910390fd5b8080610cbd90611a09565b915050610c04565b5050565b610cd1610b17565b73ffffffffffffffffffffffffffffffffffffffff16610cef6106f7565b73ffffffffffffffffffffffffffffffffffffffff1614610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90611b9b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e8c8363a9059cbb60e01b8484604051602401610e2a929190611bbb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fcb565b505050565b60008183610e9f9190611be4565b905092915050565b610f2a846323b872dd60e01b858585604051602401610ec893929190611c18565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fcb565b50505050565b60008183610f3e9190611c4f565b905092915050565b610f508282610720565b610fc757610f5d81611093565b610f6b8360001c60206110c0565b604051602001610f7c929190611d8c565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbe9190611e10565b60405180910390fd5b5050565b600061102d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112fc9092919063ffffffff16565b905060008151148061104f57508080602001905181019061104e9190611e5e565b5b61108e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108590611efd565b60405180910390fd5b505050565b60606110b98273ffffffffffffffffffffffffffffffffffffffff16601460ff166110c0565b9050919050565b6060600060028360026110d39190611f1d565b6110dd9190611c4f565b67ffffffffffffffff8111156110f6576110f5611f5f565b5b6040519080825280601f01601f1916602001820160405280156111285781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106111605761115f611f8e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106111c4576111c3611f8e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026112049190611f1d565b61120e9190611c4f565b90505b60018111156112ae577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106112505761124f611f8e565b5b1a60f81b82828151811061126757611266611f8e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806112a790611fbd565b9050611211565b50600084146112f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e990612032565b60405180910390fd5b8091505092915050565b606061130b8484600085611314565b90509392505050565b606082471015611359576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611350906120c4565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611382919061212b565b60006040518083038185875af1925050503d80600081146113bf576040519150601f19603f3d011682016040523d82523d6000602084013e6113c4565b606091505b50915091506113d5878383876113e1565b92505050949350505050565b6060831561144357600083510361143b576113fb85611456565b61143a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114319061218e565b60405180910390fd5b5b82905061144e565b61144d8383611479565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561148c5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c09190611e10565b60405180910390fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611503816114ce565b811461150e57600080fd5b50565b600081359050611520816114fa565b92915050565b60006020828403121561153c5761153b6114c9565b5b600061154a84828501611511565b91505092915050565b60008115159050919050565b61156881611553565b82525050565b6000602082019050611583600083018461155f565b92915050565b6000819050919050565b61159c81611589565b81146115a757600080fd5b50565b6000813590506115b981611593565b92915050565b6000602082840312156115d5576115d46114c9565b5b60006115e3848285016115aa565b91505092915050565b6115f581611589565b82525050565b600060208201905061161060008301846115ec565b92915050565b6000819050919050565b61162981611616565b811461163457600080fd5b50565b60008135905061164681611620565b92915050565b600060208284031215611662576116616114c9565b5b600061167084828501611637565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116be6116b96116b484611679565b611699565b611679565b9050919050565b60006116d0826116a3565b9050919050565b60006116e2826116c5565b9050919050565b6116f2816116d7565b82525050565b61170181611616565b82525050565b600060408201905061171c60008301856116e9565b61172960208301846116f8565b9392505050565b600061173b82611679565b9050919050565b61174b81611730565b811461175657600080fd5b50565b60008135905061176881611742565b92915050565b60008060408385031215611785576117846114c9565b5b6000611793858286016115aa565b92505060206117a485828601611759565b9150509250929050565b60006117b982611730565b9050919050565b6117c9816117ae565b81146117d457600080fd5b50565b6000813590506117e6816117c0565b92915050565b600060208284031215611802576118016114c9565b5b6000611810848285016117d7565b91505092915050565b600060208201905061182e60008301846116f8565b92915050565b6000806040838503121561184b5761184a6114c9565b5b600061185985828601611637565b925050602061186a85828601611637565b9150509250929050565b61187d81611730565b82525050565b60006020820190506118986000830184611874565b92915050565b6000602082840312156118b4576118b36114c9565b5b60006118c284828501611759565b91505092915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611938602f836118cb565b9150611943826118dc565b604082019050919050565b600060208201905081810360008301526119678161192b565b9050919050565b7f4e6f7420616c6c6f776564000000000000000000000000000000000000000000600082015250565b60006119a4600b836118cb565b91506119af8261196e565b602082019050919050565b600060208201905081810360008301526119d381611997565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a1482611616565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a4657611a456119da565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611aad6026836118cb565b9150611ab882611a51565b604082019050919050565b60006020820190508181036000830152611adc81611aa0565b9050919050565b7f436f6c6c61746572616c204164647265737320416c7265616479204164646564600082015250565b6000611b196020836118cb565b9150611b2482611ae3565b602082019050919050565b60006020820190508181036000830152611b4881611b0c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b856020836118cb565b9150611b9082611b4f565b602082019050919050565b60006020820190508181036000830152611bb481611b78565b9050919050565b6000604082019050611bd06000830185611874565b611bdd60208301846116f8565b9392505050565b6000611bef82611616565b9150611bfa83611616565b9250828203905081811115611c1257611c116119da565b5b92915050565b6000606082019050611c2d6000830186611874565b611c3a6020830185611874565b611c4760408301846116f8565b949350505050565b6000611c5a82611616565b9150611c6583611616565b9250828201905080821115611c7d57611c7c6119da565b5b92915050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000611cc4601783611c83565b9150611ccf82611c8e565b601782019050919050565b600081519050919050565b60005b83811015611d03578082015181840152602081019050611ce8565b60008484015250505050565b6000611d1a82611cda565b611d248185611c83565b9350611d34818560208601611ce5565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000611d76601183611c83565b9150611d8182611d40565b601182019050919050565b6000611d9782611cb7565b9150611da38285611d0f565b9150611dae82611d69565b9150611dba8284611d0f565b91508190509392505050565b6000601f19601f8301169050919050565b6000611de282611cda565b611dec81856118cb565b9350611dfc818560208601611ce5565b611e0581611dc6565b840191505092915050565b60006020820190508181036000830152611e2a8184611dd7565b905092915050565b611e3b81611553565b8114611e4657600080fd5b50565b600081519050611e5881611e32565b92915050565b600060208284031215611e7457611e736114c9565b5b6000611e8284828501611e49565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611ee7602a836118cb565b9150611ef282611e8b565b604082019050919050565b60006020820190508181036000830152611f1681611eda565b9050919050565b6000611f2882611616565b9150611f3383611616565b9250828202611f4181611616565b91508282048414831517611f5857611f576119da565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611fc882611616565b915060008203611fdb57611fda6119da565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061201c6020836118cb565b915061202782611fe6565b602082019050919050565b6000602082019050818103600083015261204b8161200f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006120ae6026836118cb565b91506120b982612052565b604082019050919050565b600060208201905081810360008301526120dd816120a1565b9050919050565b600081519050919050565b600081905092915050565b6000612105826120e4565b61210f81856120ef565b935061211f818560208601611ce5565b80840191505092915050565b600061213782846120fa565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612178601d836118cb565b915061218382612142565b602082019050919050565b600060208201905081810360008301526121a78161216b565b905091905056fea2646970667358221220403d56d9ca8040387c4f207a20cfacb7b01436d90a7ed81565714d3ce075097964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x767A7B05 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xEC87621C EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xECE13732 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x767A7B05 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x27C JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x3B61F098 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x5306F102 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x208 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x279BA28D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP3 SWAP2 SWAP1 PUSH2 0x1707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x57F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH2 0x7B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1834 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x189E JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x37F JUMPI POP PUSH2 0x37E DUP3 PUSH2 0x9B8 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x3F3 DUP3 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x3FC DUP2 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x406 DUP4 DUP4 PUSH2 0xA36 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x413 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x477 SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x48A DUP3 DUP3 PUSH2 0xB1F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4BF PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x4BA PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x507 DUP2 PUSH2 0xC01 JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x571 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x587 PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x591 PUSH1 0x0 PUSH2 0xD47 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5C4 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x5BF PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FA SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 DUP2 LT PUSH2 0x6F1 JUMPI PUSH2 0x68B CALLER DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE0B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69E DUP4 DUP3 PUSH2 0xE91 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0x56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x79B DUP3 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x7A4 DUP2 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x7AE DUP4 DUP4 PUSH2 0xB1F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 DUP2 JUMP JUMPDEST PUSH2 0x808 PUSH32 0x241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08 PUSH2 0x803 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83E SWAP1 PUSH2 0x19BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0x8AF CALLER ADDRESS DUP5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEA7 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH2 0x8DD DUP4 DUP3 PUSH2 0xF30 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH32 0xA3AF609BF46297028CE551832669030F9EFFEF2B02606D02CBBCC40FE6B47C55 DUP5 PUSH1 0x40 MLOAD PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x1819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x93D PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A3 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B5 DUP2 PUSH2 0xD47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA33 DUP2 PUSH2 0xA2E PUSH2 0xB17 JUMP JUMPDEST PUSH2 0xF46 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA40 DUP3 DUP3 PUSH2 0x720 JUMP JUMPDEST PUSH2 0xB13 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAB8 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB29 DUP3 DUP3 PUSH2 0x720 JUMP JUMPDEST ISZERO PUSH2 0xBFD JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBA2 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xCC5 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0xCBD SWAP1 PUSH2 0x1A09 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC04 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCD1 PUSH2 0xB17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCEF PUSH2 0x6F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE8C DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE2A SWAP3 SWAP2 SWAP1 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFCB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE9F SWAP2 SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF2A DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEC8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFCB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF3E SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF50 DUP3 DUP3 PUSH2 0x720 JUMP JUMPDEST PUSH2 0xFC7 JUMPI PUSH2 0xF5D DUP2 PUSH2 0x1093 JUMP JUMPDEST PUSH2 0xF6B DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7C SWAP3 SWAP2 SWAP1 PUSH2 0x1D8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBE SWAP2 SWAP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102D DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12FC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x104F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x104E SWAP2 SWAP1 PUSH2 0x1E5E JUMP JUMPDEST JUMPDEST PUSH2 0x108E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1085 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10B9 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x10C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x10D3 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10F5 PUSH2 0x1F5F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1128 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1160 JUMPI PUSH2 0x115F PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11C4 JUMPI PUSH2 0x11C3 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1204 SWAP2 SWAP1 PUSH2 0x1F1D JUMP JUMPDEST PUSH2 0x120E SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1250 JUMPI PUSH2 0x124F PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1267 JUMPI PUSH2 0x1266 PUSH2 0x1F8E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x12A7 SWAP1 PUSH2 0x1FBD JUMP JUMPDEST SWAP1 POP PUSH2 0x1211 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x12F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E9 SWAP1 PUSH2 0x2032 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x130B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1314 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1350 SWAP1 PUSH2 0x20C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1382 SWAP2 SWAP1 PUSH2 0x212B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13D5 DUP8 DUP4 DUP4 DUP8 PUSH2 0x13E1 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1443 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x143B JUMPI PUSH2 0x13FB DUP6 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x143A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1431 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x144E JUMP JUMPDEST PUSH2 0x144D DUP4 DUP4 PUSH2 0x1479 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x148C JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C0 SWAP2 SWAP1 PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1503 DUP2 PUSH2 0x14CE JUMP JUMPDEST DUP2 EQ PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1520 DUP2 PUSH2 0x14FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153C JUMPI PUSH2 0x153B PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x154A DUP5 DUP3 DUP6 ADD PUSH2 0x1511 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1568 DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1583 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x155F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x159C DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP2 EQ PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B9 DUP2 PUSH2 0x1593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D5 JUMPI PUSH2 0x15D4 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E3 DUP5 DUP3 DUP6 ADD PUSH2 0x15AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15F5 DUP2 PUSH2 0x1589 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1610 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1629 DUP2 PUSH2 0x1616 JUMP JUMPDEST DUP2 EQ PUSH2 0x1634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1646 DUP2 PUSH2 0x1620 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1662 JUMPI PUSH2 0x1661 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1670 DUP5 DUP3 DUP6 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BE PUSH2 0x16B9 PUSH2 0x16B4 DUP5 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D0 DUP3 PUSH2 0x16A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x16C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1701 DUP2 PUSH2 0x1616 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x171C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16E9 JUMP JUMPDEST PUSH2 0x1729 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173B DUP3 PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x1730 JUMP JUMPDEST DUP2 EQ PUSH2 0x1756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1768 DUP2 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH2 0x1784 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1793 DUP6 DUP3 DUP7 ADD PUSH2 0x15AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17A4 DUP6 DUP3 DUP7 ADD PUSH2 0x1759 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B9 DUP3 PUSH2 0x1730 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x17AE JUMP JUMPDEST DUP2 EQ PUSH2 0x17D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17E6 DUP2 PUSH2 0x17C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1802 JUMPI PUSH2 0x1801 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1810 DUP5 DUP3 DUP6 ADD PUSH2 0x17D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x182E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184B JUMPI PUSH2 0x184A PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1859 DUP6 DUP3 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x186A DUP6 DUP3 DUP7 ADD PUSH2 0x1637 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x187D DUP2 PUSH2 0x1730 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1898 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1874 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B4 JUMPI PUSH2 0x18B3 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C2 DUP5 DUP3 DUP6 ADD PUSH2 0x1759 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1938 PUSH1 0x2F DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1943 DUP3 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1967 DUP2 PUSH2 0x192B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A4 PUSH1 0xB DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x19AF DUP3 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19D3 DUP2 PUSH2 0x1997 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A14 DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A46 JUMPI PUSH2 0x1A45 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x26 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ADC DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6C6C61746572616C204164647265737320416C7265616479204164646564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B19 PUSH1 0x20 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B24 DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B48 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B85 PUSH1 0x20 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1B90 DUP3 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB4 DUP2 PUSH2 0x1B78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BD0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1BDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BEF DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFA DUP4 PUSH2 0x1616 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C12 JUMPI PUSH2 0x1C11 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C2D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1C3A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1874 JUMP JUMPDEST PUSH2 0x1C47 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16F8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5A DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C65 DUP4 PUSH2 0x1616 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x19DA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC4 PUSH1 0x17 DUP4 PUSH2 0x1C83 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CCF DUP3 PUSH2 0x1C8E JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D03 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CE8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1A DUP3 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1D24 DUP2 DUP6 PUSH2 0x1C83 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D76 PUSH1 0x11 DUP4 PUSH2 0x1C83 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D81 DUP3 PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D97 DUP3 PUSH2 0x1CB7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA3 DUP3 DUP6 PUSH2 0x1D0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAE DUP3 PUSH2 0x1D69 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBA DUP3 DUP5 PUSH2 0x1D0F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE2 DUP3 PUSH2 0x1CDA JUMP JUMPDEST PUSH2 0x1DEC DUP2 DUP6 PUSH2 0x18CB JUMP JUMPDEST SWAP4 POP PUSH2 0x1DFC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E2A DUP2 DUP5 PUSH2 0x1DD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E3B DUP2 PUSH2 0x1553 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E58 DUP2 PUSH2 0x1E32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E74 JUMPI PUSH2 0x1E73 PUSH2 0x14C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E82 DUP5 DUP3 DUP6 ADD PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 PUSH1 0x2A DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF2 DUP3 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F16 DUP2 PUSH2 0x1EDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F28 DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F33 DUP4 PUSH2 0x1616 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F41 DUP2 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x19DA JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FC8 DUP3 PUSH2 0x1616 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x1FDB JUMPI PUSH2 0x1FDA PUSH2 0x19DA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201C PUSH1 0x20 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2027 DUP3 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x204B DUP2 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AE PUSH1 0x26 DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x20B9 DUP3 PUSH2 0x2052 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20DD DUP2 PUSH2 0x20A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2105 DUP3 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x210F DUP2 DUP6 PUSH2 0x20EF JUMP JUMPDEST SWAP4 POP PUSH2 0x211F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CE5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2137 DUP3 DUP5 PUSH2 0x20FA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2178 PUSH1 0x1D DUP4 PUSH2 0x18CB JUMP JUMPDEST SWAP2 POP PUSH2 0x2183 DUP3 PUSH2 0x2142 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21A7 DUP2 PUSH2 0x216B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH RETURNDATASIZE JUMP 0xD9 0xCA DUP1 BLOCKHASH CODESIZE PUSH29 0x4F207A20CFACB7B01436D90A7ED81565714D3CE075097964736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "427:2061:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;686:49:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4929:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6038:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1293:263:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;564:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:2;;;:::i;:::-;;2002:484:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;858:64:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1562:434;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2732:202:0;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;4504:129::-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;686:49:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4929:145:0:-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;1293:263:15:-;1365:35;897:25;1387:12;:10;:12::i;:::-;1365:7;:35::i;:::-;1357:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1426:33;1447:11;1426:20;:33::i;:::-;1510:11;1469:9;:27;1479:16;;1469:27;;;;;;;;;;;:38;;;:52;;;;;;;;;;;;;;;;;;1531:16;;:18;;;;;;;;;:::i;:::-;;;;;;1293:263;:::o;564:31::-;;;;:::o;1824:101:2:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2002:484:15:-;2086:35;897:25;2108:12;:10;:12::i;:::-;2086:7;:35::i;:::-;2078:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2147:15;2165:9;:14;2175:3;2165:14;;;;;;;;;;;:25;;;;;;;;;;;;2147:43;;2200:27;2230:9;:14;2240:3;2230:14;;;;;;;;;;;:21;;;2200:51;;2288:6;2265:19;:29;2261:219;;2310:50;2340:10;2353:6;2310:8;:21;;;;:50;;;;;:::i;:::-;2398:31;2422:6;2398:19;:23;;:31;;;;:::i;:::-;2374:9;:14;2384:3;2374:14;;;;;;;;;;;:21;;:55;;;;2457:3;2448:21;2462:6;2448:21;;;;;;:::i;:::-;;;;;;;;2261:219;2068:418;;2002:484;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2153:49::-;2198:4;2153:49;;;:::o;5354:147::-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;858:64:15:-;897:25;858:64;:::o;1562:434::-;1645:35;897:25;1667:12;:10;:12::i;:::-;1645:7;:35::i;:::-;1637:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1706:15;1724:9;:14;1734:3;1724:14;;;;;;;;;;;:25;;;;;;;;;;;;1706:43;;1759:69;1793:10;1814:4;1821:6;1759:8;:25;;;;:69;;;;;;:::i;:::-;1838:27;1868:9;:14;1878:3;1868:14;;;;;;;;;;;:21;;;1838:51;;1923:31;1947:6;1923:19;:23;;:31;;;;:::i;:::-;1899:9;:14;1909:3;1899:14;;;;;;;;;;;:21;;:55;;;;1977:3;1969:20;1982:6;1969:20;;;;;;:::i;:::-;;;;;;;;1627:369;;1562:434;;:::o;2074:198:2:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;829:155:10:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;7991:234:0:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;1058:229:15:-;1136:9;1132:149;1151:16;;1147:1;:20;1132:149;;;1222:11;1195:38;;:9;:12;1205:1;1195:12;;;;;;;;;;;:23;;;;;;;;;;;;:38;;;1187:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1169:3;;;;;:::i;:::-;;;;1132:149;;;;1058:229;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;941:175:6:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;3122:96:13:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;1355:203:6:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;2755:96:13:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;5173:642:6:-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5726:1;5705:10;:17;:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5705:56;5697:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5243:572;5173:642;;:::o;2407:149:9:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;4108:223:7:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:16;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:122::-;2717:24;2735:5;2717:24;:::i;:::-;2710:5;2707:35;2697:63;;2756:1;2753;2746:12;2697:63;2644:122;:::o;2772:139::-;2818:5;2856:6;2843:20;2834:29;;2872:33;2899:5;2872:33;:::i;:::-;2772:139;;;;:::o;2917:329::-;2976:6;3025:2;3013:9;3004:7;3000:23;2996:32;2993:119;;;3031:79;;:::i;:::-;2993:119;3151:1;3176:53;3221:7;3212:6;3201:9;3197:22;3176:53;:::i;:::-;3166:63;;3122:117;2917:329;;;;:::o;3252:126::-;3289:7;3329:42;3322:5;3318:54;3307:65;;3252:126;;;:::o;3384:60::-;3412:3;3433:5;3426:12;;3384:60;;;:::o;3450:142::-;3500:9;3533:53;3551:34;3560:24;3578:5;3560:24;:::i;:::-;3551:34;:::i;:::-;3533:53;:::i;:::-;3520:66;;3450:142;;;:::o;3598:126::-;3648:9;3681:37;3712:5;3681:37;:::i;:::-;3668:50;;3598:126;;;:::o;3730:140::-;3794:9;3827:37;3858:5;3827:37;:::i;:::-;3814:50;;3730:140;;;:::o;3876:159::-;3977:51;4022:5;3977:51;:::i;:::-;3972:3;3965:64;3876:159;;:::o;4041:118::-;4128:24;4146:5;4128:24;:::i;:::-;4123:3;4116:37;4041:118;;:::o;4165:360::-;4300:4;4338:2;4327:9;4323:18;4315:26;;4351:85;4433:1;4422:9;4418:17;4409:6;4351:85;:::i;:::-;4446:72;4514:2;4503:9;4499:18;4490:6;4446:72;:::i;:::-;4165:360;;;;;:::o;4531:96::-;4568:7;4597:24;4615:5;4597:24;:::i;:::-;4586:35;;4531:96;;;:::o;4633:122::-;4706:24;4724:5;4706:24;:::i;:::-;4699:5;4696:35;4686:63;;4745:1;4742;4735:12;4686:63;4633:122;:::o;4761:139::-;4807:5;4845:6;4832:20;4823:29;;4861:33;4888:5;4861:33;:::i;:::-;4761:139;;;;:::o;4906:474::-;4974:6;4982;5031:2;5019:9;5010:7;5006:23;5002:32;4999:119;;;5037:79;;:::i;:::-;4999:119;5157:1;5182:53;5227:7;5218:6;5207:9;5203:22;5182:53;:::i;:::-;5172:63;;5128:117;5284:2;5310:53;5355:7;5346:6;5335:9;5331:22;5310:53;:::i;:::-;5300:63;;5255:118;4906:474;;;;;:::o;5386:110::-;5437:7;5466:24;5484:5;5466:24;:::i;:::-;5455:35;;5386:110;;;:::o;5502:150::-;5589:38;5621:5;5589:38;:::i;:::-;5582:5;5579:49;5569:77;;5642:1;5639;5632:12;5569:77;5502:150;:::o;5658:167::-;5718:5;5756:6;5743:20;5734:29;;5772:47;5813:5;5772:47;:::i;:::-;5658:167;;;;:::o;5831:357::-;5904:6;5953:2;5941:9;5932:7;5928:23;5924:32;5921:119;;;5959:79;;:::i;:::-;5921:119;6079:1;6104:67;6163:7;6154:6;6143:9;6139:22;6104:67;:::i;:::-;6094:77;;6050:131;5831:357;;;;:::o;6194:222::-;6287:4;6325:2;6314:9;6310:18;6302:26;;6338:71;6406:1;6395:9;6391:17;6382:6;6338:71;:::i;:::-;6194:222;;;;:::o;6422:474::-;6490:6;6498;6547:2;6535:9;6526:7;6522:23;6518:32;6515:119;;;6553:79;;:::i;:::-;6515:119;6673:1;6698:53;6743:7;6734:6;6723:9;6719:22;6698:53;:::i;:::-;6688:63;;6644:117;6800:2;6826:53;6871:7;6862:6;6851:9;6847:22;6826:53;:::i;:::-;6816:63;;6771:118;6422:474;;;;;:::o;6902:118::-;6989:24;7007:5;6989:24;:::i;:::-;6984:3;6977:37;6902:118;;:::o;7026:222::-;7119:4;7157:2;7146:9;7142:18;7134:26;;7170:71;7238:1;7227:9;7223:17;7214:6;7170:71;:::i;:::-;7026:222;;;;:::o;7254:329::-;7313:6;7362:2;7350:9;7341:7;7337:23;7333:32;7330:119;;;7368:79;;:::i;:::-;7330:119;7488:1;7513:53;7558:7;7549:6;7538:9;7534:22;7513:53;:::i;:::-;7503:63;;7459:117;7254:329;;;;:::o;7589:169::-;7673:11;7707:6;7702:3;7695:19;7747:4;7742:3;7738:14;7723:29;;7589:169;;;;:::o;7764:234::-;7904:34;7900:1;7892:6;7888:14;7881:58;7973:17;7968:2;7960:6;7956:15;7949:42;7764:234;:::o;8004:366::-;8146:3;8167:67;8231:2;8226:3;8167:67;:::i;:::-;8160:74;;8243:93;8332:3;8243:93;:::i;:::-;8361:2;8356:3;8352:12;8345:19;;8004:366;;;:::o;8376:419::-;8542:4;8580:2;8569:9;8565:18;8557:26;;8629:9;8623:4;8619:20;8615:1;8604:9;8600:17;8593:47;8657:131;8783:4;8657:131;:::i;:::-;8649:139;;8376:419;;;:::o;8801:161::-;8941:13;8937:1;8929:6;8925:14;8918:37;8801:161;:::o;8968:366::-;9110:3;9131:67;9195:2;9190:3;9131:67;:::i;:::-;9124:74;;9207:93;9296:3;9207:93;:::i;:::-;9325:2;9320:3;9316:12;9309:19;;8968:366;;;:::o;9340:419::-;9506:4;9544:2;9533:9;9529:18;9521:26;;9593:9;9587:4;9583:20;9579:1;9568:9;9564:17;9557:47;9621:131;9747:4;9621:131;:::i;:::-;9613:139;;9340:419;;;:::o;9765:180::-;9813:77;9810:1;9803:88;9910:4;9907:1;9900:15;9934:4;9931:1;9924:15;9951:233;9990:3;10013:24;10031:5;10013:24;:::i;:::-;10004:33;;10059:66;10052:5;10049:77;10046:103;;10129:18;;:::i;:::-;10046:103;10176:1;10169:5;10165:13;10158:20;;9951:233;;;:::o;10190:225::-;10330:34;10326:1;10318:6;10314:14;10307:58;10399:8;10394:2;10386:6;10382:15;10375:33;10190:225;:::o;10421:366::-;10563:3;10584:67;10648:2;10643:3;10584:67;:::i;:::-;10577:74;;10660:93;10749:3;10660:93;:::i;:::-;10778:2;10773:3;10769:12;10762:19;;10421:366;;;:::o;10793:419::-;10959:4;10997:2;10986:9;10982:18;10974:26;;11046:9;11040:4;11036:20;11032:1;11021:9;11017:17;11010:47;11074:131;11200:4;11074:131;:::i;:::-;11066:139;;10793:419;;;:::o;11218:182::-;11358:34;11354:1;11346:6;11342:14;11335:58;11218:182;:::o;11406:366::-;11548:3;11569:67;11633:2;11628:3;11569:67;:::i;:::-;11562:74;;11645:93;11734:3;11645:93;:::i;:::-;11763:2;11758:3;11754:12;11747:19;;11406:366;;;:::o;11778:419::-;11944:4;11982:2;11971:9;11967:18;11959:26;;12031:9;12025:4;12021:20;12017:1;12006:9;12002:17;11995:47;12059:131;12185:4;12059:131;:::i;:::-;12051:139;;11778:419;;;:::o;12203:182::-;12343:34;12339:1;12331:6;12327:14;12320:58;12203:182;:::o;12391:366::-;12533:3;12554:67;12618:2;12613:3;12554:67;:::i;:::-;12547:74;;12630:93;12719:3;12630:93;:::i;:::-;12748:2;12743:3;12739:12;12732:19;;12391:366;;;:::o;12763:419::-;12929:4;12967:2;12956:9;12952:18;12944:26;;13016:9;13010:4;13006:20;13002:1;12991:9;12987:17;12980:47;13044:131;13170:4;13044:131;:::i;:::-;13036:139;;12763:419;;;:::o;13188:332::-;13309:4;13347:2;13336:9;13332:18;13324:26;;13360:71;13428:1;13417:9;13413:17;13404:6;13360:71;:::i;:::-;13441:72;13509:2;13498:9;13494:18;13485:6;13441:72;:::i;:::-;13188:332;;;;;:::o;13526:194::-;13566:4;13586:20;13604:1;13586:20;:::i;:::-;13581:25;;13620:20;13638:1;13620:20;:::i;:::-;13615:25;;13664:1;13661;13657:9;13649:17;;13688:1;13682:4;13679:11;13676:37;;;13693:18;;:::i;:::-;13676:37;13526:194;;;;:::o;13726:442::-;13875:4;13913:2;13902:9;13898:18;13890:26;;13926:71;13994:1;13983:9;13979:17;13970:6;13926:71;:::i;:::-;14007:72;14075:2;14064:9;14060:18;14051:6;14007:72;:::i;:::-;14089;14157:2;14146:9;14142:18;14133:6;14089:72;:::i;:::-;13726:442;;;;;;:::o;14174:191::-;14214:3;14233:20;14251:1;14233:20;:::i;:::-;14228:25;;14267:20;14285:1;14267:20;:::i;:::-;14262:25;;14310:1;14307;14303:9;14296:16;;14331:3;14328:1;14325:10;14322:36;;;14338:18;;:::i;:::-;14322:36;14174:191;;;;:::o;14371:148::-;14473:11;14510:3;14495:18;;14371:148;;;;:::o;14525:173::-;14665:25;14661:1;14653:6;14649:14;14642:49;14525:173;:::o;14704:402::-;14864:3;14885:85;14967:2;14962:3;14885:85;:::i;:::-;14878:92;;14979:93;15068:3;14979:93;:::i;:::-;15097:2;15092:3;15088:12;15081:19;;14704:402;;;:::o;15112:99::-;15164:6;15198:5;15192:12;15182:22;;15112:99;;;:::o;15217:246::-;15298:1;15308:113;15322:6;15319:1;15316:13;15308:113;;;15407:1;15402:3;15398:11;15392:18;15388:1;15383:3;15379:11;15372:39;15344:2;15341:1;15337:10;15332:15;;15308:113;;;15455:1;15446:6;15441:3;15437:16;15430:27;15279:184;15217:246;;;:::o;15469:390::-;15575:3;15603:39;15636:5;15603:39;:::i;:::-;15658:89;15740:6;15735:3;15658:89;:::i;:::-;15651:96;;15756:65;15814:6;15809:3;15802:4;15795:5;15791:16;15756:65;:::i;:::-;15846:6;15841:3;15837:16;15830:23;;15579:280;15469:390;;;;:::o;15865:167::-;16005:19;16001:1;15993:6;15989:14;15982:43;15865:167;:::o;16038:402::-;16198:3;16219:85;16301:2;16296:3;16219:85;:::i;:::-;16212:92;;16313:93;16402:3;16313:93;:::i;:::-;16431:2;16426:3;16422:12;16415:19;;16038:402;;;:::o;16446:967::-;16828:3;16850:148;16994:3;16850:148;:::i;:::-;16843:155;;17015:95;17106:3;17097:6;17015:95;:::i;:::-;17008:102;;17127:148;17271:3;17127:148;:::i;:::-;17120:155;;17292:95;17383:3;17374:6;17292:95;:::i;:::-;17285:102;;17404:3;17397:10;;16446:967;;;;;:::o;17419:102::-;17460:6;17511:2;17507:7;17502:2;17495:5;17491:14;17487:28;17477:38;;17419:102;;;:::o;17527:377::-;17615:3;17643:39;17676:5;17643:39;:::i;:::-;17698:71;17762:6;17757:3;17698:71;:::i;:::-;17691:78;;17778:65;17836:6;17831:3;17824:4;17817:5;17813:16;17778:65;:::i;:::-;17868:29;17890:6;17868:29;:::i;:::-;17863:3;17859:39;17852:46;;17619:285;17527:377;;;;:::o;17910:313::-;18023:4;18061:2;18050:9;18046:18;18038:26;;18110:9;18104:4;18100:20;18096:1;18085:9;18081:17;18074:47;18138:78;18211:4;18202:6;18138:78;:::i;:::-;18130:86;;17910:313;;;;:::o;18229:116::-;18299:21;18314:5;18299:21;:::i;:::-;18292:5;18289:32;18279:60;;18335:1;18332;18325:12;18279:60;18229:116;:::o;18351:137::-;18405:5;18436:6;18430:13;18421:22;;18452:30;18476:5;18452:30;:::i;:::-;18351:137;;;;:::o;18494:345::-;18561:6;18610:2;18598:9;18589:7;18585:23;18581:32;18578:119;;;18616:79;;:::i;:::-;18578:119;18736:1;18761:61;18814:7;18805:6;18794:9;18790:22;18761:61;:::i;:::-;18751:71;;18707:125;18494:345;;;;:::o;18845:229::-;18985:34;18981:1;18973:6;18969:14;18962:58;19054:12;19049:2;19041:6;19037:15;19030:37;18845:229;:::o;19080:366::-;19222:3;19243:67;19307:2;19302:3;19243:67;:::i;:::-;19236:74;;19319:93;19408:3;19319:93;:::i;:::-;19437:2;19432:3;19428:12;19421:19;;19080:366;;;:::o;19452:419::-;19618:4;19656:2;19645:9;19641:18;19633:26;;19705:9;19699:4;19695:20;19691:1;19680:9;19676:17;19669:47;19733:131;19859:4;19733:131;:::i;:::-;19725:139;;19452:419;;;:::o;19877:410::-;19917:7;19940:20;19958:1;19940:20;:::i;:::-;19935:25;;19974:20;19992:1;19974:20;:::i;:::-;19969:25;;20029:1;20026;20022:9;20051:30;20069:11;20051:30;:::i;:::-;20040:41;;20230:1;20221:7;20217:15;20214:1;20211:22;20191:1;20184:9;20164:83;20141:139;;20260:18;;:::i;:::-;20141:139;19925:362;19877:410;;;;:::o;20293:180::-;20341:77;20338:1;20331:88;20438:4;20435:1;20428:15;20462:4;20459:1;20452:15;20479:180;20527:77;20524:1;20517:88;20624:4;20621:1;20614:15;20648:4;20645:1;20638:15;20665:171;20704:3;20727:24;20745:5;20727:24;:::i;:::-;20718:33;;20773:4;20766:5;20763:15;20760:41;;20781:18;;:::i;:::-;20760:41;20828:1;20821:5;20817:13;20810:20;;20665:171;;;:::o;20842:182::-;20982:34;20978:1;20970:6;20966:14;20959:58;20842:182;:::o;21030:366::-;21172:3;21193:67;21257:2;21252:3;21193:67;:::i;:::-;21186:74;;21269:93;21358:3;21269:93;:::i;:::-;21387:2;21382:3;21378:12;21371:19;;21030:366;;;:::o;21402:419::-;21568:4;21606:2;21595:9;21591:18;21583:26;;21655:9;21649:4;21645:20;21641:1;21630:9;21626:17;21619:47;21683:131;21809:4;21683:131;:::i;:::-;21675:139;;21402:419;;;:::o;21827:225::-;21967:34;21963:1;21955:6;21951:14;21944:58;22036:8;22031:2;22023:6;22019:15;22012:33;21827:225;:::o;22058:366::-;22200:3;22221:67;22285:2;22280:3;22221:67;:::i;:::-;22214:74;;22297:93;22386:3;22297:93;:::i;:::-;22415:2;22410:3;22406:12;22399:19;;22058:366;;;:::o;22430:419::-;22596:4;22634:2;22623:9;22619:18;22611:26;;22683:9;22677:4;22673:20;22669:1;22658:9;22654:17;22647:47;22711:131;22837:4;22711:131;:::i;:::-;22703:139;;22430:419;;;:::o;22855:98::-;22906:6;22940:5;22934:12;22924:22;;22855:98;;;:::o;22959:147::-;23060:11;23097:3;23082:18;;22959:147;;;;:::o;23112:386::-;23216:3;23244:38;23276:5;23244:38;:::i;:::-;23298:88;23379:6;23374:3;23298:88;:::i;:::-;23291:95;;23395:65;23453:6;23448:3;23441:4;23434:5;23430:16;23395:65;:::i;:::-;23485:6;23480:3;23476:16;23469:23;;23220:278;23112:386;;;;:::o;23504:271::-;23634:3;23656:93;23745:3;23736:6;23656:93;:::i;:::-;23649:100;;23766:3;23759:10;;23504:271;;;;:::o;23781:179::-;23921:31;23917:1;23909:6;23905:14;23898:55;23781:179;:::o;23966:366::-;24108:3;24129:67;24193:2;24188:3;24129:67;:::i;:::-;24122:74;;24205:93;24294:3;24205:93;:::i;:::-;24323:2;24318:3;24314:12;24307:19;;23966:366;;;:::o;24338:419::-;24504:4;24542:2;24531:9;24527:18;24519:26;;24591:9;24585:4;24581:20;24577:1;24566:9;24562:17;24555:47;24619:131;24745:4;24619:131;:::i;:::-;24611:139;;24338:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1735200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "424",
								"MANAGER_ROLE()": "373",
								"_rsvVault(uint256)": "infinite",
								"addReserveVault(address)": "infinite",
								"currentReserveId()": "2496",
								"depositCollateral(uint256,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3207",
								"owner()": "2567",
								"renounceOwnership()": "30487",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "751",
								"transferOwnership(address)": "30832",
								"withdrawCollateral(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkReserveContract(contract IERC20)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 427,
									"end": 2488,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 929,
									"end": 1052,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 953,
									"end": 997,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 2198,
									"end": 2202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 982,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 964,
									"end": 982,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 984,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 984,
									"end": 994,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 984,
									"end": 994,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 994,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 984,
									"end": 996,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 996,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 984,
									"end": 996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 984,
									"end": 996,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 984,
									"end": 996,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 953,
									"end": 963,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 953,
									"end": 963,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 953,
									"end": 963,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 953,
									"end": 997,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 953,
									"end": 997,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 953,
									"end": 997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 953,
									"end": 997,
									"name": "tag",
									"source": 15,
									"value": "12"
								},
								{
									"begin": 953,
									"end": 997,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1007,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 897,
									"end": 922,
									"name": "PUSH",
									"source": 15,
									"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
								},
								{
									"begin": 1032,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1032,
									"end": 1042,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 1032,
									"end": 1042,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1032,
									"end": 1042,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1032,
									"end": 1044,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1032,
									"end": 1044,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1032,
									"end": 1044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1032,
									"end": 1044,
									"name": "tag",
									"source": 15,
									"value": "16"
								},
								{
									"begin": 1032,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1007,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "14"
								},
								{
									"begin": 1007,
									"end": 1017,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1007,
									"end": 1017,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1007,
									"end": 1045,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1007,
									"end": 1045,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1007,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1007,
									"end": 1045,
									"name": "tag",
									"source": 15,
									"value": "15"
								},
								{
									"begin": 1007,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 7026,
									"end": 7030,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7032,
									"end": 7039,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6937,
									"end": 7047,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7678,
									"end": 7682,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7684,
									"end": 7691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7740,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 7714,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7715,
									"end": 7719,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7729,
									"end": 7736,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7781,
									"end": 7788,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7775,
									"end": 7779,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3107,
									"end": 3111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3136,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3137,
									"end": 3141,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3150,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3158,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3123,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3123,
									"end": 3159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "tag",
									"source": 15,
									"value": "17"
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 2488,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220403d56d9ca8040387c4f207a20cfacb7b01436d90a7ed81565714d3ce075097964736f6c63430008110033",
									".code": [
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "767A7B05"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "EC87621C"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "ECE13732"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "767A7B05"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "91D14854"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "3B61F098"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "5306F102"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "248A9CA3"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "279BA28D"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "2F2FF15D"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 427,
											"end": 2488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 686,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 686,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 686,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 1293,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1293,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 564,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 564,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 2002,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2002,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 922,
											"name": "tag",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 858,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 858,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 1562,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1562,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2915,
											"end": 2926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2891,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 686,
											"end": 735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5012,
											"end": 5030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5053,
											"end": 5057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5059,
											"end": 5066,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5042,
											"end": 5067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6144,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6144,
											"end": 6156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6125,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6219,
											"end": 6245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1365,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 897,
											"end": 922,
											"name": "PUSH",
											"source": 15,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 1387,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 1387,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 1387,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1387,
											"end": 1399,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 1387,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1365,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1365,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1365,
											"end": 1400,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 1365,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 1357,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 1357,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 1447,
											"end": 1458,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 1426,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1510,
											"end": 1521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1495,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1479,
											"end": 1495,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1496,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1507,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 564,
											"end": 595,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 564,
											"end": 595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2086,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 897,
											"end": 922,
											"name": "PUSH",
											"source": 15,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 2108,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 2108,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2086,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 2086,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2086,
											"end": 2121,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 2086,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 2078,
											"end": 2137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 2078,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2147,
											"end": 2162,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2178,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2179,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2147,
											"end": 2190,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2147,
											"end": 2190,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2200,
											"end": 2227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2239,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2243,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2251,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2230,
											"end": 2251,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2230,
											"end": 2251,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2200,
											"end": 2251,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2200,
											"end": 2251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2265,
											"end": 2284,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2265,
											"end": 2294,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 2261,
											"end": 2480,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 2340,
											"end": 2350,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2353,
											"end": 2359,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2318,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2331,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2331,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 2310,
											"end": 2331,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2360,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2360,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2360,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2360,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2360,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2360,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 2310,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 2422,
											"end": 2428,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 2398,
											"end": 2421,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2429,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2429,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2429,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2398,
											"end": 2429,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2398,
											"end": 2429,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 2398,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2383,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2387,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2395,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2374,
											"end": 2395,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2429,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2429,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2429,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2429,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "PUSH",
											"source": 15,
											"value": "56CA301A9219608C91E7BCEE90E083C19671D2CDCC96752C7AF291CEE5F9C8C8"
										},
										{
											"begin": 2462,
											"end": 2468,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 2448,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 2261,
											"end": 2480,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 2261,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2068,
											"end": 2486,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2068,
											"end": 2486,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2002,
											"end": 2486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5438,
											"end": 5456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5480,
											"end": 5484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5468,
											"end": 5494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 858,
											"end": 922,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 897,
											"end": 922,
											"name": "PUSH",
											"source": 15,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 858,
											"end": 922,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 858,
											"end": 922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1645,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 897,
											"end": 922,
											"name": "PUSH",
											"source": 15,
											"value": "241ECF16D79D0F8DBFB92CBC07FE17840425976CF0667F022FE9877CAA831B08"
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 1667,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "tag",
											"source": 15,
											"value": "141"
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 1645,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1645,
											"end": 1680,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 1645,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 1637,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "tag",
											"source": 15,
											"value": "143"
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "tag",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 1637,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1721,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1738,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 1793,
											"end": 1803,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1814,
											"end": 1818,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1767,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1784,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1784,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 1759,
											"end": 1784,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 1759,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1838,
											"end": 1865,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1877,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1881,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1882,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1889,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1868,
											"end": 1889,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 1889,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1838,
											"end": 1889,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1838,
											"end": 1889,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1942,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 1923,
											"end": 1946,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1954,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1954,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1954,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1954,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1923,
											"end": 1954,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 1923,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1908,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1912,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1913,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1920,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1899,
											"end": 1920,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1899,
											"end": 1954,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1977,
											"end": 1980,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 15,
											"value": "A3AF609BF46297028CE551832669030F9EFFEF2B02606D02CBBCC40FE6B47C55"
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 1969,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "tag",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "LOG2",
											"source": 15
										},
										{
											"begin": 1627,
											"end": 1996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1627,
											"end": 1996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3543,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3526,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7670,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7790,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8074,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8195,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8195,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8186,
											"end": 8193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1287,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 1058,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1151,
											"end": 1167,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1151,
											"end": 1167,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1148,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1147,
											"end": 1167,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1222,
											"end": 1233,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1233,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1195,
											"end": 1233,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1204,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1233,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1195,
											"end": 1233,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1195,
											"end": 1233,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "176"
										},
										{
											"begin": 1187,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "tag",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "tag",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 1187,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 1169,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "tag",
											"source": 15,
											"value": "177"
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1169,
											"end": 1172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1132,
											"end": 1281,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1058,
											"end": 1287,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1058,
											"end": 1287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1549,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1482,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1455,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3932,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4115,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4214,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4022,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3970,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5646,
											"end": 5650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5631,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5727,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5752,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5731,
											"end": 5761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5697,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5243,
											"end": 5815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5173,
											"end": 5815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 2497,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2407,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 9,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 9,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 2162,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "282"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 16,
											"value": "284"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "284"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "287"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "tag",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 2717,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2707,
											"end": 2742,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2644,
											"end": 2766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "tag",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2818,
											"end": 2823,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 2872,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "tag",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2772,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3000,
											"end": 3023,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3028,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 3031,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3197,
											"end": 3219,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 3176,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3122,
											"end": 3239,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2917,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "tag",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3371,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3252,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3384,
											"end": 3444,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 3384,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3412,
											"end": 3415,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3438,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3384,
											"end": 3444,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3384,
											"end": 3444,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3384,
											"end": 3444,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3384,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3450,
											"end": 3592,
											"name": "tag",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 3450,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 3551,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 3560,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 3578,
											"end": 3583,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3560,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 3560,
											"end": 3584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3560,
											"end": 3584,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 3560,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 3551,
											"end": 3585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3585,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 3551,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3533,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 3533,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3533,
											"end": 3586,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 3533,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3520,
											"end": 3586,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3520,
											"end": 3586,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3450,
											"end": 3592,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3450,
											"end": 3592,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3450,
											"end": 3592,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3450,
											"end": 3592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3598,
											"end": 3724,
											"name": "tag",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 3598,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3648,
											"end": 3657,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 3712,
											"end": 3717,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 3681,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3718,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 3681,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3668,
											"end": 3718,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3668,
											"end": 3718,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3598,
											"end": 3724,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3598,
											"end": 3724,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3598,
											"end": 3724,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3598,
											"end": 3724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3730,
											"end": 3870,
											"name": "tag",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 3730,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 3858,
											"end": 3863,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3827,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 3827,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3827,
											"end": 3864,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 3827,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3814,
											"end": 3864,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3814,
											"end": 3864,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3730,
											"end": 3870,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3730,
											"end": 3870,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3730,
											"end": 3870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3730,
											"end": 3870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3876,
											"end": 4035,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 3876,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3977,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 4022,
											"end": 4027,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3977,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 3977,
											"end": 4028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3977,
											"end": 4028,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 3977,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3972,
											"end": 3975,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3965,
											"end": 4029,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3876,
											"end": 4035,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3876,
											"end": 4035,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3876,
											"end": 4035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4041,
											"end": 4159,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 4041,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4128,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 4146,
											"end": 4151,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4128,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 4128,
											"end": 4152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4128,
											"end": 4152,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 4128,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4123,
											"end": 4126,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4116,
											"end": 4153,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4041,
											"end": 4159,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4041,
											"end": 4159,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4041,
											"end": 4159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4165,
											"end": 4525,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 4165,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4300,
											"end": 4304,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4340,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4336,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4315,
											"end": 4341,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4315,
											"end": 4341,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4431,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 4351,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4446,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 4514,
											"end": 4516,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4512,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4490,
											"end": 4496,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4446,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 4446,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4446,
											"end": 4518,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 4446,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4165,
											"end": 4525,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4165,
											"end": 4525,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4165,
											"end": 4525,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4165,
											"end": 4525,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4165,
											"end": 4525,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4165,
											"end": 4525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4627,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 4531,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4575,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 4615,
											"end": 4620,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4597,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 4597,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4597,
											"end": 4621,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 4597,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4627,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4627,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4627,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4633,
											"end": 4755,
											"name": "tag",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 4633,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4706,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4706,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 4706,
											"end": 4730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4706,
											"end": 4730,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 4706,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4699,
											"end": 4704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4696,
											"end": 4731,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 4686,
											"end": 4749,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4749,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 4686,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4633,
											"end": 4755,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4633,
											"end": 4755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4761,
											"end": 4900,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 4761,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4807,
											"end": 4812,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4851,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4832,
											"end": 4852,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4823,
											"end": 4852,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4823,
											"end": 4852,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 4888,
											"end": 4893,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 4861,
											"end": 4894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 4894,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 4861,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4761,
											"end": 4900,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4761,
											"end": 4900,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4761,
											"end": 4900,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4761,
											"end": 4900,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4761,
											"end": 4900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4906,
											"end": 5380,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 4906,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4988,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5028,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5010,
											"end": 5017,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5006,
											"end": 5029,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5002,
											"end": 5034,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4999,
											"end": 5118,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4999,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 4999,
											"end": 5118,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5037,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 5037,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 5037,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5037,
											"end": 5116,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 5037,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4999,
											"end": 5118,
											"name": "tag",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 4999,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5157,
											"end": 5158,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 5227,
											"end": 5234,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5218,
											"end": 5224,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5207,
											"end": 5216,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5203,
											"end": 5225,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5182,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "289"
										},
										{
											"begin": 5182,
											"end": 5235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5182,
											"end": 5235,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 5182,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5172,
											"end": 5235,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5172,
											"end": 5235,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5128,
											"end": 5245,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5284,
											"end": 5286,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5310,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5346,
											"end": 5352,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5331,
											"end": 5353,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5310,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 5310,
											"end": 5363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5310,
											"end": 5363,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 5310,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5300,
											"end": 5363,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5300,
											"end": 5363,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5255,
											"end": 5373,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4906,
											"end": 5380,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4906,
											"end": 5380,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4906,
											"end": 5380,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4906,
											"end": 5380,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4906,
											"end": 5380,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4906,
											"end": 5380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5386,
											"end": 5496,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 5386,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5437,
											"end": 5444,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5466,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 5484,
											"end": 5489,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5466,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 5466,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5466,
											"end": 5490,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 5466,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5455,
											"end": 5490,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5455,
											"end": 5490,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5386,
											"end": 5496,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5386,
											"end": 5496,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5386,
											"end": 5496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5386,
											"end": 5496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5502,
											"end": 5652,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 5502,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 5621,
											"end": 5626,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 5589,
											"end": 5627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5627,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 5589,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5579,
											"end": 5628,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 5569,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 5569,
											"end": 5646,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5632,
											"end": 5644,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5569,
											"end": 5646,
											"name": "tag",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 5569,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5502,
											"end": 5652,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5502,
											"end": 5652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5658,
											"end": 5825,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 5658,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5718,
											"end": 5723,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5762,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5743,
											"end": 5763,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5734,
											"end": 5763,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5734,
											"end": 5763,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 5813,
											"end": 5818,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 5772,
											"end": 5819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 5772,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5658,
											"end": 5825,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5658,
											"end": 5825,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5658,
											"end": 5825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5658,
											"end": 5825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5658,
											"end": 5825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5831,
											"end": 6188,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 5831,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5904,
											"end": 5910,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 5955,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 5950,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5932,
											"end": 5939,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5928,
											"end": 5951,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5924,
											"end": 5956,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5959,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 5959,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 5959,
											"end": 6038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5959,
											"end": 6038,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 5959,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 5921,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6104,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 6163,
											"end": 6170,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6154,
											"end": 6160,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6143,
											"end": 6152,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6139,
											"end": 6161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6104,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 6104,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6104,
											"end": 6171,
											"name": "tag",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 6104,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6094,
											"end": 6171,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6094,
											"end": 6171,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6050,
											"end": 6181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5831,
											"end": 6188,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5831,
											"end": 6188,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5831,
											"end": 6188,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5831,
											"end": 6188,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5831,
											"end": 6188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6194,
											"end": 6416,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 6194,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6314,
											"end": 6323,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6302,
											"end": 6328,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6302,
											"end": 6328,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6338,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 6406,
											"end": 6407,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6395,
											"end": 6404,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6391,
											"end": 6408,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6338,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 6338,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6338,
											"end": 6409,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 6338,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6194,
											"end": 6416,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6194,
											"end": 6416,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6194,
											"end": 6416,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6194,
											"end": 6416,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6194,
											"end": 6416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6422,
											"end": 6896,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 6422,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6490,
											"end": 6496,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6504,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6547,
											"end": 6549,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6535,
											"end": 6544,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6526,
											"end": 6533,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6522,
											"end": 6545,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6518,
											"end": 6550,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 6553,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 6553,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6632,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 6553,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 6515,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6673,
											"end": 6674,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 6743,
											"end": 6750,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6734,
											"end": 6740,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6723,
											"end": 6732,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6719,
											"end": 6741,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6698,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 6698,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6698,
											"end": 6751,
											"name": "tag",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 6698,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6688,
											"end": 6751,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6688,
											"end": 6751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6644,
											"end": 6761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 6871,
											"end": 6878,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6851,
											"end": 6860,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6847,
											"end": 6869,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 6826,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6816,
											"end": 6879,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6816,
											"end": 6879,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6771,
											"end": 6889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6422,
											"end": 6896,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6422,
											"end": 6896,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6422,
											"end": 6896,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6422,
											"end": 6896,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6422,
											"end": 6896,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6422,
											"end": 6896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6902,
											"end": 7020,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 6902,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 6989,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 6989,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6984,
											"end": 6987,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6977,
											"end": 7014,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6902,
											"end": 7020,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6902,
											"end": 7020,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6902,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7248,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7026,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7159,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7142,
											"end": 7160,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7134,
											"end": 7160,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7134,
											"end": 7160,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7170,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 7238,
											"end": 7239,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7227,
											"end": 7236,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7223,
											"end": 7240,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7214,
											"end": 7220,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7170,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 7170,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7170,
											"end": 7241,
											"name": "tag",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 7170,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7248,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7248,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7248,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7248,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7026,
											"end": 7248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7583,
											"name": "tag",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 7254,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7364,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7350,
											"end": 7359,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7337,
											"end": 7360,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7333,
											"end": 7365,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7330,
											"end": 7449,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7330,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 7330,
											"end": 7449,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7368,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 7368,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 7368,
											"end": 7447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7368,
											"end": 7447,
											"name": "tag",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 7368,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7330,
											"end": 7449,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 7330,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7488,
											"end": 7489,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7538,
											"end": 7547,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7534,
											"end": 7556,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 7513,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7503,
											"end": 7566,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7503,
											"end": 7566,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7459,
											"end": 7576,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7583,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7583,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7589,
											"end": 7758,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 7589,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7673,
											"end": 7684,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7702,
											"end": 7705,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7695,
											"end": 7714,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7747,
											"end": 7751,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7745,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7738,
											"end": 7752,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7589,
											"end": 7758,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7589,
											"end": 7758,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7589,
											"end": 7758,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7589,
											"end": 7758,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7589,
											"end": 7758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7764,
											"end": 7998,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 7764,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7904,
											"end": 7938,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7898,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7888,
											"end": 7902,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7881,
											"end": 7939,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7973,
											"end": 7990,
											"name": "PUSH",
											"source": 16,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 7968,
											"end": 7970,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7956,
											"end": 7971,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7949,
											"end": 7991,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7764,
											"end": 7998,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7764,
											"end": 7998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8004,
											"end": 8370,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 8004,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8146,
											"end": 8149,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8167,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 8231,
											"end": 8233,
											"name": "PUSH",
											"source": 16,
											"value": "2F"
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8167,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 8167,
											"end": 8234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8167,
											"end": 8234,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 8167,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8160,
											"end": 8234,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8160,
											"end": 8234,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8243,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 8332,
											"end": 8335,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8243,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 8243,
											"end": 8336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8243,
											"end": 8336,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 8243,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8361,
											"end": 8363,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8356,
											"end": 8359,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8352,
											"end": 8364,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8345,
											"end": 8364,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8345,
											"end": 8364,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8004,
											"end": 8370,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8004,
											"end": 8370,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8004,
											"end": 8370,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8004,
											"end": 8370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8376,
											"end": 8795,
											"name": "tag",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 8376,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8542,
											"end": 8546,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8582,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8569,
											"end": 8578,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8557,
											"end": 8583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8557,
											"end": 8583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8629,
											"end": 8638,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8623,
											"end": 8627,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8639,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8604,
											"end": 8613,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8600,
											"end": 8617,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8593,
											"end": 8640,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8657,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 8783,
											"end": 8787,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8657,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 8657,
											"end": 8788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8657,
											"end": 8788,
											"name": "tag",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 8657,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8649,
											"end": 8788,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8649,
											"end": 8788,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8376,
											"end": 8795,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8376,
											"end": 8795,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8376,
											"end": 8795,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8376,
											"end": 8795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8801,
											"end": 8962,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 8801,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8941,
											"end": 8954,
											"name": "PUSH",
											"source": 16,
											"value": "4E6F7420616C6C6F776564000000000000000000000000000000000000000000"
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8929,
											"end": 8935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8925,
											"end": 8939,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8918,
											"end": 8955,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8801,
											"end": 8962,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8801,
											"end": 8962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9110,
											"end": 9113,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 9195,
											"end": 9197,
											"name": "PUSH",
											"source": 16,
											"value": "B"
										},
										{
											"begin": 9190,
											"end": 9193,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 9131,
											"end": 9198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 9131,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9124,
											"end": 9198,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9124,
											"end": 9198,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 9296,
											"end": 9299,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 9207,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 9207,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9325,
											"end": 9327,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9320,
											"end": 9323,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9316,
											"end": 9328,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9309,
											"end": 9328,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9309,
											"end": 9328,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9334,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8968,
											"end": 9334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "tag",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9542,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9529,
											"end": 9547,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9593,
											"end": 9602,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9587,
											"end": 9591,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9583,
											"end": 9603,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9577,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9564,
											"end": 9581,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9557,
											"end": 9604,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 9747,
											"end": 9751,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 9621,
											"end": 9752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 9621,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9613,
											"end": 9752,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9613,
											"end": 9752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9340,
											"end": 9759,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9340,
											"end": 9759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9945,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 9765,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9813,
											"end": 9890,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9810,
											"end": 9811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9891,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9910,
											"end": 9914,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 9907,
											"end": 9908,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9900,
											"end": 9915,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9931,
											"end": 9932,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9924,
											"end": 9939,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 10184,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 9951,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9990,
											"end": 9993,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 10031,
											"end": 10036,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10013,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 10013,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10013,
											"end": 10037,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 10013,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10004,
											"end": 10037,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10004,
											"end": 10037,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10059,
											"end": 10125,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10052,
											"end": 10057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10049,
											"end": 10126,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10046,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 10046,
											"end": 10149,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 10129,
											"end": 10147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10046,
											"end": 10149,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 10046,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10176,
											"end": 10177,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 10169,
											"end": 10174,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10165,
											"end": 10178,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10158,
											"end": 10178,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10158,
											"end": 10178,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 10184,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 10184,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 10184,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 10184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10190,
											"end": 10415,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 10190,
											"end": 10415,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10330,
											"end": 10364,
											"name": "PUSH",
											"source": 16,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10326,
											"end": 10327,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10318,
											"end": 10324,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10314,
											"end": 10328,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10307,
											"end": 10365,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10399,
											"end": 10407,
											"name": "PUSH",
											"source": 16,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10394,
											"end": 10396,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10386,
											"end": 10392,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10382,
											"end": 10397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10375,
											"end": 10408,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10190,
											"end": 10415,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10190,
											"end": 10415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10421,
											"end": 10787,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 10421,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10563,
											"end": 10566,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10584,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 10648,
											"end": 10650,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 10643,
											"end": 10646,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10584,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 10584,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10584,
											"end": 10651,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 10584,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10577,
											"end": 10651,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10577,
											"end": 10651,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10660,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 10749,
											"end": 10752,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10660,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 10660,
											"end": 10753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10660,
											"end": 10753,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 10660,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10778,
											"end": 10780,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10773,
											"end": 10776,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10769,
											"end": 10781,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10762,
											"end": 10781,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10762,
											"end": 10781,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10421,
											"end": 10787,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10421,
											"end": 10787,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10421,
											"end": 10787,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10421,
											"end": 10787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10793,
											"end": 11212,
											"name": "tag",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 10793,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10997,
											"end": 10999,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10986,
											"end": 10995,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10982,
											"end": 11000,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10974,
											"end": 11000,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10974,
											"end": 11000,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11046,
											"end": 11055,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11040,
											"end": 11044,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11036,
											"end": 11056,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11032,
											"end": 11033,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11021,
											"end": 11030,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11017,
											"end": 11034,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11010,
											"end": 11057,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11074,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 11200,
											"end": 11204,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11074,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 11074,
											"end": 11205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11074,
											"end": 11205,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 11074,
											"end": 11205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11066,
											"end": 11205,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11066,
											"end": 11205,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10793,
											"end": 11212,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10793,
											"end": 11212,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10793,
											"end": 11212,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10793,
											"end": 11212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11218,
											"end": 11400,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 11218,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11358,
											"end": 11392,
											"name": "PUSH",
											"source": 16,
											"value": "436F6C6C61746572616C204164647265737320416C7265616479204164646564"
										},
										{
											"begin": 11354,
											"end": 11355,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11346,
											"end": 11352,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11342,
											"end": 11356,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11335,
											"end": 11393,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11218,
											"end": 11400,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11218,
											"end": 11400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11548,
											"end": 11551,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11569,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 11633,
											"end": 11635,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11628,
											"end": 11631,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11569,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 11569,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11569,
											"end": 11636,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 11569,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11562,
											"end": 11636,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11562,
											"end": 11636,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11645,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 11734,
											"end": 11737,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11645,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 11645,
											"end": 11738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11645,
											"end": 11738,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 11645,
											"end": 11738,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11763,
											"end": 11765,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11758,
											"end": 11761,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11754,
											"end": 11766,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11747,
											"end": 11766,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11747,
											"end": 11766,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11406,
											"end": 11772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11944,
											"end": 11948,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11982,
											"end": 11984,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11959,
											"end": 11985,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11959,
											"end": 11985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12031,
											"end": 12040,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12025,
											"end": 12029,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12021,
											"end": 12041,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12017,
											"end": 12018,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12015,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12002,
											"end": 12019,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11995,
											"end": 12042,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12059,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 12185,
											"end": 12189,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12059,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 12059,
											"end": 12190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12059,
											"end": 12190,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 12059,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12051,
											"end": 12190,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12051,
											"end": 12190,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11778,
											"end": 12197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12203,
											"end": 12385,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 12203,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12343,
											"end": 12377,
											"name": "PUSH",
											"source": 16,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12339,
											"end": 12340,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12331,
											"end": 12337,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12327,
											"end": 12341,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12320,
											"end": 12378,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12203,
											"end": 12385,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12203,
											"end": 12385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12533,
											"end": 12536,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12554,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 12618,
											"end": 12620,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12613,
											"end": 12616,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12554,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 12554,
											"end": 12621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12554,
											"end": 12621,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 12554,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12547,
											"end": 12621,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12547,
											"end": 12621,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12630,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 12719,
											"end": 12722,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12630,
											"end": 12723,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 12630,
											"end": 12723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12630,
											"end": 12723,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 12630,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12748,
											"end": 12750,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12743,
											"end": 12746,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12739,
											"end": 12751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12732,
											"end": 12751,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12732,
											"end": 12751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12391,
											"end": 12757,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12391,
											"end": 12757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "tag",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12967,
											"end": 12969,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12952,
											"end": 12970,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13016,
											"end": 13025,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13010,
											"end": 13014,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13006,
											"end": 13026,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13002,
											"end": 13003,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12991,
											"end": 13000,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12987,
											"end": 13004,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12980,
											"end": 13027,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13044,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 13170,
											"end": 13174,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13044,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 13044,
											"end": 13175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13044,
											"end": 13175,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 13044,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13036,
											"end": 13175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13036,
											"end": 13175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12763,
											"end": 13182,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12763,
											"end": 13182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13188,
											"end": 13520,
											"name": "tag",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 13188,
											"end": 13520,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13309,
											"end": 13313,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13347,
											"end": 13349,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13336,
											"end": 13345,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13332,
											"end": 13350,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13324,
											"end": 13350,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13324,
											"end": 13350,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13360,
											"end": 13431,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 13428,
											"end": 13429,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13417,
											"end": 13426,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13413,
											"end": 13430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13404,
											"end": 13410,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13360,
											"end": 13431,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 13360,
											"end": 13431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13360,
											"end": 13431,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 13360,
											"end": 13431,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13441,
											"end": 13513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 13509,
											"end": 13511,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13498,
											"end": 13507,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13485,
											"end": 13491,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13441,
											"end": 13513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 13441,
											"end": 13513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13441,
											"end": 13513,
											"name": "tag",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 13441,
											"end": 13513,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13188,
											"end": 13520,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13188,
											"end": 13520,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13188,
											"end": 13520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13188,
											"end": 13520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13188,
											"end": 13520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13188,
											"end": 13520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13526,
											"end": 13720,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 13526,
											"end": 13720,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13566,
											"end": 13570,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13586,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 13604,
											"end": 13605,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13586,
											"end": 13606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 13586,
											"end": 13606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13586,
											"end": 13606,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 13586,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13581,
											"end": 13606,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13581,
											"end": 13606,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13620,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 13638,
											"end": 13639,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13620,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 13620,
											"end": 13640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13620,
											"end": 13640,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 13620,
											"end": 13640,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13615,
											"end": 13640,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13615,
											"end": 13640,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13664,
											"end": 13665,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13661,
											"end": 13662,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13657,
											"end": 13666,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13649,
											"end": 13666,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13649,
											"end": 13666,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13688,
											"end": 13689,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13682,
											"end": 13686,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13679,
											"end": 13690,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13676,
											"end": 13713,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13676,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 13676,
											"end": 13713,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 13693,
											"end": 13711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13676,
											"end": 13713,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 13676,
											"end": 13713,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13526,
											"end": 13720,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13526,
											"end": 13720,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13526,
											"end": 13720,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13526,
											"end": 13720,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13526,
											"end": 13720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 14168,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 13726,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13875,
											"end": 13879,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13913,
											"end": 13915,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 13902,
											"end": 13911,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13898,
											"end": 13916,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13890,
											"end": 13916,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13890,
											"end": 13916,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13926,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 13994,
											"end": 13995,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13983,
											"end": 13992,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13979,
											"end": 13996,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13970,
											"end": 13976,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13926,
											"end": 13997,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 13926,
											"end": 13997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13926,
											"end": 13997,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 13926,
											"end": 13997,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14007,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 14075,
											"end": 14077,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14064,
											"end": 14073,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14060,
											"end": 14078,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14051,
											"end": 14057,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14007,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 14007,
											"end": 14079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14007,
											"end": 14079,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 14007,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14089,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 14157,
											"end": 14159,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14155,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14133,
											"end": 14139,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14089,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 14089,
											"end": 14161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14089,
											"end": 14161,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 14089,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 14168,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 14168,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 14168,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 14168,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 14168,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 14168,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13726,
											"end": 14168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14174,
											"end": 14365,
											"name": "tag",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 14174,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14214,
											"end": 14217,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14233,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 14251,
											"end": 14252,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14233,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 14233,
											"end": 14253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14233,
											"end": 14253,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 14233,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14228,
											"end": 14253,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14228,
											"end": 14253,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14267,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 14285,
											"end": 14286,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14267,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 14267,
											"end": 14287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14267,
											"end": 14287,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 14267,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14262,
											"end": 14287,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14262,
											"end": 14287,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14310,
											"end": 14311,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14307,
											"end": 14308,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14303,
											"end": 14312,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14296,
											"end": 14312,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14296,
											"end": 14312,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14331,
											"end": 14334,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14328,
											"end": 14329,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14325,
											"end": 14335,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 14322,
											"end": 14358,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14322,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 14322,
											"end": 14358,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 14338,
											"end": 14356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 14338,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14322,
											"end": 14358,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 14322,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14174,
											"end": 14365,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14174,
											"end": 14365,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14174,
											"end": 14365,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14174,
											"end": 14365,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14174,
											"end": 14365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14371,
											"end": 14519,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 14371,
											"end": 14519,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14473,
											"end": 14484,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14510,
											"end": 14513,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14495,
											"end": 14513,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14495,
											"end": 14513,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14371,
											"end": 14519,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14371,
											"end": 14519,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14371,
											"end": 14519,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14371,
											"end": 14519,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14371,
											"end": 14519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14525,
											"end": 14698,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 14525,
											"end": 14698,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14665,
											"end": 14690,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 14661,
											"end": 14662,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14653,
											"end": 14659,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14649,
											"end": 14663,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14642,
											"end": 14691,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14525,
											"end": 14698,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14525,
											"end": 14698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14704,
											"end": 15106,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 14704,
											"end": 15106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14864,
											"end": 14867,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 14967,
											"end": 14969,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 14962,
											"end": 14965,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14885,
											"end": 14970,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 14885,
											"end": 14970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14885,
											"end": 14970,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 14885,
											"end": 14970,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14878,
											"end": 14970,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14878,
											"end": 14970,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14979,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 15068,
											"end": 15071,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14979,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 14979,
											"end": 15072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14979,
											"end": 15072,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 14979,
											"end": 15072,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15097,
											"end": 15099,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 15092,
											"end": 15095,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15088,
											"end": 15100,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15081,
											"end": 15100,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15081,
											"end": 15100,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14704,
											"end": 15106,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14704,
											"end": 15106,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14704,
											"end": 15106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14704,
											"end": 15106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15112,
											"end": 15211,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 15112,
											"end": 15211,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15164,
											"end": 15170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15198,
											"end": 15203,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15192,
											"end": 15204,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 15182,
											"end": 15204,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15182,
											"end": 15204,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15112,
											"end": 15211,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15112,
											"end": 15211,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15112,
											"end": 15211,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15112,
											"end": 15211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15463,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 15217,
											"end": 15463,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15298,
											"end": 15299,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15322,
											"end": 15328,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15319,
											"end": 15320,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15316,
											"end": 15329,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15407,
											"end": 15408,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15402,
											"end": 15405,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15398,
											"end": 15409,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15392,
											"end": 15410,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 15388,
											"end": 15389,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15383,
											"end": 15386,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15379,
											"end": 15390,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15372,
											"end": 15411,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15344,
											"end": 15346,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15341,
											"end": 15342,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15337,
											"end": 15347,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15332,
											"end": 15347,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15332,
											"end": 15347,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 15308,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15455,
											"end": 15456,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15446,
											"end": 15452,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15441,
											"end": 15444,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15437,
											"end": 15453,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15430,
											"end": 15457,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15279,
											"end": 15463,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15463,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15463,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15463,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15217,
											"end": 15463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15469,
											"end": 15859,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 15469,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15575,
											"end": 15578,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 15636,
											"end": 15641,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15603,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 15603,
											"end": 15642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15603,
											"end": 15642,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 15603,
											"end": 15642,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15658,
											"end": 15747,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 15740,
											"end": 15746,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15735,
											"end": 15738,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15658,
											"end": 15747,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 15658,
											"end": 15747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15658,
											"end": 15747,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 15658,
											"end": 15747,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15651,
											"end": 15747,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 15651,
											"end": 15747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15756,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 15814,
											"end": 15820,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15809,
											"end": 15812,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15802,
											"end": 15806,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15795,
											"end": 15800,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15791,
											"end": 15807,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15756,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 15756,
											"end": 15821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15756,
											"end": 15821,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 15756,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15846,
											"end": 15852,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15841,
											"end": 15844,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15837,
											"end": 15853,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15830,
											"end": 15853,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15830,
											"end": 15853,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15579,
											"end": 15859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15469,
											"end": 15859,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15469,
											"end": 15859,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15469,
											"end": 15859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15469,
											"end": 15859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15469,
											"end": 15859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 16032,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 15865,
											"end": 16032,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16005,
											"end": 16024,
											"name": "PUSH",
											"source": 16,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 16001,
											"end": 16002,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15993,
											"end": 15999,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15989,
											"end": 16003,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15982,
											"end": 16025,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 16032,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 16032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16038,
											"end": 16440,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 16038,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16219,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 16301,
											"end": 16303,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 16296,
											"end": 16299,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16219,
											"end": 16304,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 16219,
											"end": 16304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16219,
											"end": 16304,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 16219,
											"end": 16304,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16212,
											"end": 16304,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16212,
											"end": 16304,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16313,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 16402,
											"end": 16405,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16313,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 16313,
											"end": 16406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16313,
											"end": 16406,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 16313,
											"end": 16406,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16431,
											"end": 16433,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 16426,
											"end": 16429,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16422,
											"end": 16434,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16415,
											"end": 16434,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16415,
											"end": 16434,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16038,
											"end": 16440,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16038,
											"end": 16440,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16038,
											"end": 16440,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16038,
											"end": 16440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16446,
											"end": 17413,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 16446,
											"end": 17413,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16828,
											"end": 16831,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16850,
											"end": 16998,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 16994,
											"end": 16997,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16850,
											"end": 16998,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 16850,
											"end": 16998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16850,
											"end": 16998,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 16850,
											"end": 16998,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16843,
											"end": 16998,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16843,
											"end": 16998,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 17106,
											"end": 17109,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17097,
											"end": 17103,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 17015,
											"end": 17110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17015,
											"end": 17110,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 17015,
											"end": 17110,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17008,
											"end": 17110,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17008,
											"end": 17110,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 17271,
											"end": 17274,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 17127,
											"end": 17275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 17127,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17120,
											"end": 17275,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17120,
											"end": 17275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17292,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 17383,
											"end": 17386,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17374,
											"end": 17380,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17292,
											"end": 17387,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 17292,
											"end": 17387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17292,
											"end": 17387,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 17292,
											"end": 17387,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17285,
											"end": 17387,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17285,
											"end": 17387,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17404,
											"end": 17407,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17397,
											"end": 17407,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17397,
											"end": 17407,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16446,
											"end": 17413,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16446,
											"end": 17413,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16446,
											"end": 17413,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16446,
											"end": 17413,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16446,
											"end": 17413,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16446,
											"end": 17413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17419,
											"end": 17521,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 17419,
											"end": 17521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17460,
											"end": 17466,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17511,
											"end": 17513,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 17507,
											"end": 17514,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 17502,
											"end": 17504,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 17495,
											"end": 17500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17491,
											"end": 17505,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17487,
											"end": 17515,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 17477,
											"end": 17515,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17477,
											"end": 17515,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17419,
											"end": 17521,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17419,
											"end": 17521,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17419,
											"end": 17521,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17419,
											"end": 17521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17904,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 17527,
											"end": 17904,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17615,
											"end": 17618,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17643,
											"end": 17682,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 17676,
											"end": 17681,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17643,
											"end": 17682,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 17643,
											"end": 17682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17643,
											"end": 17682,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 17643,
											"end": 17682,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17698,
											"end": 17769,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 17762,
											"end": 17768,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17757,
											"end": 17760,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17698,
											"end": 17769,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 17698,
											"end": 17769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17698,
											"end": 17769,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 17698,
											"end": 17769,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17691,
											"end": 17769,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 17691,
											"end": 17769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17778,
											"end": 17843,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 17836,
											"end": 17842,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17831,
											"end": 17834,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17824,
											"end": 17828,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17817,
											"end": 17822,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 17813,
											"end": 17829,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17778,
											"end": 17843,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 17778,
											"end": 17843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17778,
											"end": 17843,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 17778,
											"end": 17843,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17868,
											"end": 17897,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 17890,
											"end": 17896,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17868,
											"end": 17897,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 17868,
											"end": 17897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17868,
											"end": 17897,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 17868,
											"end": 17897,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17863,
											"end": 17866,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17859,
											"end": 17898,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17852,
											"end": 17898,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17852,
											"end": 17898,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17619,
											"end": 17904,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17904,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17904,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17904,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17904,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17527,
											"end": 17904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17910,
											"end": 18223,
											"name": "tag",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 17910,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18023,
											"end": 18027,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18061,
											"end": 18063,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18050,
											"end": 18059,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18046,
											"end": 18064,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18064,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18064,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18110,
											"end": 18119,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18104,
											"end": 18108,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18100,
											"end": 18120,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 18096,
											"end": 18097,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18085,
											"end": 18094,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18081,
											"end": 18098,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18074,
											"end": 18121,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 18138,
											"end": 18216,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 18211,
											"end": 18215,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18202,
											"end": 18208,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18138,
											"end": 18216,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 18138,
											"end": 18216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18138,
											"end": 18216,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 18138,
											"end": 18216,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18130,
											"end": 18216,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18130,
											"end": 18216,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17910,
											"end": 18223,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17910,
											"end": 18223,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17910,
											"end": 18223,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17910,
											"end": 18223,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17910,
											"end": 18223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18345,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 18229,
											"end": 18345,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 18314,
											"end": 18319,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 18299,
											"end": 18320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 18299,
											"end": 18320,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18292,
											"end": 18297,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18289,
											"end": 18321,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18279,
											"end": 18339,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 18279,
											"end": 18339,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18335,
											"end": 18336,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18332,
											"end": 18333,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18325,
											"end": 18337,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 18279,
											"end": 18339,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 18279,
											"end": 18339,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18345,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18229,
											"end": 18345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18351,
											"end": 18488,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 18351,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18405,
											"end": 18410,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18436,
											"end": 18442,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18430,
											"end": 18443,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 18421,
											"end": 18443,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18421,
											"end": 18443,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18452,
											"end": 18482,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 18476,
											"end": 18481,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18452,
											"end": 18482,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 18452,
											"end": 18482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18452,
											"end": 18482,
											"name": "tag",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 18452,
											"end": 18482,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18351,
											"end": 18488,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18351,
											"end": 18488,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18351,
											"end": 18488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18351,
											"end": 18488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18351,
											"end": 18488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18839,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 18494,
											"end": 18839,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18561,
											"end": 18567,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18610,
											"end": 18612,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18598,
											"end": 18607,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18589,
											"end": 18596,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18585,
											"end": 18608,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 18581,
											"end": 18613,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 18578,
											"end": 18697,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18578,
											"end": 18697,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 18578,
											"end": 18697,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18616,
											"end": 18695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 18616,
											"end": 18695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "280"
										},
										{
											"begin": 18616,
											"end": 18695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18616,
											"end": 18695,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 18616,
											"end": 18695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18578,
											"end": 18697,
											"name": "tag",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 18578,
											"end": 18697,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18736,
											"end": 18737,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18761,
											"end": 18822,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 18814,
											"end": 18821,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18805,
											"end": 18811,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 18803,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18790,
											"end": 18812,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18761,
											"end": 18822,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 18761,
											"end": 18822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18761,
											"end": 18822,
											"name": "tag",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 18761,
											"end": 18822,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18751,
											"end": 18822,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18751,
											"end": 18822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18707,
											"end": 18832,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18839,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18839,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18839,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18839,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18845,
											"end": 19074,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 18845,
											"end": 19074,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18985,
											"end": 19019,
											"name": "PUSH",
											"source": 16,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 18981,
											"end": 18982,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18973,
											"end": 18979,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18969,
											"end": 18983,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18962,
											"end": 19020,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19054,
											"end": 19066,
											"name": "PUSH",
											"source": 16,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 19049,
											"end": 19051,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19041,
											"end": 19047,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19037,
											"end": 19052,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19030,
											"end": 19067,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 18845,
											"end": 19074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18845,
											"end": 19074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19080,
											"end": 19446,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 19080,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19222,
											"end": 19225,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19243,
											"end": 19310,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 19307,
											"end": 19309,
											"name": "PUSH",
											"source": 16,
											"value": "2A"
										},
										{
											"begin": 19302,
											"end": 19305,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19243,
											"end": 19310,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 19243,
											"end": 19310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19243,
											"end": 19310,
											"name": "tag",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 19243,
											"end": 19310,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19236,
											"end": 19310,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19236,
											"end": 19310,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19319,
											"end": 19412,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 19408,
											"end": 19411,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19319,
											"end": 19412,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 19319,
											"end": 19412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19319,
											"end": 19412,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 19319,
											"end": 19412,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19437,
											"end": 19439,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 19432,
											"end": 19435,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19428,
											"end": 19440,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19421,
											"end": 19440,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19421,
											"end": 19440,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19080,
											"end": 19446,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19080,
											"end": 19446,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19080,
											"end": 19446,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19080,
											"end": 19446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19452,
											"end": 19871,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 19452,
											"end": 19871,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19618,
											"end": 19622,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19656,
											"end": 19658,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19645,
											"end": 19654,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19641,
											"end": 19659,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19633,
											"end": 19659,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19633,
											"end": 19659,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19705,
											"end": 19714,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19699,
											"end": 19703,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19695,
											"end": 19715,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 19691,
											"end": 19692,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19680,
											"end": 19689,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19676,
											"end": 19693,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19669,
											"end": 19716,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19733,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 19859,
											"end": 19863,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19733,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 19733,
											"end": 19864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19733,
											"end": 19864,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 19733,
											"end": 19864,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19725,
											"end": 19864,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19725,
											"end": 19864,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19452,
											"end": 19871,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19452,
											"end": 19871,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19452,
											"end": 19871,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19452,
											"end": 19871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19877,
											"end": 20287,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 19877,
											"end": 20287,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19917,
											"end": 19924,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19940,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 19958,
											"end": 19959,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19940,
											"end": 19960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 19940,
											"end": 19960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19940,
											"end": 19960,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 19940,
											"end": 19960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19935,
											"end": 19960,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19935,
											"end": 19960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19974,
											"end": 19994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 19992,
											"end": 19993,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19974,
											"end": 19994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 19974,
											"end": 19994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19974,
											"end": 19994,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 19974,
											"end": 19994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19969,
											"end": 19994,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19969,
											"end": 19994,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20029,
											"end": 20030,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20026,
											"end": 20027,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20022,
											"end": 20031,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 20051,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 20069,
											"end": 20080,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20051,
											"end": 20081,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 20051,
											"end": 20081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20051,
											"end": 20081,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 20051,
											"end": 20081,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20040,
											"end": 20081,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20040,
											"end": 20081,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20230,
											"end": 20231,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20221,
											"end": 20228,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20217,
											"end": 20232,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 20214,
											"end": 20215,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20211,
											"end": 20233,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 20191,
											"end": 20192,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20184,
											"end": 20193,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20164,
											"end": 20247,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 20141,
											"end": 20280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 20141,
											"end": 20280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20260,
											"end": 20278,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 20260,
											"end": 20278,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 20260,
											"end": 20278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20260,
											"end": 20278,
											"name": "tag",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 20260,
											"end": 20278,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20141,
											"end": 20280,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 20141,
											"end": 20280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19925,
											"end": 20287,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19877,
											"end": 20287,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19877,
											"end": 20287,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19877,
											"end": 20287,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19877,
											"end": 20287,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19877,
											"end": 20287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20293,
											"end": 20473,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 20293,
											"end": 20473,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20341,
											"end": 20418,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20338,
											"end": 20339,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20331,
											"end": 20419,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20438,
											"end": 20442,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 20435,
											"end": 20436,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 20428,
											"end": 20443,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20462,
											"end": 20466,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 20459,
											"end": 20460,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20452,
											"end": 20467,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 20479,
											"end": 20659,
											"name": "tag",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 20479,
											"end": 20659,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20527,
											"end": 20604,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20524,
											"end": 20525,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20517,
											"end": 20605,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20624,
											"end": 20628,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 20621,
											"end": 20622,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 20614,
											"end": 20629,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20648,
											"end": 20652,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 20645,
											"end": 20646,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20638,
											"end": 20653,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 20665,
											"end": 20836,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 20665,
											"end": 20836,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20704,
											"end": 20707,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20727,
											"end": 20751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 20745,
											"end": 20750,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20727,
											"end": 20751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 20727,
											"end": 20751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20727,
											"end": 20751,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 20727,
											"end": 20751,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20718,
											"end": 20751,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20718,
											"end": 20751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20773,
											"end": 20777,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20766,
											"end": 20771,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20763,
											"end": 20778,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20760,
											"end": 20801,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 20760,
											"end": 20801,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20781,
											"end": 20799,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 20781,
											"end": 20799,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 20781,
											"end": 20799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20781,
											"end": 20799,
											"name": "tag",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 20781,
											"end": 20799,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20760,
											"end": 20801,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 20760,
											"end": 20801,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20828,
											"end": 20829,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 20821,
											"end": 20826,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20817,
											"end": 20830,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20810,
											"end": 20830,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20810,
											"end": 20830,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20665,
											"end": 20836,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20665,
											"end": 20836,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20665,
											"end": 20836,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20665,
											"end": 20836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20842,
											"end": 21024,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 20842,
											"end": 21024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20982,
											"end": 21016,
											"name": "PUSH",
											"source": 16,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 20978,
											"end": 20979,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20970,
											"end": 20976,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20966,
											"end": 20980,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20959,
											"end": 21017,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20842,
											"end": 21024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20842,
											"end": 21024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21030,
											"end": 21396,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 21030,
											"end": 21396,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21172,
											"end": 21175,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21193,
											"end": 21260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 21257,
											"end": 21259,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21252,
											"end": 21255,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21193,
											"end": 21260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 21193,
											"end": 21260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21193,
											"end": 21260,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 21193,
											"end": 21260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21186,
											"end": 21260,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21186,
											"end": 21260,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21269,
											"end": 21362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 21358,
											"end": 21361,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21269,
											"end": 21362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 21269,
											"end": 21362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21269,
											"end": 21362,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 21269,
											"end": 21362,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21387,
											"end": 21389,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21382,
											"end": 21385,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21378,
											"end": 21390,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21371,
											"end": 21390,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21371,
											"end": 21390,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21030,
											"end": 21396,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21030,
											"end": 21396,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21030,
											"end": 21396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21030,
											"end": 21396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21402,
											"end": 21821,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 21402,
											"end": 21821,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21568,
											"end": 21572,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21606,
											"end": 21608,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21595,
											"end": 21604,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21591,
											"end": 21609,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21583,
											"end": 21609,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21583,
											"end": 21609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21655,
											"end": 21664,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21649,
											"end": 21653,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21645,
											"end": 21665,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 21641,
											"end": 21642,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21630,
											"end": 21639,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21626,
											"end": 21643,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21619,
											"end": 21666,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21683,
											"end": 21814,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 21809,
											"end": 21813,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21683,
											"end": 21814,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 21683,
											"end": 21814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21683,
											"end": 21814,
											"name": "tag",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 21683,
											"end": 21814,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21675,
											"end": 21814,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21675,
											"end": 21814,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21402,
											"end": 21821,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21402,
											"end": 21821,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21402,
											"end": 21821,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21402,
											"end": 21821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21827,
											"end": 22052,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 21827,
											"end": 22052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21967,
											"end": 22001,
											"name": "PUSH",
											"source": 16,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 21963,
											"end": 21964,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21955,
											"end": 21961,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21951,
											"end": 21965,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21944,
											"end": 22002,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22036,
											"end": 22044,
											"name": "PUSH",
											"source": 16,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22031,
											"end": 22033,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22023,
											"end": 22029,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22019,
											"end": 22034,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22012,
											"end": 22045,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21827,
											"end": 22052,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21827,
											"end": 22052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22058,
											"end": 22424,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 22058,
											"end": 22424,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22200,
											"end": 22203,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22221,
											"end": 22288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 22285,
											"end": 22287,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 22280,
											"end": 22283,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22221,
											"end": 22288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 22221,
											"end": 22288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22221,
											"end": 22288,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 22221,
											"end": 22288,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22214,
											"end": 22288,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22214,
											"end": 22288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22297,
											"end": 22390,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 22386,
											"end": 22389,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22297,
											"end": 22390,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 22297,
											"end": 22390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22297,
											"end": 22390,
											"name": "tag",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 22297,
											"end": 22390,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22415,
											"end": 22417,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 22410,
											"end": 22413,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22406,
											"end": 22418,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22399,
											"end": 22418,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22399,
											"end": 22418,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22058,
											"end": 22424,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22058,
											"end": 22424,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22058,
											"end": 22424,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22058,
											"end": 22424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22430,
											"end": 22849,
											"name": "tag",
											"source": 16,
											"value": "255"
										},
										{
											"begin": 22430,
											"end": 22849,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22596,
											"end": 22600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22634,
											"end": 22636,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22623,
											"end": 22632,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22619,
											"end": 22637,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22611,
											"end": 22637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22611,
											"end": 22637,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22683,
											"end": 22692,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22677,
											"end": 22681,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22673,
											"end": 22693,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 22669,
											"end": 22670,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22658,
											"end": 22667,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22654,
											"end": 22671,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22647,
											"end": 22694,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22711,
											"end": 22842,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 22837,
											"end": 22841,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22711,
											"end": 22842,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 22711,
											"end": 22842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22711,
											"end": 22842,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 22711,
											"end": 22842,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22703,
											"end": 22842,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22703,
											"end": 22842,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22430,
											"end": 22849,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22430,
											"end": 22849,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22430,
											"end": 22849,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22430,
											"end": 22849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22855,
											"end": 22953,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 22855,
											"end": 22953,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22906,
											"end": 22912,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22940,
											"end": 22945,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22934,
											"end": 22946,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 22924,
											"end": 22946,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22924,
											"end": 22946,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22855,
											"end": 22953,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22855,
											"end": 22953,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22855,
											"end": 22953,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22855,
											"end": 22953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22959,
											"end": 23106,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 22959,
											"end": 23106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23060,
											"end": 23071,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23097,
											"end": 23100,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23082,
											"end": 23100,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23082,
											"end": 23100,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22959,
											"end": 23106,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22959,
											"end": 23106,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22959,
											"end": 23106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22959,
											"end": 23106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22959,
											"end": 23106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23112,
											"end": 23498,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 23112,
											"end": 23498,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23216,
											"end": 23219,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23244,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 23276,
											"end": 23281,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23244,
											"end": 23282,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 23244,
											"end": 23282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23244,
											"end": 23282,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 23244,
											"end": 23282,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23298,
											"end": 23386,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 23379,
											"end": 23385,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23374,
											"end": 23377,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 23298,
											"end": 23386,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 23298,
											"end": 23386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23298,
											"end": 23386,
											"name": "tag",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 23298,
											"end": 23386,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23291,
											"end": 23386,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 23291,
											"end": 23386,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23395,
											"end": 23460,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 23453,
											"end": 23459,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23448,
											"end": 23451,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 23441,
											"end": 23445,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 23434,
											"end": 23439,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 23430,
											"end": 23446,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23395,
											"end": 23460,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 23395,
											"end": 23460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23395,
											"end": 23460,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 23395,
											"end": 23460,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23485,
											"end": 23491,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 23480,
											"end": 23483,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 23476,
											"end": 23492,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23469,
											"end": 23492,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23469,
											"end": 23492,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23220,
											"end": 23498,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23112,
											"end": 23498,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 23112,
											"end": 23498,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23112,
											"end": 23498,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23112,
											"end": 23498,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23112,
											"end": 23498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23504,
											"end": 23775,
											"name": "tag",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 23504,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23634,
											"end": 23637,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23656,
											"end": 23749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 23745,
											"end": 23748,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23736,
											"end": 23742,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 23656,
											"end": 23749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 23656,
											"end": 23749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23656,
											"end": 23749,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 23656,
											"end": 23749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23649,
											"end": 23749,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23649,
											"end": 23749,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23766,
											"end": 23769,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23759,
											"end": 23769,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23759,
											"end": 23769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23504,
											"end": 23775,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 23504,
											"end": 23775,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23504,
											"end": 23775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23504,
											"end": 23775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23504,
											"end": 23775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23781,
											"end": 23960,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 23781,
											"end": 23960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23921,
											"end": 23952,
											"name": "PUSH",
											"source": 16,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 23917,
											"end": 23918,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23909,
											"end": 23915,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23905,
											"end": 23919,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23898,
											"end": 23953,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 23781,
											"end": 23960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23781,
											"end": 23960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23966,
											"end": 24332,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 23966,
											"end": 24332,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24108,
											"end": 24111,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24129,
											"end": 24196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 24193,
											"end": 24195,
											"name": "PUSH",
											"source": 16,
											"value": "1D"
										},
										{
											"begin": 24188,
											"end": 24191,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 24129,
											"end": 24196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 24129,
											"end": 24196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24129,
											"end": 24196,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 24129,
											"end": 24196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24122,
											"end": 24196,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 24122,
											"end": 24196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24205,
											"end": 24298,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 24294,
											"end": 24297,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24205,
											"end": 24298,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 24205,
											"end": 24298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24205,
											"end": 24298,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 24205,
											"end": 24298,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24323,
											"end": 24325,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 24318,
											"end": 24321,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24314,
											"end": 24326,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24307,
											"end": 24326,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24307,
											"end": 24326,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23966,
											"end": 24332,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23966,
											"end": 24332,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23966,
											"end": 24332,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23966,
											"end": 24332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24504,
											"end": 24508,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24542,
											"end": 24544,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 24531,
											"end": 24540,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24527,
											"end": 24545,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24519,
											"end": 24545,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24519,
											"end": 24545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24591,
											"end": 24600,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24585,
											"end": 24589,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24581,
											"end": 24601,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 24577,
											"end": 24578,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24566,
											"end": 24575,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 24562,
											"end": 24579,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24555,
											"end": 24602,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 24745,
											"end": 24749,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 24619,
											"end": 24750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 24619,
											"end": 24750,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24611,
											"end": 24750,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24611,
											"end": 24750,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24338,
											"end": 24757,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24338,
											"end": 24757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"tests/Reserves-collateral.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MANAGER_ROLE()": "ec87621c",
							"_rsvVault(uint256)": "279ba28d",
							"addReserveVault(address)": "3b61f098",
							"currentReserveId()": "5306f102",
							"depositCollateral(uint256,uint256)": "ece13732",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"withdrawCollateral(uint256,uint256)": "767a7b05"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_rsvVault\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_collateral\",\"type\":\"address\"}],\"name\":\"addReserveVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentReserveId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/Reserves-collateral.sol\":\"ESPEEReserves\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"tests/Reserves-collateral.sol\":{\"keccak256\":\"0x038bdde0263d9d23c838d810d33a56eec1c0c8f73de593770e081f5540186b61\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://db07bae86d2555925986fe640a3adacc2d75760d586bbbbd27f4e2569d2e0200\",\"dweb:/ipfs/QmcWg9ArEaCbahEJxrUmJdDXCXX55vALZSg8J1SEzQhAXv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 396,
								"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 512,
								"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
								"label": "_roles",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 2979,
								"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
								"label": "currentReserveId",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2990,
								"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
								"label": "_rsvVault",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(ReserveVault)2985_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)644": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_mapping(t_uint256,t_struct(ReserveVault)2985_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ESPEEReserves.ReserveVault)",
								"numberOfBytes": "32",
								"value": "t_struct(ReserveVault)2985_storage"
							},
							"t_struct(ReserveVault)2985_storage": {
								"encoding": "inplace",
								"label": "struct ESPEEReserves.ReserveVault",
								"members": [
									{
										"astId": 2982,
										"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
										"label": "collateral",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)644"
									},
									{
										"astId": 2984,
										"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "tests/Reserves-collateral.sol:ESPEEReserves",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							1408
						],
						"ERC165": [
							1661
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1673
						],
						"Math": [
							2539
						],
						"SignedMath": [
							2956
						],
						"Strings": [
							1637
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1409,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1638,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1662,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1967:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1408,
										"src": "1967:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1967:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1976:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1976:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1976:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1992:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1661,
										"src": "1992:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1992:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								1661,
								1673,
								388,
								1408
							],
							"name": "AccessControl",
							"nameLocation": "1950:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2056:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2031:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2031:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2081:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2073:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2073:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2012:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "2005:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2140:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2103:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2103:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"2122:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "2122:8:0"
											},
											"referencedDeclaration": 19,
											"src": "2122:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2177:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2153:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2198:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2621:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2631:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2631:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2657:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2209:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2598:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:0"
									},
									"src": "2589:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1660
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2823:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2840:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2860:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2855:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2876:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2855:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2840:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2915:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2891:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2897:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1660,
															"src": "2891:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2891:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2840:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2833:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2671:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2741:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2799:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2766:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2759:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2759:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2817:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2817:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:6:0"
									},
									"scope": 315,
									"src": "2732:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "3113:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3137:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3130:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3143:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3130:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3130:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "3123:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2940:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3030:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3089:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:6:0"
									},
									"scope": 315,
									"src": "3021:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3516:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "3543:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3543:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3526:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3526:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3172:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3469:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3488:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3480:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:0:0"
									},
									"scope": 315,
									"src": "3460:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3917:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3931:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3940:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3932:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3927:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3956:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4064:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4135:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1637,
																								"src": "4115:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1637_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4123:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1611,
																							"src": "4115:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4115:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4169:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4242:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4234:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4234:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4234:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4249:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1637,
																								"src": "4214:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1637_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4222:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1591,
																							"src": "4214:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4214:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4022:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4026:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4022:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4022:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3994:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3994:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3994:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3970:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3970:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3970:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3569:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3853:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3872:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3864:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:0:0"
									},
									"scope": 315,
									"src": "3844:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4587:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4611:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4604:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4617:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4604:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4597:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4329:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4513:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:0"
									},
									"scope": 315,
									"src": "4504:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5032:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5053:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "5042:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "5042:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4639:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5012:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5012:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"5003:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5003:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5003:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4994:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4956:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4948:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4947:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5032:0:0"
									},
									"scope": 315,
									"src": "4929:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5458:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5468:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5468:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5080:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5438:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5438:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5429:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5429:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5429:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5363:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5420:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5382:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5374:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:0"
									},
									"scope": 315,
									"src": "5354:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6115:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "6144:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6144:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6133:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6158:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "6125:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6219:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6219:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5507:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6047:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6106:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6060:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6082:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6074:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6115:0:0"
									},
									"scope": 315,
									"src": "6038:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "7005:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "7026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "7032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "7015:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7015:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "7015:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6258:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6946:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6965:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6957:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6956:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7005:0:0"
									},
									"scope": 315,
									"src": "6937:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7245:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7263:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7255:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7283:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7255:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7311:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7318:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7311:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7324:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7311:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7336:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7311:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7311:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7383:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7402:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7360:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7355:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "7053:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7181:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7217:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7209:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7194:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7245:0:0"
									},
									"scope": 315,
									"src": "7172:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7655:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7669:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7678:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7670:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7665:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7694:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7708:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7715:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7708:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7721:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7708:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7729:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7708:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7740:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7708:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7708:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7775:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7781:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1398,
																			"src": "7790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7763:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7758:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7425:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7596:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7606:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:0"
									},
									"scope": 315,
									"src": "7587:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "8060:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "8082:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "8088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "8074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8074:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "8070:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "8098:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "8112:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "8119:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8112:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8125:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "8112:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8112:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8112:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "8112:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8180:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1398,
																			"src": "8195:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8195:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8168:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8168:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8163:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7826:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8000:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8012:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:0"
									},
									"scope": 315,
									"src": "7991:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1932:6295:0",
							"usedErrors": []
						}
					],
					"src": "108:8120:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1408
						],
						"Ownable": [
							501
						]
					},
					"id": 502,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 502,
							"sourceUnit": 1409,
							"src": "127:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 393,
										"name": "Context",
										"nameLocations": [
											"683:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1408,
										"src": "683:7:2"
									},
									"id": 394,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 501,
							"linearizedBaseContracts": [
								501,
								1408
							],
							"name": "Ownable",
							"nameLocation": "672:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 396,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 501,
									"src": "697:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 395,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 402,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "753:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "784:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:2"
									},
									"src": "726:84:2"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "926:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 407,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "955:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 406,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "936:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "936:32:2"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 412,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:2"
									},
									"scope": 501,
									"src": "912:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1084:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 415,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "1094:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:2"
											},
											{
												"id": 418,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:2"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 420,
									"name": "onlyOwner",
									"nameLocation": "1072:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:2"
									},
									"src": "1063:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1256:30:2",
										"statements": [
											{
												"expression": {
													"id": 426,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "1273:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 425,
												"id": 427,
												"nodeType": "Return",
												"src": "1266:13:2"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "1247:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:2"
									},
									"scope": 501,
									"src": "1201:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "1404:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 434,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1422:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 436,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "1433:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:2"
									},
									"scope": 501,
									"src": "1359:130:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1878:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 449,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "1888:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:2"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 446,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 420,
												"src": "1868:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:2"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:2"
									},
									"scope": 501,
									"src": "1824:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2144:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 466,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2162:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 467,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2256:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 475,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2237:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:2"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 463,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 462,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 420,
												"src": "2134:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2101:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:2"
									},
									"scope": 501,
									"src": "2074:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2489:124:2",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "2499:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 486,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"id": 488,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "2518:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:2"
											},
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "2534:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "2543:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 495,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "2587:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2597:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 494,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "2566:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "2561:45:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2454:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:2"
									},
									"scope": 501,
									"src": "2426:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 502,
							"src": "654:1961:2",
							"usedErrors": []
						}
					],
					"src": "102:2514:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							566
						]
					},
					"id": 567,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 503,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 504,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 566,
							"linearizedBaseContracts": [
								566
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 507,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 566,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 505,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 506,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 510,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 566,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 508,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 509,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 512,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 566,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 511,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 516,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 520,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 566,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 526,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 527,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 531,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 536,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 542,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 566,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 549,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 550,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 566,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 560,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 561,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 559,
												"id": 563,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 566,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 567,
							"src": "888:2238:3",
							"usedErrors": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 568,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 569,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 578,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 587,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 644,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 644,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 644,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 644,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 644,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2668:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2682:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2694:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2728:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:4"
									},
									"scope": 644,
									"src": "2646:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 645,
							"src": "202:2534:4",
							"usedErrors": []
						}
					],
					"src": "106:2631:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							680
						]
					},
					"id": 681,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 647,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 680,
							"linearizedBaseContracts": [
								680
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1480:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1503:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1528:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1551:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1577:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 657,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1594:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 659,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1613:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 661,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:5"
									},
									"scope": 680,
									"src": "1455:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "1959:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:5"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "1997:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:5"
									},
									"scope": 680,
									"src": "1943:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:5"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "2249:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 676,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:5"
									},
									"scope": 680,
									"src": "2198:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 681,
							"src": "629:1631:5",
							"usedErrors": []
						}
					],
					"src": "123:2138:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1386
						],
						"IERC20": [
							644
						],
						"IERC20Permit": [
							680
						],
						"SafeERC20": [
							1056
						]
					},
					"id": 1057,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 682,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 683,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1057,
							"sourceUnit": 645,
							"src": "140:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 684,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1057,
							"sourceUnit": 681,
							"src": "164:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 685,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1057,
							"sourceUnit": 1387,
							"src": "205:36:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 686,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1056,
							"linearizedBaseContracts": [
								1056
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 689,
									"libraryName": {
										"id": 687,
										"name": "Address",
										"nameLocations": [
											"731:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1386,
										"src": "731:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:6",
									"typeName": {
										"id": 688,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "1013:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 701,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "1043:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 704,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "1073:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$644",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:6",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 611,
																		"src": "1073:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 707,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "1098:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "1102:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 702,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 700,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "1023:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:6"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "963:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 692,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 691,
														"name": "IERC20",
														"nameLocations": [
															"963:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "963:6:6"
													},
													"referencedDeclaration": 644,
													"src": "963:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "977:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:6"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:6"
									},
									"scope": 1056,
									"src": "941:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "1445:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "1475:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 730,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "1505:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$644",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:6",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 643,
																		"src": "1505:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 733,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "1534:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 734,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "1540:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 735,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "1544:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 728,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 726,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "1455:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:6"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1381:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 716,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 715,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "1381:6:6"
													},
													"referencedDeclaration": 644,
													"src": "1381:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1395:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1409:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1421:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:6"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:6"
									},
									"scope": 1056,
									"src": "1355:203:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "1894:497:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 752,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "2143:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 755,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 760,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1056",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1056",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 759,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 758,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 762,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "2190:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 756,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "2159:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$644",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:6",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 621,
																				"src": "2159:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 766,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "2314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 775,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "2344:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$644",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 631,
																		"src": "2344:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 778,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "2368:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 779,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "2377:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 773,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 771,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "2294:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:6"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1839:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 742,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "1839:6:6"
													},
													"referencedDeclaration": 644,
													"src": "1839:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1853:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1870:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:6"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:6"
									},
									"scope": 1056,
									"src": "1818:573:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "2668:194:6",
										"statements": [
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "2678:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 801,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1056",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1056",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "2732:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 797,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "2701:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 621,
														"src": "2701:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 807,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "2770:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 810,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "2800:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$644",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:6",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 631,
																		"src": "2800:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:6",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 813,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "2824:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 814,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "2833:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 815,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "2848:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 808,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:6",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 806,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "2750:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:6"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2613:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 786,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "2613:6:6"
													},
													"referencedDeclaration": 644,
													"src": "2613:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2627:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "2644:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:6"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:6"
									},
									"scope": 1056,
									"src": "2582:280:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "3139:321:6",
										"statements": [
											{
												"id": 864,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:6",
												"statements": [
													{
														"assignments": [
															833
														],
														"declarations": [
															{
																"constant": false,
																"id": 833,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 864,
																"src": "3173:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 832,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 842,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 838,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1056",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1056",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 836,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 840,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "3227:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 834,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "3196:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$644",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "3196:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 844,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "3257:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 845,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "3273:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 843,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 849,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 851,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "3358:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$644",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 854,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 825,
																					"src": "3388:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$644",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 631,
																				"src": "3388:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:6",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 857,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "3412:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 858,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 833,
																				"src": "3421:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 859,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "3436:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 852,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:6",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$644",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 850,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "3338:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 863,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3084:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 823,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "3084:6:6"
													},
													"referencedDeclaration": 644,
													"src": "3084:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3098:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3115:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:6"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:6"
									},
									"scope": 1056,
									"src": "3053:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "3833:333:6",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3856:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 912,
														"src": "3843:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 877,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3843:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 881,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "3894:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$644",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3900:7:6",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 631,
																"src": "3894:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3908:8:6",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3894:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 884,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "3918:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "3927:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 879,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3871:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3875:18:6",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3871:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3843:90:6"
											},
											{
												"condition": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3948:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 889,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "3973:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$644",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 890,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "3980:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$644",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 888,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "3949:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3949:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 911,
												"nodeType": "IfStatement",
												"src": "3944:216:6",
												"trueBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "3995:165:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 894,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4029:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$644",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 897,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 870,
																						"src": "4059:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$644",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 898,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4065:7:6",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 631,
																					"src": "4059:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4073:8:6",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4059:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 900,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "4083:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4092:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 895,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4036:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4040:18:6",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4036:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4036:58:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$644",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 893,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "4009:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4009:86:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 904,
															"nodeType": "ExpressionStatement",
															"src": "4009:86:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 906,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4129:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$644",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 907,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "4136:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$644",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 905,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "4109:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4109:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 909,
															"nodeType": "ExpressionStatement",
															"src": "4109:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "3466:285:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3765:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3785:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3778:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 869,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 868,
														"name": "IERC20",
														"nameLocations": [
															"3778:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "3778:6:6"
													},
													"referencedDeclaration": 644,
													"src": "3778:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3800:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3792:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3817:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "3809:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3777:46:6"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3833:0:6"
									},
									"scope": 1056,
									"src": "3756:410:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "4533:257:6",
										"statements": [
											{
												"assignments": [
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4551:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "4543:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 934,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"id": 938,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "4578:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 936,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "4565:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$680",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4571:6:6",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 673,
														"src": "4565:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4565:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 944,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "4607:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4614:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 946,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "4623:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 947,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "4630:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 948,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "4640:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 949,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "4643:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 950,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "4646:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 941,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "4594:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$680",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4600:6:6",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 665,
														"src": "4594:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4594:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "4594:54:6"
											},
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4666:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "4658:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4658:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 959,
												"initialValue": {
													"arguments": [
														{
															"id": 957,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "4692:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 955,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "4679:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$680",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4685:6:6",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 673,
														"src": "4679:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4679:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4658:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 961,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "4716:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "4730:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4744:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4730:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4716:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4747:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 960,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4708:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "4708:75:6"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "4172:141:6",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4327:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4360:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4347:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$680",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 916,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 915,
														"name": "IERC20Permit",
														"nameLocations": [
															"4347:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 680,
														"src": "4347:12:6"
													},
													"referencedDeclaration": 680,
													"src": "4347:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$680",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4383:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4375:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4406:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4398:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4431:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4423:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4454:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4446:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4478:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4472:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 926,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4472:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 928,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4516:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4508:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 930,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4337:186:6"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4533:0:6"
									},
									"scope": 1056,
									"src": "4318:472:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "5243:572:6",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5605:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1006,
														"src": "5592:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 979,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5592:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 989,
												"initialValue": {
													"arguments": [
														{
															"id": 986,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "5646:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5652:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 983,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 974,
																	"src": "5626:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$644",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$644",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5618:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 981,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5618:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5618:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5633:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1146,
														"src": "5618:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5618:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5592:95:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 991,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "5705:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5716:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5705:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5726:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5705:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 997,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "5742:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5755:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 998,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5755:4:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1000,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5754:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 995,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5731:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5735:6:6",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5731:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5731:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5705:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5763:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5697:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5697:111:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "5697:111:6"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "4796:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5182:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5209:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "5202:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 973,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 972,
														"name": "IERC20",
														"nameLocations": [
															"5202:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "5202:6:6"
													},
													"referencedDeclaration": 644,
													"src": "5202:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5229:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "5216:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5216:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5201:33:6"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5243:0:6"
									},
									"scope": 1056,
									"src": "5173:642:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "6405:505:6",
										"statements": [
											{
												"assignments": [
													1019,
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6706:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "6701:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1018,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6701:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6728:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1054,
														"src": "6715:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1020,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6715:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"arguments": [
														{
															"id": 1027,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "6762:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1024,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "6750:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$644",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$644",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6742:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1022,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6742:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6742:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6757:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6742:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6742:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6700:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1030,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "6796:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1031,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "6808:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6819:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6808:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6829:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6808:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1037,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "6845:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1039,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6858:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1038,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6858:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1040,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6857:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1035,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6834:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6838:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6834:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6834:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6808:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1043,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6807:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6796:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1049,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "6896:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$644",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$644",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6888:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1047,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6888:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6888:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1045,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "6869:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$1386_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6877:10:6",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1074,
															"src": "6869:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6869:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6796:107:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1053,
												"nodeType": "Return",
												"src": "6777:126:6"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "5821:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6325:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6356:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "6349:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1009,
														"name": "IERC20",
														"nameLocations": [
															"6349:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "6349:6:6"
													},
													"referencedDeclaration": 644,
													"src": "6349:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6376:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "6363:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6363:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6348:33:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "6399:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6399:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:6:6"
									},
									"scope": 1056,
									"src": "6316:594:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1057,
							"src": "701:6211:6",
							"usedErrors": []
						}
					],
					"src": "115:6798:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1386
						]
					},
					"id": 1387,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1058,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1059,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1386,
							"linearizedBaseContracts": [
								1386
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "1478:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1067,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1702:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1072,
												"nodeType": "Return",
												"src": "1695:30:7"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1432:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:7"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1472:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:7"
									},
									"scope": 1386,
									"src": "1412:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "2718:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1085,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1386",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1386",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1083,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1088,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "2761:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:7"
											},
											{
												"assignments": [
													1094,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "2813:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1093,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1101,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1095,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "2831:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1097,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "2853:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "2882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:7"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2666:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "2693:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:7"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:7"
									},
									"scope": 1386,
									"src": "2647:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "3790:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1119,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "3829:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "3837:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1118,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1166,
															1210
														],
														"referencedDeclaration": 1210,
														"src": "3807:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1117,
												"id": 1124,
												"nodeType": "Return",
												"src": "3800:79:7"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3723:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3739:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3776:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:7"
									},
									"scope": 1386,
									"src": "3701:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "4255:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1139,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "4294:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1140,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "4302:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1142,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4311:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1138,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1166,
															1210
														],
														"referencedDeclaration": 1210,
														"src": "4272:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1137,
												"id": 1144,
												"nodeType": "Return",
												"src": "4265:59:7"
											}
										]
									},
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4139:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4163:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4190:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1132,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:7"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "4241:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:7"
									},
									"scope": 1386,
									"src": "4108:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "4806:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1159,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "4845:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "4853:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1161,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "4859:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1158,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1166,
															1210
														],
														"referencedDeclaration": 1210,
														"src": "4823:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1164,
												"nodeType": "Return",
												"src": "4816:94:7"
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "4724:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "4740:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "4759:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:7"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "4792:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:7"
									},
									"scope": 1386,
									"src": "4693:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "5344:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1183,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1386",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1386",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1181,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1186,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "5387:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:7"
											},
											{
												"assignments": [
													1192,
													1194
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1209,
														"src": "5446:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1191,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1194,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1209,
														"src": "5460:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1193,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"id": 1199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "5513:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1195,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "5487:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1197,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "5506:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1203,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "5562:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "5570:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "5579:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "5591:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1202,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "5535:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1179,
												"id": 1208,
												"nodeType": "Return",
												"src": "5528:76:7"
											}
										]
									},
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5205:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5229:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5256:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5279:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:7"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "5330:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:7"
									},
									"scope": 1386,
									"src": "5165:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "5888:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "5924:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "5932:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1220,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1227,
															1256
														],
														"referencedDeclaration": 1256,
														"src": "5905:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1219,
												"id": 1225,
												"nodeType": "Return",
												"src": "5898:80:7"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5816:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5832:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:7"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5874:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:7"
									},
									"scope": 1386,
									"src": "5788:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "6327:168:7",
										"statements": [
											{
												"assignments": [
													1240,
													1242
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "6338:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1242,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "6352:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1241,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"arguments": [
														{
															"id": 1245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "6397:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "6379:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "6446:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "6454:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1251,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "6463:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1252,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "6475:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1248,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "6419:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1254,
												"nodeType": "Return",
												"src": "6412:76:7"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6206:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6230:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6257:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:7"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6313:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:7"
									},
									"scope": 1386,
									"src": "6169:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "6771:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1267,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "6809:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1268,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "6817:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1266,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1273,
															1302
														],
														"referencedDeclaration": 1302,
														"src": "6788:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1271,
												"nodeType": "Return",
												"src": "6781:84:7"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6720:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:7"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "6757:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:7"
									},
									"scope": 1386,
									"src": "6674:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "7213:170:7",
										"statements": [
											{
												"assignments": [
													1286,
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "7224:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1285,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1301,
														"src": "7238:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1287,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"arguments": [
														{
															"id": 1291,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "7285:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1289,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "7265:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1295,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "7334:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1296,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "7342:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1297,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "7351:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1298,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "7363:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1294,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "7307:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1300,
												"nodeType": "Return",
												"src": "7300:76:7"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "7097:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "7121:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "7148:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "7199:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:7"
									},
									"scope": 1386,
									"src": "7058:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "7865:434:7",
										"statements": [
											{
												"condition": {
													"id": 1316,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1307,
													"src": "7879:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1338,
													"nodeType": "Block",
													"src": "8235:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1334,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "8257:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1335,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "8269:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1333,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "8249:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1337,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:7"
														}
													]
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "7875:418:7",
												"trueBody": {
													"id": 1332,
													"nodeType": "Block",
													"src": "7888:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1317,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "7906:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1329,
															"nodeType": "IfStatement",
															"src": "7902:286:7",
															"trueBody": {
																"id": 1328,
																"nodeType": "Block",
																"src": "7930:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1323,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1305,
																							"src": "8132:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1322,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1074,
																						"src": "8121:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1324,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1321,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1327,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1309,
																"src": "8208:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1315,
															"id": 1331,
															"nodeType": "Return",
															"src": "8201:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "7716:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "7740:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "7762:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "7795:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1310,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:7"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "7851:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:7"
									},
									"scope": 1386,
									"src": "7671:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "8680:135:7",
										"statements": [
											{
												"condition": {
													"id": 1353,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1344,
													"src": "8694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1362,
													"nodeType": "Block",
													"src": "8751:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1358,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "8773:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1359,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "8785:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1357,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "8765:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1361,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:7"
														}
													]
												},
												"id": 1363,
												"nodeType": "IfStatement",
												"src": "8690:119:7",
												"trueBody": {
													"id": 1356,
													"nodeType": "Block",
													"src": "8703:42:7",
													"statements": [
														{
															"expression": {
																"id": 1354,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "8724:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1352,
															"id": 1355,
															"nodeType": "Return",
															"src": "8717:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "8555:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "8577:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "8610:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:7"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "8666:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:7"
									},
									"scope": 1386,
									"src": "8520:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "8904:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1372,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "8980:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1382,
													"nodeType": "Block",
													"src": "9310:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1379,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "9331:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1378,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1381,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:7"
														}
													]
												},
												"id": 1383,
												"nodeType": "IfStatement",
												"src": "8976:379:7",
												"trueBody": {
													"id": 1377,
													"nodeType": "Block",
													"src": "9003:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1367,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1367,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:7",
																	"valueSize": 1
																}
															],
															"id": 1376,
															"nodeType": "InlineAssembly",
															"src": "9152:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "8838:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "8863:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:7"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:7"
									},
									"scope": 1386,
									"src": "8821:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1387,
							"src": "194:9169:7",
							"usedErrors": []
						}
					],
					"src": "101:9263:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1408
						]
					},
					"id": 1409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1388,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1389,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1408,
							"linearizedBaseContracts": [
								1408
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1394,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1393,
												"id": 1396,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1408,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1403,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1402,
												"id": 1405,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1408,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1409,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2539
						],
						"SignedMath": [
							2956
						],
						"Strings": [
							1637
						]
					},
					"id": 1638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1411,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1638,
							"sourceUnit": 2540,
							"src": "126:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1638,
							"sourceUnit": 2957,
							"src": "152:31:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1637,
							"linearizedBaseContracts": [
								1637
							],
							"name": "Strings",
							"nameLocation": "228:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1416,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1637,
									"src": "242:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1414,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1419,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1637,
									"src": "302:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1417,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1418,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "518:625:9",
										"statements": [
											{
												"id": 1465,
												"nodeType": "UncheckedBlock",
												"src": "528:609:9",
												"statements": [
													{
														"assignments": [
															1428
														],
														"declarations": [
															{
																"constant": false,
																"id": 1428,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1465,
																"src": "552:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1427,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1435,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1431,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "580:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1429,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2539,
																		"src": "569:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2539_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2376,
																	"src": "569:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:9"
													},
													{
														"assignments": [
															1437
														],
														"declarations": [
															{
																"constant": false,
																"id": 1437,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1465,
																"src": "604:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1436,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1442,
														"initialValue": {
															"arguments": [
																{
																	"id": 1440,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "638:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1438,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:9"
													},
													{
														"assignments": [
															1444
														],
														"declarations": [
															{
																"constant": false,
																"id": 1444,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1465,
																"src": "659:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1443,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1445,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1437,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1428,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1444,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:9",
																"valueSize": 1
															}
														],
														"id": 1446,
														"nodeType": "InlineAssembly",
														"src": "731:76:9"
													},
													{
														"body": {
															"id": 1461,
															"nodeType": "Block",
															"src": "833:267:9",
															"statements": [
																{
																	"expression": {
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:9",
																		"subExpression": {
																			"id": 1448,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1444,
																			"src": "851:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1450,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:9"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:9"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1416,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1444,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1422,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1451,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:9"
																},
																{
																	"expression": {
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1452,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "1035:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1455,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1456,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "1068:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1460,
																	"nodeType": "IfStatement",
																	"src": "1064:21:9",
																	"trueBody": {
																		"id": 1459,
																		"nodeType": "Break",
																		"src": "1080:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1462,
														"nodeType": "WhileStatement",
														"src": "820:280:9"
													},
													{
														"expression": {
															"id": 1463,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "1120:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1426,
														"id": 1464,
														"nodeType": "Return",
														"src": "1113:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "465:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:9"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "503:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:9"
									},
									"scope": 1637,
									"src": "447:696:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "1313:103:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1479,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "1354:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:9",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1488,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1470,
																					"src": "1400:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1486,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2956,
																					"src": "1385:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2956_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:9",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2955,
																				"src": "1385:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1485,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1467,
																			1495
																		],
																		"referencedDeclaration": 1467,
																		"src": "1376:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1477,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1475,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1493,
												"nodeType": "Return",
												"src": "1323:86:9"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "1261:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1469,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:9"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "1298:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:9"
									},
									"scope": 1637,
									"src": "1243:173:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "1595:100:9",
										"statements": [
											{
												"id": 1513,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1504,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "1648:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1507,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1498,
																				"src": "1667:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1505,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2539,
																				"src": "1655:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2539_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2499,
																			"src": "1655:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1503,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1515,
																	1591,
																	1611
																],
																"referencedDeclaration": 1591,
																"src": "1636:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1502,
														"id": 1512,
														"nodeType": "Return",
														"src": "1629:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1542:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:9"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1580:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:9"
									},
									"scope": 1637,
									"src": "1521:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "1908:347:9",
										"statements": [
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1590,
														"src": "1918:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1525,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1530,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1520,
																	"src": "1954:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:9"
											},
											{
												"expression": {
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1536,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "1975:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1538,
														"indexExpression": {
															"hexValue": "30",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:9"
											},
											{
												"expression": {
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1542,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2000:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1544,
														"indexExpression": {
															"hexValue": "31",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:9"
											},
											{
												"body": {
													"id": 1576,
													"nodeType": "Block",
													"src": "2070:83:9",
													"statements": [
														{
															"expression": {
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1562,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "2084:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1564,
																	"indexExpression": {
																		"id": 1563,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "2091:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1565,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "2096:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1569,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "2105:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1571,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:9"
														},
														{
															"expression": {
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1572,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "2131:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1575,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1556,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "2058:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1577,
												"initializationExpression": {
													"assignments": [
														1549
													],
													"declarations": [
														{
															"constant": false,
															"id": 1549,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1577,
															"src": "2030:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1548,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1555,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1551,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "2046:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:9",
														"subExpression": {
															"id": 1559,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "2067:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1561,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1579,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "2170:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1587,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2241:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1585,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1524,
												"id": 1589,
												"nodeType": "Return",
												"src": "2227:21:9"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1839:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1854:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:9"
									},
									"returnParameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1893:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1522,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:9"
									},
									"scope": 1637,
									"src": "1818:437:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "2480:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1604,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "2525:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1602,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1600,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1607,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2533:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1599,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1515,
															1591,
															1611
														],
														"referencedDeclaration": 1591,
														"src": "2497:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1598,
												"id": 1609,
												"nodeType": "Return",
												"src": "2490:59:9"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "2428:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "2465:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:9"
									},
									"scope": 1637,
									"src": "2407:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "2711:66:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1624,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "2744:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1622,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1621,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1630,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1616,
																		"src": "2767:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1628,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1627,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1634,
												"nodeType": "Return",
												"src": "2721:49:9"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2648:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2665:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1615,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:9"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "2705:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:9"
									},
									"scope": 1637,
									"src": "2633:144:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1638,
							"src": "220:2559:9",
							"usedErrors": []
						}
					],
					"src": "101:2679:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1661
						],
						"IERC165": [
							1673
						]
					},
					"id": 1662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1639,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 1674,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1642,
										"name": "IERC165",
										"nameLocations": [
											"754:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1673,
										"src": "754:7:10"
									},
									"id": 1643,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1641,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1661,
							"linearizedBaseContracts": [
								1661,
								1673
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1672
									],
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1652,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1654,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1673_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1673_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1653,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1673",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1658,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1648,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1649,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 1661,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1662,
							"src": "726:260:10",
							"usedErrors": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1673
						]
					},
					"id": 1674,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1663,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1664,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1673,
							"linearizedBaseContracts": [
								1673
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1666,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 1673,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1674,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2539
						]
					},
					"id": 2540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1676,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2539,
							"linearizedBaseContracts": [
								2539
							],
							"name": "Math",
							"nameLocation": "210:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1680,
									"members": [
										{
											"id": 1677,
											"name": "Down",
											"nameLocation": "245:4:12",
											"nodeType": "EnumValue",
											"src": "245:4:12"
										},
										{
											"id": 1678,
											"name": "Up",
											"nameLocation": "287:2:12",
											"nodeType": "EnumValue",
											"src": "287:2:12"
										},
										{
											"id": 1679,
											"name": "Zero",
											"nameLocation": "318:4:12",
											"nodeType": "EnumValue",
											"src": "318:4:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:12",
									"nodeType": "EnumDefinition",
									"src": "221:122:12"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "480:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1690,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "497:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1691,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "501:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1694,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "509:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:12",
													"trueExpression": {
														"id": 1693,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "505:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1696,
												"nodeType": "Return",
												"src": "490:20:12"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "426:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "437:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:12"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "471:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:12"
									},
									"scope": 2539,
									"src": "413:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "655:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1708,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "672:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1709,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "676:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1712,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "684:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:12",
													"trueExpression": {
														"id": 1711,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "680:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1707,
												"id": 1714,
												"nodeType": "Return",
												"src": "665:20:12"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "646:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:12"
									},
									"scope": 2539,
									"src": "588:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "876:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1726,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1727,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "935:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1729,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1730,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "941:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1731,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "945:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1733,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1737,
												"nodeType": "Return",
												"src": "923:28:12"
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "822:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "833:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:12"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "867:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:12"
									},
									"scope": 2539,
									"src": "805:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "1228:123:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1749,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "1316:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1753,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "1330:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1756,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1757,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "1339:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1748,
												"id": 1762,
												"nodeType": "Return",
												"src": "1309:35:12"
											}
										]
									},
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "1174:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "1185:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:12"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "1219:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:12"
									},
									"scope": 2539,
									"src": "1157:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "1765:4115:12",
										"statements": [
											{
												"id": 1885,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:12",
												"statements": [
													{
														"assignments": [
															1777
														],
														"declarations": [
															{
																"constant": false,
																"id": 1777,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 1885,
																"src": "2096:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1778,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:12"
													},
													{
														"assignments": [
															1780
														],
														"declarations": [
															{
																"constant": false,
																"id": 1780,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 1885,
																"src": "2168:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1779,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1781,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1780,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1767,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1767,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1769,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1769,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:12",
																"valueSize": 1
															}
														],
														"id": 1782,
														"nodeType": "InlineAssembly",
														"src": "2239:166:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1783,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "2486:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1791,
														"nodeType": "IfStatement",
														"src": "2482:368:12",
														"trueBody": {
															"id": 1790,
															"nodeType": "Block",
															"src": "2498:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1786,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "2816:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1787,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "2824:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1775,
																	"id": 1789,
																	"nodeType": "Return",
																	"src": "2809:26:12"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1793,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "2960:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1794,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "2974:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1792,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1798,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:12"
													},
													{
														"assignments": [
															1800
														],
														"declarations": [
															{
																"constant": false,
																"id": 1800,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 1885,
																"src": "3261:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1799,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1801,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:12"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:12"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1771,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1780,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1780,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1800,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1800,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1800,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1767,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1769,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:12",
																"valueSize": 1
															}
														],
														"id": 1802,
														"nodeType": "InlineAssembly",
														"src": "3292:300:12"
													},
													{
														"assignments": [
															1804
														],
														"declarations": [
															{
																"constant": false,
																"id": 1804,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 1885,
																"src": "3899:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1803,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1812,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1805,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "3914:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:12",
																			"subExpression": {
																				"id": 1806,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1771,
																				"src": "3930:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1810,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:12"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1771,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1771,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1777,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1804,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1804,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1804,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1804,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1804,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:12",
																"valueSize": 1
															}
														],
														"id": 1813,
														"nodeType": "InlineAssembly",
														"src": "3960:371:12"
													},
													{
														"expression": {
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1814,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "4397:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1815,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "4406:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1816,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "4414:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1819,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:12"
													},
													{
														"assignments": [
															1821
														],
														"declarations": [
															{
																"constant": false,
																"id": 1821,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 1885,
																"src": "4736:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1820,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1828,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1823,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "4759:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1825,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:12"
													},
													{
														"expression": {
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1829,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "4992:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1831,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "5007:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1832,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "5021:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1836,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:12"
													},
													{
														"expression": {
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1837,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "5061:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1839,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "5076:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1840,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "5090:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1844,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:12"
													},
													{
														"expression": {
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1845,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "5131:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1847,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "5146:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1848,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "5160:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1852,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:12"
													},
													{
														"expression": {
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1853,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "5201:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1855,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "5216:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1856,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "5230:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1860,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:12"
													},
													{
														"expression": {
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1861,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "5271:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1863,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "5286:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1864,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "5300:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1868,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:12"
													},
													{
														"expression": {
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1869,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "5342:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1871,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "5357:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1872,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "5371:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1876,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:12"
													},
													{
														"expression": {
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1877,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1774,
																"src": "5812:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1878,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "5821:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1879,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1821,
																	"src": "5829:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1882,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:12"
													},
													{
														"expression": {
															"id": 1883,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "5857:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1775,
														"id": 1884,
														"nodeType": "Return",
														"src": "5850:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1683:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1694:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1705:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:12"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "1749:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:12"
									},
									"scope": 2539,
									"src": "1667:4213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "6122:189:12",
										"statements": [
											{
												"assignments": [
													1903
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1930,
														"src": "6132:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1909,
												"initialValue": {
													"arguments": [
														{
															"id": 1905,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "6156:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1906,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "6159:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1907,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "6162:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1904,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1887,
															1931
														],
														"referencedDeclaration": 1887,
														"src": "6149:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1680",
															"typeString": "enum Math.Rounding"
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1910,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "6188:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1680",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1911,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1680,
																"src": "6200:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1680_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:12",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1678,
															"src": "6200:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1680",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1915,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "6222:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1916,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "6225:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1917,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "6228:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1914,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1927,
												"nodeType": "IfStatement",
												"src": "6184:98:12",
												"trueBody": {
													"id": 1926,
													"nodeType": "Block",
													"src": "6246:36:12",
													"statements": [
														{
															"expression": {
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1922,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "6260:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1925,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1928,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1903,
													"src": "6298:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1929,
												"nodeType": "Return",
												"src": "6291:13:12"
											}
										]
									},
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "6028:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "6039:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "6050:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "6071:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1895,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "6071:8:12"
													},
													"referencedDeclaration": 1680,
													"src": "6071:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:12"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "6113:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:12"
									},
									"scope": 2539,
									"src": "6012:299:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "6587:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1939,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "6601:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1945,
												"nodeType": "IfStatement",
												"src": "6597:45:12",
												"trueBody": {
													"id": 1944,
													"nodeType": "Block",
													"src": "6609:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1938,
															"id": 1943,
															"nodeType": "Return",
															"src": "6623:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													1947
												],
												"declarations": [
													{
														"constant": false,
														"id": 1947,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2042,
														"src": "7321:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1956,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1950,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1934,
																			"src": "7349:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1949,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2211,
																			2247
																		],
																		"referencedDeclaration": 2211,
																		"src": "7344:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1954,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:12"
											},
											{
												"id": 2041,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:12",
												"statements": [
													{
														"expression": {
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1957,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "7782:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1958,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "7792:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1959,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1934,
																					"src": "7801:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1960,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1947,
																					"src": "7805:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1963,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1967,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:12"
													},
													{
														"expression": {
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1968,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "7831:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1969,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "7841:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1970,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1934,
																					"src": "7850:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1971,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1947,
																					"src": "7854:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1974,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1978,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:12"
													},
													{
														"expression": {
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1979,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "7880:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1980,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "7890:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1981,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1934,
																					"src": "7899:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1982,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1947,
																					"src": "7903:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1985,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1989,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:12"
													},
													{
														"expression": {
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1990,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "7929:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1991,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "7939:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1992,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1934,
																					"src": "7948:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1993,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1947,
																					"src": "7952:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1996,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2000,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:12"
													},
													{
														"expression": {
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2001,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "7978:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2002,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "7988:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2003,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1934,
																					"src": "7997:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2004,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1947,
																					"src": "8001:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2007,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2011,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:12"
													},
													{
														"expression": {
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2012,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "8027:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2013,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "8037:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2014,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1934,
																					"src": "8046:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2015,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1947,
																					"src": "8050:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2018,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2022,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:12"
													},
													{
														"expression": {
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2023,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "8076:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2024,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1947,
																				"src": "8086:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2025,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1934,
																					"src": "8095:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2026,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1947,
																					"src": "8099:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2029,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2033,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2035,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "8136:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2036,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1934,
																		"src": "8144:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2037,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1947,
																		"src": "8148:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2034,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "8132:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1938,
														"id": 2040,
														"nodeType": "Return",
														"src": "8125:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "6544:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:12"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "6578:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:12"
									},
									"scope": 2539,
									"src": "6530:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "8348:161:12",
										"statements": [
											{
												"id": 2077,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:12",
												"statements": [
													{
														"assignments": [
															2055
														],
														"declarations": [
															{
																"constant": false,
																"id": 2055,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2077,
																"src": "8382:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2054,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2059,
														"initialValue": {
															"arguments": [
																{
																	"id": 2057,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "8404:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2056,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2043,
																	2079
																],
																"referencedDeclaration": 2043,
																"src": "8399:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2060,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "8427:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1680",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2064,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2061,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2049,
																					"src": "8437:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1680",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2062,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1680,
																						"src": "8449:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1680_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2063,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1678,
																					"src": "8449:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1680",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2067,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2065,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2055,
																						"src": "8464:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2066,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2055,
																						"src": "8473:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2068,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2046,
																					"src": "8482:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2074,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2053,
														"id": 2076,
														"nodeType": "Return",
														"src": "8420:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "8286:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "8297:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2047,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "8297:8:12"
													},
													"referencedDeclaration": 1680,
													"src": "8297:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:12"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "8339:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:12"
									},
									"scope": 2539,
									"src": "8272:237:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "8694:922:12",
										"statements": [
											{
												"assignments": [
													2088
												],
												"declarations": [
													{
														"constant": false,
														"id": 2088,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2210,
														"src": "8704:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2090,
												"initialValue": {
													"hexValue": "30",
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:12"
											},
											{
												"id": 2207,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2091,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "8760:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2105,
														"nodeType": "IfStatement",
														"src": "8756:99:12",
														"trueBody": {
															"id": 2104,
															"nodeType": "Block",
															"src": "8778:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2096,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "8796:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2099,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:12"
																},
																{
																	"expression": {
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2100,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "8827:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2103,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2106,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "8872:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2120,
														"nodeType": "IfStatement",
														"src": "8868:96:12",
														"trueBody": {
															"id": 2119,
															"nodeType": "Block",
															"src": "8889:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2111,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "8907:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2114,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:12"
																},
																{
																	"expression": {
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2115,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "8937:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2118,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2121,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "8981:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2135,
														"nodeType": "IfStatement",
														"src": "8977:96:12",
														"trueBody": {
															"id": 2134,
															"nodeType": "Block",
															"src": "8998:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2126,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "9016:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2129,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:12"
																},
																{
																	"expression": {
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2130,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "9046:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2133,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2136,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "9090:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2150,
														"nodeType": "IfStatement",
														"src": "9086:96:12",
														"trueBody": {
															"id": 2149,
															"nodeType": "Block",
															"src": "9107:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2141,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "9125:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2144,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:12"
																},
																{
																	"expression": {
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2145,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "9155:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2148,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2151,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "9199:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2165,
														"nodeType": "IfStatement",
														"src": "9195:93:12",
														"trueBody": {
															"id": 2164,
															"nodeType": "Block",
															"src": "9215:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2156,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "9233:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2159,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:12"
																},
																{
																	"expression": {
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2160,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "9262:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2163,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "9305:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2180,
														"nodeType": "IfStatement",
														"src": "9301:93:12",
														"trueBody": {
															"id": 2179,
															"nodeType": "Block",
															"src": "9321:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2171,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "9339:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2174,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:12"
																},
																{
																	"expression": {
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2175,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "9368:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2178,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2181,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "9411:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2195,
														"nodeType": "IfStatement",
														"src": "9407:93:12",
														"trueBody": {
															"id": 2194,
															"nodeType": "Block",
															"src": "9427:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "9445:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2189,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:12"
																},
																{
																	"expression": {
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2190,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "9474:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2193,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2196,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "9517:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2206,
														"nodeType": "IfStatement",
														"src": "9513:64:12",
														"trueBody": {
															"id": 2205,
															"nodeType": "Block",
															"src": "9533:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2201,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "9551:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2204,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2208,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2088,
													"src": "9603:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2086,
												"id": 2209,
												"nodeType": "Return",
												"src": "9596:13:12"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:12",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "8647:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:12"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "8685:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:12"
									},
									"scope": 2539,
									"src": "8633:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "9849:165:12",
										"statements": [
											{
												"id": 2245,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:12",
												"statements": [
													{
														"assignments": [
															2223
														],
														"declarations": [
															{
																"constant": false,
																"id": 2223,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2245,
																"src": "9883:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2222,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2227,
														"initialValue": {
															"arguments": [
																{
																	"id": 2225,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2214,
																	"src": "9905:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2224,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2211,
																	2247
																],
																"referencedDeclaration": 2211,
																"src": "9900:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2228,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "9932:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1680",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2229,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2217,
																					"src": "9942:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1680",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2230,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1680,
																						"src": "9954:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1680_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1678,
																					"src": "9954:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1680",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2233,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2234,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2223,
																						"src": "9974:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2236,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2214,
																					"src": "9983:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2242,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2221,
														"id": 2244,
														"nodeType": "Return",
														"src": "9925:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "9783:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "9798:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2216,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2215,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "9798:8:12"
													},
													"referencedDeclaration": 1680,
													"src": "9798:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:12"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "9840:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:12"
									},
									"scope": 2539,
									"src": "9769:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "10201:854:12",
										"statements": [
											{
												"assignments": [
													2256
												],
												"declarations": [
													{
														"constant": false,
														"id": 2256,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2375,
														"src": "10211:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2258,
												"initialValue": {
													"hexValue": "30",
													"id": 2257,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:12"
											},
											{
												"id": 2372,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2259,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "10267:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2275,
														"nodeType": "IfStatement",
														"src": "10263:103:12",
														"trueBody": {
															"id": 2274,
															"nodeType": "Block",
															"src": "10286:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2264,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "10304:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2269,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:12"
																},
																{
																	"expression": {
																		"id": 2272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2270,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "10339:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2273,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2276,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "10383:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2292,
														"nodeType": "IfStatement",
														"src": "10379:103:12",
														"trueBody": {
															"id": 2291,
															"nodeType": "Block",
															"src": "10402:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "10420:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2282,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2286,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:12"
																},
																{
																	"expression": {
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2287,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "10455:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2290,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2293,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "10499:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2309,
														"nodeType": "IfStatement",
														"src": "10495:103:12",
														"trueBody": {
															"id": 2308,
															"nodeType": "Block",
															"src": "10518:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "10536:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2303,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:12"
																},
																{
																	"expression": {
																		"id": 2306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2304,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "10571:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2307,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "10615:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2326,
														"nodeType": "IfStatement",
														"src": "10611:100:12",
														"trueBody": {
															"id": 2325,
															"nodeType": "Block",
															"src": "10633:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2315,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "10651:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2320,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:12"
																},
																{
																	"expression": {
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2321,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "10685:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2324,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2327,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "10728:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2343,
														"nodeType": "IfStatement",
														"src": "10724:100:12",
														"trueBody": {
															"id": 2342,
															"nodeType": "Block",
															"src": "10746:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "10764:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2337,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:12"
																},
																{
																	"expression": {
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2338,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "10798:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2341,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2344,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "10841:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2360,
														"nodeType": "IfStatement",
														"src": "10837:100:12",
														"trueBody": {
															"id": 2359,
															"nodeType": "Block",
															"src": "10859:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2349,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2250,
																			"src": "10877:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2354,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:12"
																},
																{
																	"expression": {
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2355,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "10911:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2358,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2361,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "10954:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2371,
														"nodeType": "IfStatement",
														"src": "10950:66:12",
														"trueBody": {
															"id": 2370,
															"nodeType": "Block",
															"src": "10972:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2366,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2256,
																			"src": "10990:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2369,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2373,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2256,
													"src": "11042:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2254,
												"id": 2374,
												"nodeType": "Return",
												"src": "11035:13:12"
											}
										]
									},
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:12",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "10154:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:12"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "10192:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:12"
									},
									"scope": 2539,
									"src": "10139:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "11290:167:12",
										"statements": [
											{
												"id": 2410,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:12",
												"statements": [
													{
														"assignments": [
															2388
														],
														"declarations": [
															{
																"constant": false,
																"id": 2388,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2410,
																"src": "11324:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2387,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2392,
														"initialValue": {
															"arguments": [
																{
																	"id": 2390,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2379,
																	"src": "11347:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2389,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2376,
																	2412
																],
																"referencedDeclaration": 2376,
																"src": "11341:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2393,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "11374:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1680",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2394,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2382,
																					"src": "11384:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1680",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2395,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1680,
																						"src": "11396:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1680_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1678,
																					"src": "11396:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1680",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2398,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2399,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2388,
																						"src": "11417:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2401,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2379,
																					"src": "11426:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2386,
														"id": 2409,
														"nodeType": "Return",
														"src": "11367:73:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "11224:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "11239:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2380,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "11239:8:12"
													},
													"referencedDeclaration": 1680,
													"src": "11239:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:12"
									},
									"returnParameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "11281:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:12"
									},
									"scope": 2539,
									"src": "11209:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "11771:600:12",
										"statements": [
											{
												"assignments": [
													2421
												],
												"declarations": [
													{
														"constant": false,
														"id": 2421,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2498,
														"src": "11781:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2423,
												"initialValue": {
													"hexValue": "30",
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:12"
											},
											{
												"id": 2495,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2424,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2415,
																	"src": "11837:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2438,
														"nodeType": "IfStatement",
														"src": "11833:98:12",
														"trueBody": {
															"id": 2437,
															"nodeType": "Block",
															"src": "11855:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2429,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2415,
																			"src": "11873:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2432,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:12"
																},
																{
																	"expression": {
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2433,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2421,
																			"src": "11904:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2436,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2439,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2415,
																	"src": "11948:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "11944:95:12",
														"trueBody": {
															"id": 2452,
															"nodeType": "Block",
															"src": "11965:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2444,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2415,
																			"src": "11983:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2447,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:12"
																},
																{
																	"expression": {
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2421,
																			"src": "12013:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2451,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2415,
																	"src": "12056:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2468,
														"nodeType": "IfStatement",
														"src": "12052:95:12",
														"trueBody": {
															"id": 2467,
															"nodeType": "Block",
															"src": "12073:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2415,
																			"src": "12091:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2462,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:12"
																},
																{
																	"expression": {
																		"id": 2465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2463,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2421,
																			"src": "12121:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2466,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2469,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2415,
																	"src": "12164:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2483,
														"nodeType": "IfStatement",
														"src": "12160:95:12",
														"trueBody": {
															"id": 2482,
															"nodeType": "Block",
															"src": "12181:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2415,
																			"src": "12199:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:12"
																},
																{
																	"expression": {
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2478,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2421,
																			"src": "12229:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2481,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2484,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2415,
																	"src": "12272:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2494,
														"nodeType": "IfStatement",
														"src": "12268:64:12",
														"trueBody": {
															"id": 2493,
															"nodeType": "Block",
															"src": "12288:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2421,
																			"src": "12306:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2496,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2421,
													"src": "12358:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2419,
												"id": 2497,
												"nodeType": "Return",
												"src": "12351:13:12"
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:12",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "11724:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:12"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "11762:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:12"
									},
									"scope": 2539,
									"src": "11708:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "12608:174:12",
										"statements": [
											{
												"id": 2536,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:12",
												"statements": [
													{
														"assignments": [
															2511
														],
														"declarations": [
															{
																"constant": false,
																"id": 2511,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2536,
																"src": "12642:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2510,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2515,
														"initialValue": {
															"arguments": [
																{
																	"id": 2513,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "12666:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2512,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2499,
																	2538
																],
																"referencedDeclaration": 2499,
																"src": "12659:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2516,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2511,
																"src": "12693:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1680",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2517,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2505,
																					"src": "12703:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1680",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2518,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1680,
																						"src": "12715:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1680_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1678,
																					"src": "12715:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1680",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2521,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2524,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2522,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2511,
																									"src": "12736:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2523,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2525,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2527,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2502,
																					"src": "12751:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2533,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2509,
														"id": 2535,
														"nodeType": "Return",
														"src": "12686:79:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "12542:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "12557:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1680",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2503,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1680,
														"src": "12557:8:12"
													},
													"referencedDeclaration": 1680,
													"src": "12557:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1680",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:12"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "12599:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:12"
									},
									"scope": 2539,
									"src": "12526:256:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2540,
							"src": "202:12582:12",
							"usedErrors": []
						}
					],
					"src": "103:12682:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2851
						]
					},
					"id": 2852,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2541,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2542,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:13",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2851,
							"linearizedBaseContracts": [
								2851
							],
							"name": "SafeMath",
							"nameLocation": "490:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2573,
										"nodeType": "Block",
										"src": "717:140:13",
										"statements": [
											{
												"id": 2572,
												"nodeType": "UncheckedBlock",
												"src": "727:124:13",
												"statements": [
													{
														"assignments": [
															2555
														],
														"declarations": [
															{
																"constant": false,
																"id": 2555,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2572,
																"src": "751:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2554,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2559,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2556,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2545,
																"src": "763:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2557,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2547,
																"src": "767:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2560,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "786:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2561,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2545,
																"src": "790:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2567,
														"nodeType": "IfStatement",
														"src": "782:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2553,
															"id": 2566,
															"nodeType": "Return",
															"src": "793:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2569,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "838:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2570,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2553,
														"id": 2571,
														"nodeType": "Return",
														"src": "824:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2543,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "657:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "668:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:13"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "702:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2574,
												"src": "708:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:13"
									},
									"scope": 2851,
									"src": "641:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "1078:113:13",
										"statements": [
											{
												"id": 2600,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2586,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "1116:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2587,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2577,
																"src": "1120:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2593,
														"nodeType": "IfStatement",
														"src": "1112:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2591,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2585,
															"id": 2592,
															"nodeType": "Return",
															"src": "1123:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2595,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "1168:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2596,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "1172:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2598,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2585,
														"id": 2599,
														"nodeType": "Return",
														"src": "1154:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2575,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1018:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1029:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:13"
									},
									"returnParameters": {
										"id": 2585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1063:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "1069:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:13"
									},
									"scope": 2851,
									"src": "1002:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2643,
										"nodeType": "Block",
										"src": "1415:417:13",
										"statements": [
											{
												"id": 2642,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2614,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2605,
																"src": "1683:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2621,
														"nodeType": "IfStatement",
														"src": "1679:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2619,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2613,
															"id": 2620,
															"nodeType": "Return",
															"src": "1691:16:13"
														}
													},
													{
														"assignments": [
															2623
														],
														"declarations": [
															{
																"constant": false,
																"id": 2623,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2642,
																"src": "1721:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2622,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2627,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2624,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2605,
																"src": "1733:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2625,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "1737:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2628,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2623,
																	"src": "1756:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2629,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2605,
																	"src": "1760:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2631,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "1765:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2637,
														"nodeType": "IfStatement",
														"src": "1752:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2635,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2613,
															"id": 2636,
															"nodeType": "Return",
															"src": "1768:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2639,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2623,
																	"src": "1813:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2640,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2613,
														"id": 2641,
														"nodeType": "Return",
														"src": "1799:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "1355:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "1366:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:13"
									},
									"returnParameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "1400:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "1406:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:13"
									},
									"scope": 2851,
									"src": "1339:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2671,
										"nodeType": "Block",
										"src": "2057:114:13",
										"statements": [
											{
												"id": 2670,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2656,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2649,
																"src": "2095:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2663,
														"nodeType": "IfStatement",
														"src": "2091:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2661,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2655,
															"id": 2662,
															"nodeType": "Return",
															"src": "2103:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2665,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2647,
																		"src": "2148:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2666,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2649,
																		"src": "2152:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2668,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2655,
														"id": 2669,
														"nodeType": "Return",
														"src": "2134:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2645,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "1997:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "2008:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:13"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "2042:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "2048:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:13"
									},
									"scope": 2851,
									"src": "1981:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2699,
										"nodeType": "Block",
										"src": "2406:114:13",
										"statements": [
											{
												"id": 2698,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2684,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2677,
																"src": "2444:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2691,
														"nodeType": "IfStatement",
														"src": "2440:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2689,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2683,
															"id": 2690,
															"nodeType": "Return",
															"src": "2452:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2693,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2675,
																		"src": "2497:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2694,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2677,
																		"src": "2501:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2696,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2683,
														"id": 2697,
														"nodeType": "Return",
														"src": "2483:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "2346:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "2357:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:13"
									},
									"returnParameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "2391:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "2397:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:13"
									},
									"scope": 2851,
									"src": "2330:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2714,
										"nodeType": "Block",
										"src": "2822:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2710,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2703,
														"src": "2839:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2711,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "2843:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2709,
												"id": 2713,
												"nodeType": "Return",
												"src": "2832:12:13"
											}
										]
									},
									"documentation": {
										"id": 2701,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:13",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "2768:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "2779:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:13"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "2813:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:13"
									},
									"scope": 2851,
									"src": "2755:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "3189:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2725,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2718,
														"src": "3206:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2726,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2720,
														"src": "3210:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2724,
												"id": 2728,
												"nodeType": "Return",
												"src": "3199:12:13"
											}
										]
									},
									"documentation": {
										"id": 2716,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:13",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3135:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3146:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:13"
									},
									"returnParameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2730,
												"src": "3180:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:13"
									},
									"scope": 2851,
									"src": "3122:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2744,
										"nodeType": "Block",
										"src": "3532:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2740,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "3549:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2741,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2735,
														"src": "3553:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2739,
												"id": 2743,
												"nodeType": "Return",
												"src": "3542:12:13"
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:13",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2733,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "3478:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "3489:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:13"
									},
									"returnParameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2745,
												"src": "3523:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:13"
									},
									"scope": 2851,
									"src": "3465:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2759,
										"nodeType": "Block",
										"src": "3917:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2755,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2748,
														"src": "3934:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2756,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "3938:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2754,
												"id": 2758,
												"nodeType": "Return",
												"src": "3927:12:13"
											}
										]
									},
									"documentation": {
										"id": 2746,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:13",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "3863:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "3874:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:13"
									},
									"returnParameters": {
										"id": 2754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2760,
												"src": "3908:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:13"
									},
									"scope": 2851,
									"src": "3850:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "4466:29:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2770,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2763,
														"src": "4483:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2771,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "4487:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2769,
												"id": 2773,
												"nodeType": "Return",
												"src": "4476:12:13"
											}
										]
									},
									"documentation": {
										"id": 2761,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "4412:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "4423:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:13"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "4457:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:13"
									},
									"scope": 2851,
									"src": "4399:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "5054:106:13",
										"statements": [
											{
												"id": 2798,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2788,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2780,
																		"src": "5096:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2789,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2778,
																		"src": "5101:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2791,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "5104:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2787,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2793,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2794,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2778,
																"src": "5138:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2795,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2780,
																"src": "5142:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2786,
														"id": 2797,
														"nodeType": "Return",
														"src": "5131:12:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2776,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:13",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "4972:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "4983:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "4994:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:13"
									},
									"returnParameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "5045:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:13"
									},
									"scope": 2851,
									"src": "4959:201:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2824,
										"nodeType": "Block",
										"src": "5739:105:13",
										"statements": [
											{
												"id": 2823,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2813,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2805,
																		"src": "5781:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2816,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "5788:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2812,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2818,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2819,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2803,
																"src": "5822:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2820,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2805,
																"src": "5826:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2811,
														"id": 2822,
														"nodeType": "Return",
														"src": "5815:12:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2801,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:13",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "5657:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "5668:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "5679:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2806,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:13"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "5730:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:13"
									},
									"scope": 2851,
									"src": "5644:200:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2849,
										"nodeType": "Block",
										"src": "6585:105:13",
										"statements": [
											{
												"id": 2848,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2838,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2830,
																		"src": "6627:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2841,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2832,
																	"src": "6634:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2837,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2843,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2844,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2828,
																"src": "6668:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2845,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2830,
																"src": "6672:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2836,
														"id": 2847,
														"nodeType": "Return",
														"src": "6661:12:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2826,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "6503:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "6514:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "6525:26:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:13"
									},
									"returnParameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "6576:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:13"
									},
									"scope": 2851,
									"src": "6490:200:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2852,
							"src": "482:6210:13",
							"usedErrors": []
						}
					],
					"src": "107:6586:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2956
						]
					},
					"id": 2957,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2853,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2854,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2956,
							"linearizedBaseContracts": [
								2956
							],
							"name": "SignedMath",
							"nameLocation": "223:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2871,
										"nodeType": "Block",
										"src": "375:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2864,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2857,
															"src": "392:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2865,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "396:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2868,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2859,
														"src": "404:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:14",
													"trueExpression": {
														"id": 2867,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "400:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2863,
												"id": 2870,
												"nodeType": "Return",
												"src": "385:20:14"
											}
										]
									},
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "324:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2856,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "334:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2858,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:14"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "367:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2861,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:14"
									},
									"scope": 2956,
									"src": "311:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2889,
										"nodeType": "Block",
										"src": "554:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2882,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2875,
															"src": "571:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2883,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2877,
															"src": "575:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2886,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2877,
														"src": "583:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:14",
													"trueExpression": {
														"id": 2885,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2875,
														"src": "579:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2881,
												"id": 2888,
												"nodeType": "Return",
												"src": "564:20:14"
											}
										]
									},
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "503:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "513:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2876,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:14"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "546:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2879,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:14"
									},
									"scope": 2956,
									"src": "490:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2933,
										"nodeType": "Block",
										"src": "796:162:14",
										"statements": [
											{
												"assignments": [
													2901
												],
												"declarations": [
													{
														"constant": false,
														"id": 2901,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2933,
														"src": "858:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2900,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2914,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2902,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2893,
																	"src": "870:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2903,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2895,
																	"src": "874:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2905,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2906,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2893,
																				"src": "881:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2907,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2895,
																				"src": "885:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2909,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2912,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2915,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "910:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2920,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2901,
																						"src": "930:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2919,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2918,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2921,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2916,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2925,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2893,
																				"src": "944:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2926,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2895,
																				"src": "948:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2928,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2930,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2899,
												"id": 2932,
												"nodeType": "Return",
												"src": "903:48:14"
											}
										]
									},
									"documentation": {
										"id": 2891,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "745:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2892,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "755:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2894,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:14"
									},
									"returnParameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "788:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2897,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:14"
									},
									"scope": 2956,
									"src": "728:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "1102:158:14",
										"statements": [
											{
												"id": 2953,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2944,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "1227:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:14",
																		"subExpression": {
																			"id": 2948,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2937,
																			"src": "1241:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:14",
																	"trueExpression": {
																		"id": 2947,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2937,
																		"src": "1236:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2942,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2941,
														"id": 2952,
														"nodeType": "Return",
														"src": "1212:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2935,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "1060:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2936,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:14"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "1093:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:14"
									},
									"scope": 2956,
									"src": "1047:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2957,
							"src": "215:1047:14",
							"usedErrors": []
						}
					],
					"src": "109:1154:14"
				},
				"id": 14
			},
			"tests/Reserves-collateral.sol": {
				"ast": {
					"absolutePath": "tests/Reserves-collateral.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Address": [
							1386
						],
						"Context": [
							1408
						],
						"ERC165": [
							1661
						],
						"ESPEEReserves": [
							3207
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1673
						],
						"IERC20": [
							644
						],
						"IERC20Permit": [
							680
						],
						"Math": [
							2539
						],
						"Ownable": [
							501
						],
						"ReentrancyGuard": [
							566
						],
						"SafeERC20": [
							1056
						],
						"SafeMath": [
							2851
						],
						"SignedMath": [
							2956
						],
						"Strings": [
							1637
						]
					},
					"id": 3208,
					"license": "MIT LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2958,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3208,
							"sourceUnit": 645,
							"src": "41:56:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2959,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3208,
							"sourceUnit": 1057,
							"src": "98:65:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2960,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3208,
							"sourceUnit": 2852,
							"src": "164:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3208,
							"sourceUnit": 502,
							"src": "222:52:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3208,
							"sourceUnit": 567,
							"src": "275:62:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2963,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3208,
							"sourceUnit": 316,
							"src": "338:58:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 2964,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "399:26:15"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2965,
										"name": "Ownable",
										"nameLocations": [
											"453:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 501,
										"src": "453:7:15"
									},
									"id": 2966,
									"nodeType": "InheritanceSpecifier",
									"src": "453:7:15"
								},
								{
									"baseName": {
										"id": 2967,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"462:15:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 566,
										"src": "462:15:15"
									},
									"id": 2968,
									"nodeType": "InheritanceSpecifier",
									"src": "462:15:15"
								},
								{
									"baseName": {
										"id": 2969,
										"name": "AccessControl",
										"nameLocations": [
											"479:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "479:13:15"
									},
									"id": 2970,
									"nodeType": "InheritanceSpecifier",
									"src": "479:13:15"
								}
							],
							"canonicalName": "ESPEEReserves",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3207,
							"linearizedBaseContracts": [
								3207,
								315,
								1661,
								1673,
								388,
								566,
								501,
								1408
							],
							"name": "ESPEEReserves",
							"nameLocation": "436:13:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2973,
									"libraryName": {
										"id": 2971,
										"name": "SafeMath",
										"nameLocations": [
											"505:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2851,
										"src": "505:8:15"
									},
									"nodeType": "UsingForDirective",
									"src": "499:27:15",
									"typeName": {
										"id": 2972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "518:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2977,
									"libraryName": {
										"id": 2974,
										"name": "SafeERC20",
										"nameLocations": [
											"537:9:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1056,
										"src": "537:9:15"
									},
									"nodeType": "UsingForDirective",
									"src": "531:27:15",
									"typeName": {
										"id": 2976,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2975,
											"name": "IERC20",
											"nameLocations": [
												"551:6:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 644,
											"src": "551:6:15"
										},
										"referencedDeclaration": 644,
										"src": "551:6:15",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$644",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "5306f102",
									"id": 2979,
									"mutability": "mutable",
									"name": "currentReserveId",
									"nameLocation": "579:16:15",
									"nodeType": "VariableDeclaration",
									"scope": 3207,
									"src": "564:31:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2978,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ESPEEReserves.ReserveVault",
									"id": 2985,
									"members": [
										{
											"constant": false,
											"id": 2982,
											"mutability": "mutable",
											"name": "collateral",
											"nameLocation": "639:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2985,
											"src": "632:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$644",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 2981,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2980,
													"name": "IERC20",
													"nameLocations": [
														"632:6:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 644,
													"src": "632:6:15"
												},
												"referencedDeclaration": 644,
												"src": "632:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2984,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "667:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2985,
											"src": "659:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2983,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "659:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReserveVault",
									"nameLocation": "609:12:15",
									"nodeType": "StructDefinition",
									"scope": 3207,
									"src": "602:78:15",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "279ba28d",
									"id": 2990,
									"mutability": "mutable",
									"name": "_rsvVault",
									"nameLocation": "726:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3207,
									"src": "686:49:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
										"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault)"
									},
									"typeName": {
										"id": 2989,
										"keyType": {
											"id": 2986,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "694:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "686:32:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
											"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault)"
										},
										"valueType": {
											"id": 2988,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2987,
												"name": "ReserveVault",
												"nameLocations": [
													"705:12:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2985,
												"src": "705:12:15"
											},
											"referencedDeclaration": 2985,
											"src": "705:12:15",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ReserveVault_$2985_storage_ptr",
												"typeString": "struct ESPEEReserves.ReserveVault"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c8",
									"id": 2996,
									"name": "Withdraw",
									"nameLocation": "748:8:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"indexed": true,
												"mutability": "mutable",
												"name": "vid",
												"nameLocation": "774:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "758:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "787:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "779:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:37:15"
									},
									"src": "742:53:15"
								},
								{
									"anonymous": false,
									"eventSelector": "a3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c55",
									"id": 3002,
									"name": "Deposit",
									"nameLocation": "806:7:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"indexed": true,
												"mutability": "mutable",
												"name": "vid",
												"nameLocation": "831:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "815:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3000,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "844:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "836:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:37:15"
									},
									"src": "800:52:15"
								},
								{
									"constant": true,
									"functionSelector": "ec87621c",
									"id": 3007,
									"mutability": "constant",
									"name": "MANAGER_ROLE",
									"nameLocation": "882:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3207,
									"src": "858:64:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3003,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "858:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d414e414745525f524f4c45",
												"id": 3005,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "907:14:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08",
													"typeString": "literal_string \"MANAGER_ROLE\""
												},
												"value": "MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08",
													"typeString": "literal_string \"MANAGER_ROLE\""
												}
											],
											"id": 3004,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "897:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3006,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "897:25:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3022,
										"nodeType": "Block",
										"src": "943:109:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3011,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "964:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3012,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "984:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "984:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3010,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "953:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "953:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3015,
												"nodeType": "ExpressionStatement",
												"src": "953:44:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3017,
															"name": "MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3007,
															"src": "1018:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3018,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "1032:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1032:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3016,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1007:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1007:38:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3021,
												"nodeType": "ExpressionStatement",
												"src": "1007:38:15"
											}
										]
									},
									"id": 3023,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:2:15"
									},
									"returnParameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:0:15"
									},
									"scope": 3207,
									"src": "929:123:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "1122:165:15",
										"statements": [
											{
												"body": {
													"id": 3048,
													"nodeType": "Block",
													"src": "1173:108:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$644",
																			"typeString": "contract IERC20"
																		},
																		"id": 3044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3039,
																					"name": "_rsvVault",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2990,
																					"src": "1195:9:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
																						"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault storage ref)"
																					}
																				},
																				"id": 3041,
																				"indexExpression": {
																					"id": 3040,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3030,
																					"src": "1205:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1195:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ReserveVault_$2985_storage",
																					"typeString": "struct ESPEEReserves.ReserveVault storage ref"
																				}
																			},
																			"id": 3042,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1208:10:15",
																			"memberName": "collateral",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2982,
																			"src": "1195:23:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$644",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 3043,
																			"name": "_collateral",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3026,
																			"src": "1222:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$644",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "1195:38:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436f6c6c61746572616c204164647265737320416c7265616479204164646564",
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1235:34:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0",
																			"typeString": "literal_string \"Collateral Address Already Added\""
																		},
																		"value": "Collateral Address Already Added"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b93291308e9f1dd4e6702681e5411a281051c59439ab7ff66533111821917ac0",
																			"typeString": "literal_string \"Collateral Address Already Added\""
																		}
																	],
																	"id": 3038,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1187:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1187:83:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3047,
															"nodeType": "ExpressionStatement",
															"src": "1187:83:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3032,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3030,
														"src": "1147:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3033,
														"name": "currentReserveId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "1151:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1147:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3049,
												"initializationExpression": {
													"assignments": [
														3030
													],
													"declarations": [
														{
															"constant": false,
															"id": 3030,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1144:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3049,
															"src": "1136:9:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3029,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1136:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3031,
													"nodeType": "VariableDeclarationStatement",
													"src": "1136:9:15"
												},
												"loopExpression": {
													"expression": {
														"id": 3036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1169:3:15",
														"subExpression": {
															"id": 3035,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3030,
															"src": "1169:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3037,
													"nodeType": "ExpressionStatement",
													"src": "1169:3:15"
												},
												"nodeType": "ForStatement",
												"src": "1132:149:15"
											}
										]
									},
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkReserveContract",
									"nameLocation": "1067:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "_collateral",
												"nameLocation": "1095:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "1088:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 3025,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3024,
														"name": "IERC20",
														"nameLocations": [
															"1088:6:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "1088:6:15"
													},
													"referencedDeclaration": 644,
													"src": "1088:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:20:15"
									},
									"returnParameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:0:15"
									},
									"scope": 3207,
									"src": "1058:229:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "1347:209:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3059,
																	"name": "MANAGER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3007,
																	"src": "1373:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3060,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "1387:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1387:12:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3058,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1365:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1365:35:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f776564",
															"id": 3063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1402:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															},
															"value": "Not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															}
														],
														"id": 3057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1357:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1357:59:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3065,
												"nodeType": "ExpressionStatement",
												"src": "1357:59:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3067,
															"name": "_collateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3054,
															"src": "1447:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														],
														"id": 3066,
														"name": "checkReserveContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3051,
														"src": "1426:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$644_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:33:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3069,
												"nodeType": "ExpressionStatement",
												"src": "1426:33:15"
											},
											{
												"expression": {
													"id": 3075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3070,
																"name": "_rsvVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2990,
																"src": "1469:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
																	"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault storage ref)"
																}
															},
															"id": 3072,
															"indexExpression": {
																"id": 3071,
																"name": "currentReserveId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2979,
																"src": "1479:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1469:27:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveVault_$2985_storage",
																"typeString": "struct ESPEEReserves.ReserveVault storage ref"
															}
														},
														"id": 3073,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1497:10:15",
														"memberName": "collateral",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2982,
														"src": "1469:38:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$644",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3074,
														"name": "_collateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3054,
														"src": "1510:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$644",
															"typeString": "contract IERC20"
														}
													},
													"src": "1469:52:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"id": 3076,
												"nodeType": "ExpressionStatement",
												"src": "1469:52:15"
											},
											{
												"expression": {
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1531:18:15",
													"subExpression": {
														"id": 3077,
														"name": "currentReserveId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2979,
														"src": "1531:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3079,
												"nodeType": "ExpressionStatement",
												"src": "1531:18:15"
											}
										]
									},
									"functionSelector": "3b61f098",
									"id": 3081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addReserveVault",
									"nameLocation": "1302:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "_collateral",
												"nameLocation": "1325:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "1318:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$644",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 3053,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3052,
														"name": "IERC20",
														"nameLocations": [
															"1318:6:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "1318:6:15"
													},
													"referencedDeclaration": 644,
													"src": "1318:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1317:20:15"
									},
									"returnParameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1347:0:15"
									},
									"scope": 3207,
									"src": "1293:263:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3142,
										"nodeType": "Block",
										"src": "1627:369:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3090,
																	"name": "MANAGER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3007,
																	"src": "1653:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3091,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "1667:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1667:12:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3089,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1645:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1645:35:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f776564",
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1682:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															},
															"value": "Not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															}
														],
														"id": 3088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1637:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1637:59:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3096,
												"nodeType": "ExpressionStatement",
												"src": "1637:59:15"
											},
											{
												"assignments": [
													3099
												],
												"declarations": [
													{
														"constant": false,
														"id": 3099,
														"mutability": "mutable",
														"name": "reserves",
														"nameLocation": "1713:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 3142,
														"src": "1706:15:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$644",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 3098,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3097,
																"name": "IERC20",
																"nameLocations": [
																	"1706:6:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 644,
																"src": "1706:6:15"
															},
															"referencedDeclaration": 644,
															"src": "1706:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3104,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3100,
															"name": "_rsvVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2990,
															"src": "1724:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
																"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault storage ref)"
															}
														},
														"id": 3102,
														"indexExpression": {
															"id": 3101,
															"name": "vid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3083,
															"src": "1734:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1724:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveVault_$2985_storage",
															"typeString": "struct ESPEEReserves.ReserveVault storage ref"
														}
													},
													"id": 3103,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1739:10:15",
													"memberName": "collateral",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2982,
													"src": "1724:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1706:43:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3110,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1793:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1797:6:15",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1793:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1785:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3108,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1785:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1785:19:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3115,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1814:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ESPEEReserves_$3207",
																		"typeString": "contract ESPEEReserves"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ESPEEReserves_$3207",
																		"typeString": "contract ESPEEReserves"
																	}
																],
																"id": 3114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1806:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1806:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1806:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3085,
															"src": "1821:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3105,
															"name": "reserves",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3099,
															"src": "1759:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														},
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1768:16:15",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 740,
														"src": "1759:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$644_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 3118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1759:69:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3119,
												"nodeType": "ExpressionStatement",
												"src": "1759:69:15"
											},
											{
												"assignments": [
													3121
												],
												"declarations": [
													{
														"constant": false,
														"id": 3121,
														"mutability": "mutable",
														"name": "currentVaultBalance",
														"nameLocation": "1846:19:15",
														"nodeType": "VariableDeclaration",
														"scope": 3142,
														"src": "1838:27:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1838:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3126,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3122,
															"name": "_rsvVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2990,
															"src": "1868:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
																"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault storage ref)"
															}
														},
														"id": 3124,
														"indexExpression": {
															"id": 3123,
															"name": "vid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3083,
															"src": "1878:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1868:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveVault_$2985_storage",
															"typeString": "struct ESPEEReserves.ReserveVault storage ref"
														}
													},
													"id": 3125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1883:6:15",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2984,
													"src": "1868:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1838:51:15"
											},
											{
												"expression": {
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3127,
																"name": "_rsvVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2990,
																"src": "1899:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
																	"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault storage ref)"
																}
															},
															"id": 3129,
															"indexExpression": {
																"id": 3128,
																"name": "vid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3083,
																"src": "1909:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1899:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReserveVault_$2985_storage",
																"typeString": "struct ESPEEReserves.ReserveVault storage ref"
															}
														},
														"id": 3130,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1914:6:15",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2984,
														"src": "1899:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3133,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3085,
																"src": "1947:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3131,
																"name": "currentVaultBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3121,
																"src": "1923:19:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1943:3:15",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2715,
															"src": "1923:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1923:31:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1899:55:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "1899:55:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3138,
															"name": "vid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3083,
															"src": "1977:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3139,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3085,
															"src": "1982:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3137,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "1969:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1969:20:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3141,
												"nodeType": "EmitStatement",
												"src": "1964:25:15"
											}
										]
									},
									"functionSelector": "ece13732",
									"id": 3143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositCollateral",
									"nameLocation": "1571:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "vid",
												"nameLocation": "1597:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "1589:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1610:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3143,
												"src": "1602:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1588:29:15"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1627:0:15"
									},
									"scope": 3207,
									"src": "1562:434:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3205,
										"nodeType": "Block",
										"src": "2068:418:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3152,
																	"name": "MANAGER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3007,
																	"src": "2094:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3153,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "2108:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2108:12:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3151,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "2086:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 3155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2086:35:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f776564",
															"id": 3156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															},
															"value": "Not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															}
														],
														"id": 3150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2078:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2078:59:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3158,
												"nodeType": "ExpressionStatement",
												"src": "2078:59:15"
											},
											{
												"assignments": [
													3161
												],
												"declarations": [
													{
														"constant": false,
														"id": 3161,
														"mutability": "mutable",
														"name": "reserves",
														"nameLocation": "2154:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 3205,
														"src": "2147:15:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$644",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 3160,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3159,
																"name": "IERC20",
																"nameLocations": [
																	"2147:6:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 644,
																"src": "2147:6:15"
															},
															"referencedDeclaration": 644,
															"src": "2147:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$644",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3166,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3162,
															"name": "_rsvVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2990,
															"src": "2165:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
																"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault storage ref)"
															}
														},
														"id": 3164,
														"indexExpression": {
															"id": 3163,
															"name": "vid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3145,
															"src": "2175:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2165:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveVault_$2985_storage",
															"typeString": "struct ESPEEReserves.ReserveVault storage ref"
														}
													},
													"id": 3165,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2180:10:15",
													"memberName": "collateral",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2982,
													"src": "2165:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$644",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2147:43:15"
											},
											{
												"assignments": [
													3168
												],
												"declarations": [
													{
														"constant": false,
														"id": 3168,
														"mutability": "mutable",
														"name": "currentVaultBalance",
														"nameLocation": "2208:19:15",
														"nodeType": "VariableDeclaration",
														"scope": 3205,
														"src": "2200:27:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2200:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3173,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3169,
															"name": "_rsvVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2990,
															"src": "2230:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
																"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault storage ref)"
															}
														},
														"id": 3171,
														"indexExpression": {
															"id": 3170,
															"name": "vid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3145,
															"src": "2240:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2230:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReserveVault_$2985_storage",
															"typeString": "struct ESPEEReserves.ReserveVault storage ref"
														}
													},
													"id": 3172,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2245:6:15",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2984,
													"src": "2230:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2200:51:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3174,
														"name": "currentVaultBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3168,
														"src": "2265:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3175,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "2288:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2265:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3204,
												"nodeType": "IfStatement",
												"src": "2261:219:15",
												"trueBody": {
													"id": 3203,
													"nodeType": "Block",
													"src": "2296:184:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 3182,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2340:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2344:6:15",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2340:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2332:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3180,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2332:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2332:19:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3185,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3147,
																		"src": "2353:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3177,
																		"name": "reserves",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3161,
																		"src": "2310:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$644",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2319:12:15",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 713,
																	"src": "2310:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$644_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$644_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 3186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2310:50:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3187,
															"nodeType": "ExpressionStatement",
															"src": "2310:50:15"
														},
														{
															"expression": {
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3188,
																			"name": "_rsvVault",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2990,
																			"src": "2374:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ReserveVault_$2985_storage_$",
																				"typeString": "mapping(uint256 => struct ESPEEReserves.ReserveVault storage ref)"
																			}
																		},
																		"id": 3190,
																		"indexExpression": {
																			"id": 3189,
																			"name": "vid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3145,
																			"src": "2384:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2374:14:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ReserveVault_$2985_storage",
																			"typeString": "struct ESPEEReserves.ReserveVault storage ref"
																		}
																	},
																	"id": 3191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2389:6:15",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2984,
																	"src": "2374:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3194,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3147,
																			"src": "2422:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3192,
																			"name": "currentVaultBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3168,
																			"src": "2398:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2418:3:15",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2730,
																		"src": "2398:23:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2398:31:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2374:55:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3197,
															"nodeType": "ExpressionStatement",
															"src": "2374:55:15"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3199,
																		"name": "vid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3145,
																		"src": "2457:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3200,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3147,
																		"src": "2462:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3198,
																	"name": "Withdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2996,
																	"src": "2448:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2448:21:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3202,
															"nodeType": "EmitStatement",
															"src": "2443:26:15"
														}
													]
												}
											}
										]
									},
									"functionSelector": "767a7b05",
									"id": 3206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawCollateral",
									"nameLocation": "2011:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3145,
												"mutability": "mutable",
												"name": "vid",
												"nameLocation": "2038:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "2030:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2051:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3206,
												"src": "2043:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:29:15"
									},
									"returnParameters": {
										"id": 3149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2068:0:15"
									},
									"scope": 3207,
									"src": "2002:484:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3208,
							"src": "427:2061:15",
							"usedErrors": []
						}
					],
					"src": "41:2448:15"
				},
				"id": 15
			}
		}
	}
}